//
// Generated by Bluespec Compiler, version 2023.07 (build 0eb551dc)
//
// On Tue Jul 29 14:28:01 +04 2025
//
//
// Ports:
// Name                         I/O  size props
// mv_fbfull                      O     1
// mv_fbempty                     O     1
// mv_fbhead_valid                O     1
// mav_allocate_line              O     2 reg
// RDY_mav_allocate_line          O     1 const
// RDY_ma_fill_from_memory        O     1 const
// mv_release_info                O   545
// RDY_mv_release_info            O     1 const
// RDY_ma_perform_release         O     1 const
// mav_polling_response           O    39
// RDY_mav_polling_response       O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// mav_allocate_line_from_ram     I     1
// mav_allocate_line_dataline     I   512
// mav_allocate_line_address      I    32 reg
// ma_fill_from_memory_mem_resp   I    67
// ma_fill_from_memory_fbindex    I     2
// ma_fill_from_memory_init_bank  I     4
// mav_polling_response_address   I    32
// mav_polling_response_fill      I     1
// mav_polling_response_fbindex   I     2
// EN_ma_fill_from_memory         I     1
// EN_ma_perform_release          I     1
// EN_mav_allocate_line           I     1
// EN_mav_polling_response        I     1 unused
//
// Combinational paths from inputs to outputs:
//   (mav_polling_response_address,
//    mav_polling_response_fill,
//    mav_polling_response_fbindex) -> mav_polling_response
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkicache_fb_v2(CLK,
		      RST_N,

		      mv_fbfull,

		      mv_fbempty,

		      mv_fbhead_valid,

		      mav_allocate_line_from_ram,
		      mav_allocate_line_dataline,
		      mav_allocate_line_address,
		      EN_mav_allocate_line,
		      mav_allocate_line,
		      RDY_mav_allocate_line,

		      ma_fill_from_memory_mem_resp,
		      ma_fill_from_memory_fbindex,
		      ma_fill_from_memory_init_bank,
		      EN_ma_fill_from_memory,
		      RDY_ma_fill_from_memory,

		      mv_release_info,
		      RDY_mv_release_info,

		      EN_ma_perform_release,
		      RDY_ma_perform_release,

		      mav_polling_response_address,
		      mav_polling_response_fill,
		      mav_polling_response_fbindex,
		      EN_mav_polling_response,
		      mav_polling_response,
		      RDY_mav_polling_response);
  parameter [31 : 0] id = 32'b0;
  input  CLK;
  input  RST_N;

  // value method mv_fbfull
  output mv_fbfull;

  // value method mv_fbempty
  output mv_fbempty;

  // value method mv_fbhead_valid
  output mv_fbhead_valid;

  // actionvalue method mav_allocate_line
  input  mav_allocate_line_from_ram;
  input  [511 : 0] mav_allocate_line_dataline;
  input  [31 : 0] mav_allocate_line_address;
  input  EN_mav_allocate_line;
  output [1 : 0] mav_allocate_line;
  output RDY_mav_allocate_line;

  // action method ma_fill_from_memory
  input  [66 : 0] ma_fill_from_memory_mem_resp;
  input  [1 : 0] ma_fill_from_memory_fbindex;
  input  [3 : 0] ma_fill_from_memory_init_bank;
  input  EN_ma_fill_from_memory;
  output RDY_ma_fill_from_memory;

  // value method mv_release_info
  output [544 : 0] mv_release_info;
  output RDY_mv_release_info;

  // action method ma_perform_release
  input  EN_ma_perform_release;
  output RDY_ma_perform_release;

  // actionvalue method mav_polling_response
  input  [31 : 0] mav_polling_response_address;
  input  mav_polling_response_fill;
  input  [1 : 0] mav_polling_response_fbindex;
  input  EN_mav_polling_response;
  output [38 : 0] mav_polling_response;
  output RDY_mav_polling_response;

  // signals for module outputs
  reg mv_fbhead_valid;
  wire [544 : 0] mv_release_info;
  wire [38 : 0] mav_polling_response;
  wire [1 : 0] mav_allocate_line;
  wire RDY_ma_fill_from_memory,
       RDY_ma_perform_release,
       RDY_mav_allocate_line,
       RDY_mav_polling_response,
       RDY_mv_release_info,
       mv_fbempty,
       mv_fbfull;

  // register rg_fb_enables
  reg [15 : 0] rg_fb_enables;
  wire [15 : 0] rg_fb_enables_D_IN;
  wire rg_fb_enables_EN;

  // register rg_fbhead
  reg [1 : 0] rg_fbhead;
  wire [1 : 0] rg_fbhead_D_IN;
  wire rg_fbhead_EN;

  // register rg_fbtail
  reg [1 : 0] rg_fbtail;
  wire [1 : 0] rg_fbtail_D_IN;
  wire rg_fbtail_EN;

  // register rg_next_bank
  reg [3 : 0] rg_next_bank;
  wire [3 : 0] rg_next_bank_D_IN;
  wire rg_next_bank_EN;

  // register v_fb_addr_0
  reg [31 : 0] v_fb_addr_0;
  wire [31 : 0] v_fb_addr_0_D_IN;
  wire v_fb_addr_0_EN;

  // register v_fb_addr_1
  reg [31 : 0] v_fb_addr_1;
  wire [31 : 0] v_fb_addr_1_D_IN;
  wire v_fb_addr_1_EN;

  // register v_fb_addr_2
  reg [31 : 0] v_fb_addr_2;
  wire [31 : 0] v_fb_addr_2_D_IN;
  wire v_fb_addr_2_EN;

  // register v_fb_addr_3
  reg [31 : 0] v_fb_addr_3;
  wire [31 : 0] v_fb_addr_3_D_IN;
  wire v_fb_addr_3_EN;

  // register v_fb_addr_valid_0
  reg v_fb_addr_valid_0;
  wire v_fb_addr_valid_0_D_IN, v_fb_addr_valid_0_EN;

  // register v_fb_addr_valid_1
  reg v_fb_addr_valid_1;
  wire v_fb_addr_valid_1_D_IN, v_fb_addr_valid_1_EN;

  // register v_fb_addr_valid_2
  reg v_fb_addr_valid_2;
  wire v_fb_addr_valid_2_D_IN, v_fb_addr_valid_2_EN;

  // register v_fb_addr_valid_3
  reg v_fb_addr_valid_3;
  wire v_fb_addr_valid_3_D_IN, v_fb_addr_valid_3_EN;

  // register v_fb_data_0_0
  reg [31 : 0] v_fb_data_0_0;
  wire [31 : 0] v_fb_data_0_0_D_IN;
  wire v_fb_data_0_0_EN;

  // register v_fb_data_0_1
  reg [31 : 0] v_fb_data_0_1;
  wire [31 : 0] v_fb_data_0_1_D_IN;
  wire v_fb_data_0_1_EN;

  // register v_fb_data_0_10
  reg [31 : 0] v_fb_data_0_10;
  wire [31 : 0] v_fb_data_0_10_D_IN;
  wire v_fb_data_0_10_EN;

  // register v_fb_data_0_11
  reg [31 : 0] v_fb_data_0_11;
  wire [31 : 0] v_fb_data_0_11_D_IN;
  wire v_fb_data_0_11_EN;

  // register v_fb_data_0_12
  reg [31 : 0] v_fb_data_0_12;
  wire [31 : 0] v_fb_data_0_12_D_IN;
  wire v_fb_data_0_12_EN;

  // register v_fb_data_0_13
  reg [31 : 0] v_fb_data_0_13;
  wire [31 : 0] v_fb_data_0_13_D_IN;
  wire v_fb_data_0_13_EN;

  // register v_fb_data_0_14
  reg [31 : 0] v_fb_data_0_14;
  wire [31 : 0] v_fb_data_0_14_D_IN;
  wire v_fb_data_0_14_EN;

  // register v_fb_data_0_15
  reg [31 : 0] v_fb_data_0_15;
  wire [31 : 0] v_fb_data_0_15_D_IN;
  wire v_fb_data_0_15_EN;

  // register v_fb_data_0_2
  reg [31 : 0] v_fb_data_0_2;
  wire [31 : 0] v_fb_data_0_2_D_IN;
  wire v_fb_data_0_2_EN;

  // register v_fb_data_0_3
  reg [31 : 0] v_fb_data_0_3;
  wire [31 : 0] v_fb_data_0_3_D_IN;
  wire v_fb_data_0_3_EN;

  // register v_fb_data_0_4
  reg [31 : 0] v_fb_data_0_4;
  wire [31 : 0] v_fb_data_0_4_D_IN;
  wire v_fb_data_0_4_EN;

  // register v_fb_data_0_5
  reg [31 : 0] v_fb_data_0_5;
  wire [31 : 0] v_fb_data_0_5_D_IN;
  wire v_fb_data_0_5_EN;

  // register v_fb_data_0_6
  reg [31 : 0] v_fb_data_0_6;
  wire [31 : 0] v_fb_data_0_6_D_IN;
  wire v_fb_data_0_6_EN;

  // register v_fb_data_0_7
  reg [31 : 0] v_fb_data_0_7;
  wire [31 : 0] v_fb_data_0_7_D_IN;
  wire v_fb_data_0_7_EN;

  // register v_fb_data_0_8
  reg [31 : 0] v_fb_data_0_8;
  wire [31 : 0] v_fb_data_0_8_D_IN;
  wire v_fb_data_0_8_EN;

  // register v_fb_data_0_9
  reg [31 : 0] v_fb_data_0_9;
  wire [31 : 0] v_fb_data_0_9_D_IN;
  wire v_fb_data_0_9_EN;

  // register v_fb_data_1_0
  reg [31 : 0] v_fb_data_1_0;
  wire [31 : 0] v_fb_data_1_0_D_IN;
  wire v_fb_data_1_0_EN;

  // register v_fb_data_1_1
  reg [31 : 0] v_fb_data_1_1;
  wire [31 : 0] v_fb_data_1_1_D_IN;
  wire v_fb_data_1_1_EN;

  // register v_fb_data_1_10
  reg [31 : 0] v_fb_data_1_10;
  wire [31 : 0] v_fb_data_1_10_D_IN;
  wire v_fb_data_1_10_EN;

  // register v_fb_data_1_11
  reg [31 : 0] v_fb_data_1_11;
  wire [31 : 0] v_fb_data_1_11_D_IN;
  wire v_fb_data_1_11_EN;

  // register v_fb_data_1_12
  reg [31 : 0] v_fb_data_1_12;
  wire [31 : 0] v_fb_data_1_12_D_IN;
  wire v_fb_data_1_12_EN;

  // register v_fb_data_1_13
  reg [31 : 0] v_fb_data_1_13;
  wire [31 : 0] v_fb_data_1_13_D_IN;
  wire v_fb_data_1_13_EN;

  // register v_fb_data_1_14
  reg [31 : 0] v_fb_data_1_14;
  wire [31 : 0] v_fb_data_1_14_D_IN;
  wire v_fb_data_1_14_EN;

  // register v_fb_data_1_15
  reg [31 : 0] v_fb_data_1_15;
  wire [31 : 0] v_fb_data_1_15_D_IN;
  wire v_fb_data_1_15_EN;

  // register v_fb_data_1_2
  reg [31 : 0] v_fb_data_1_2;
  wire [31 : 0] v_fb_data_1_2_D_IN;
  wire v_fb_data_1_2_EN;

  // register v_fb_data_1_3
  reg [31 : 0] v_fb_data_1_3;
  wire [31 : 0] v_fb_data_1_3_D_IN;
  wire v_fb_data_1_3_EN;

  // register v_fb_data_1_4
  reg [31 : 0] v_fb_data_1_4;
  wire [31 : 0] v_fb_data_1_4_D_IN;
  wire v_fb_data_1_4_EN;

  // register v_fb_data_1_5
  reg [31 : 0] v_fb_data_1_5;
  wire [31 : 0] v_fb_data_1_5_D_IN;
  wire v_fb_data_1_5_EN;

  // register v_fb_data_1_6
  reg [31 : 0] v_fb_data_1_6;
  wire [31 : 0] v_fb_data_1_6_D_IN;
  wire v_fb_data_1_6_EN;

  // register v_fb_data_1_7
  reg [31 : 0] v_fb_data_1_7;
  wire [31 : 0] v_fb_data_1_7_D_IN;
  wire v_fb_data_1_7_EN;

  // register v_fb_data_1_8
  reg [31 : 0] v_fb_data_1_8;
  wire [31 : 0] v_fb_data_1_8_D_IN;
  wire v_fb_data_1_8_EN;

  // register v_fb_data_1_9
  reg [31 : 0] v_fb_data_1_9;
  wire [31 : 0] v_fb_data_1_9_D_IN;
  wire v_fb_data_1_9_EN;

  // register v_fb_data_2_0
  reg [31 : 0] v_fb_data_2_0;
  wire [31 : 0] v_fb_data_2_0_D_IN;
  wire v_fb_data_2_0_EN;

  // register v_fb_data_2_1
  reg [31 : 0] v_fb_data_2_1;
  wire [31 : 0] v_fb_data_2_1_D_IN;
  wire v_fb_data_2_1_EN;

  // register v_fb_data_2_10
  reg [31 : 0] v_fb_data_2_10;
  wire [31 : 0] v_fb_data_2_10_D_IN;
  wire v_fb_data_2_10_EN;

  // register v_fb_data_2_11
  reg [31 : 0] v_fb_data_2_11;
  wire [31 : 0] v_fb_data_2_11_D_IN;
  wire v_fb_data_2_11_EN;

  // register v_fb_data_2_12
  reg [31 : 0] v_fb_data_2_12;
  wire [31 : 0] v_fb_data_2_12_D_IN;
  wire v_fb_data_2_12_EN;

  // register v_fb_data_2_13
  reg [31 : 0] v_fb_data_2_13;
  wire [31 : 0] v_fb_data_2_13_D_IN;
  wire v_fb_data_2_13_EN;

  // register v_fb_data_2_14
  reg [31 : 0] v_fb_data_2_14;
  wire [31 : 0] v_fb_data_2_14_D_IN;
  wire v_fb_data_2_14_EN;

  // register v_fb_data_2_15
  reg [31 : 0] v_fb_data_2_15;
  wire [31 : 0] v_fb_data_2_15_D_IN;
  wire v_fb_data_2_15_EN;

  // register v_fb_data_2_2
  reg [31 : 0] v_fb_data_2_2;
  wire [31 : 0] v_fb_data_2_2_D_IN;
  wire v_fb_data_2_2_EN;

  // register v_fb_data_2_3
  reg [31 : 0] v_fb_data_2_3;
  wire [31 : 0] v_fb_data_2_3_D_IN;
  wire v_fb_data_2_3_EN;

  // register v_fb_data_2_4
  reg [31 : 0] v_fb_data_2_4;
  wire [31 : 0] v_fb_data_2_4_D_IN;
  wire v_fb_data_2_4_EN;

  // register v_fb_data_2_5
  reg [31 : 0] v_fb_data_2_5;
  wire [31 : 0] v_fb_data_2_5_D_IN;
  wire v_fb_data_2_5_EN;

  // register v_fb_data_2_6
  reg [31 : 0] v_fb_data_2_6;
  wire [31 : 0] v_fb_data_2_6_D_IN;
  wire v_fb_data_2_6_EN;

  // register v_fb_data_2_7
  reg [31 : 0] v_fb_data_2_7;
  wire [31 : 0] v_fb_data_2_7_D_IN;
  wire v_fb_data_2_7_EN;

  // register v_fb_data_2_8
  reg [31 : 0] v_fb_data_2_8;
  wire [31 : 0] v_fb_data_2_8_D_IN;
  wire v_fb_data_2_8_EN;

  // register v_fb_data_2_9
  reg [31 : 0] v_fb_data_2_9;
  wire [31 : 0] v_fb_data_2_9_D_IN;
  wire v_fb_data_2_9_EN;

  // register v_fb_data_3_0
  reg [31 : 0] v_fb_data_3_0;
  wire [31 : 0] v_fb_data_3_0_D_IN;
  wire v_fb_data_3_0_EN;

  // register v_fb_data_3_1
  reg [31 : 0] v_fb_data_3_1;
  wire [31 : 0] v_fb_data_3_1_D_IN;
  wire v_fb_data_3_1_EN;

  // register v_fb_data_3_10
  reg [31 : 0] v_fb_data_3_10;
  wire [31 : 0] v_fb_data_3_10_D_IN;
  wire v_fb_data_3_10_EN;

  // register v_fb_data_3_11
  reg [31 : 0] v_fb_data_3_11;
  wire [31 : 0] v_fb_data_3_11_D_IN;
  wire v_fb_data_3_11_EN;

  // register v_fb_data_3_12
  reg [31 : 0] v_fb_data_3_12;
  wire [31 : 0] v_fb_data_3_12_D_IN;
  wire v_fb_data_3_12_EN;

  // register v_fb_data_3_13
  reg [31 : 0] v_fb_data_3_13;
  wire [31 : 0] v_fb_data_3_13_D_IN;
  wire v_fb_data_3_13_EN;

  // register v_fb_data_3_14
  reg [31 : 0] v_fb_data_3_14;
  wire [31 : 0] v_fb_data_3_14_D_IN;
  wire v_fb_data_3_14_EN;

  // register v_fb_data_3_15
  reg [31 : 0] v_fb_data_3_15;
  wire [31 : 0] v_fb_data_3_15_D_IN;
  wire v_fb_data_3_15_EN;

  // register v_fb_data_3_2
  reg [31 : 0] v_fb_data_3_2;
  wire [31 : 0] v_fb_data_3_2_D_IN;
  wire v_fb_data_3_2_EN;

  // register v_fb_data_3_3
  reg [31 : 0] v_fb_data_3_3;
  wire [31 : 0] v_fb_data_3_3_D_IN;
  wire v_fb_data_3_3_EN;

  // register v_fb_data_3_4
  reg [31 : 0] v_fb_data_3_4;
  wire [31 : 0] v_fb_data_3_4_D_IN;
  wire v_fb_data_3_4_EN;

  // register v_fb_data_3_5
  reg [31 : 0] v_fb_data_3_5;
  wire [31 : 0] v_fb_data_3_5_D_IN;
  wire v_fb_data_3_5_EN;

  // register v_fb_data_3_6
  reg [31 : 0] v_fb_data_3_6;
  wire [31 : 0] v_fb_data_3_6_D_IN;
  wire v_fb_data_3_6_EN;

  // register v_fb_data_3_7
  reg [31 : 0] v_fb_data_3_7;
  wire [31 : 0] v_fb_data_3_7_D_IN;
  wire v_fb_data_3_7_EN;

  // register v_fb_data_3_8
  reg [31 : 0] v_fb_data_3_8;
  wire [31 : 0] v_fb_data_3_8_D_IN;
  wire v_fb_data_3_8_EN;

  // register v_fb_data_3_9
  reg [31 : 0] v_fb_data_3_9;
  wire [31 : 0] v_fb_data_3_9_D_IN;
  wire v_fb_data_3_9_EN;

  // register v_fb_err_0
  reg v_fb_err_0;
  wire v_fb_err_0_D_IN, v_fb_err_0_EN;

  // register v_fb_err_1
  reg v_fb_err_1;
  wire v_fb_err_1_D_IN, v_fb_err_1_EN;

  // register v_fb_err_2
  reg v_fb_err_2;
  wire v_fb_err_2_D_IN, v_fb_err_2_EN;

  // register v_fb_err_3
  reg v_fb_err_3;
  wire v_fb_err_3_D_IN, v_fb_err_3_EN;

  // register v_fb_line_valid_0
  reg v_fb_line_valid_0;
  reg v_fb_line_valid_0_D_IN;
  wire v_fb_line_valid_0_EN;

  // register v_fb_line_valid_1
  reg v_fb_line_valid_1;
  reg v_fb_line_valid_1_D_IN;
  wire v_fb_line_valid_1_EN;

  // register v_fb_line_valid_2
  reg v_fb_line_valid_2;
  reg v_fb_line_valid_2_D_IN;
  wire v_fb_line_valid_2_EN;

  // register v_fb_line_valid_3
  reg v_fb_line_valid_3;
  reg v_fb_line_valid_3_D_IN;
  wire v_fb_line_valid_3_EN;

  // rule scheduling signals
  wire CAN_FIRE_ma_fill_from_memory,
       CAN_FIRE_ma_perform_release,
       CAN_FIRE_mav_allocate_line,
       CAN_FIRE_mav_polling_response,
       WILL_FIRE_ma_fill_from_memory,
       WILL_FIRE_ma_perform_release,
       WILL_FIRE_mav_allocate_line,
       WILL_FIRE_mav_polling_response;

  // inputs to muxes for submodule ports
  wire [31 : 0] MUX_v_fb_data_0_0_write_1__VAL_1,
		MUX_v_fb_data_0_1_write_1__VAL_1,
		MUX_v_fb_data_0_10_write_1__VAL_1,
		MUX_v_fb_data_0_11_write_1__VAL_1,
		MUX_v_fb_data_0_12_write_1__VAL_1,
		MUX_v_fb_data_0_13_write_1__VAL_1,
		MUX_v_fb_data_0_14_write_1__VAL_1,
		MUX_v_fb_data_0_15_write_1__VAL_1,
		MUX_v_fb_data_0_2_write_1__VAL_1,
		MUX_v_fb_data_0_3_write_1__VAL_1,
		MUX_v_fb_data_0_4_write_1__VAL_1,
		MUX_v_fb_data_0_5_write_1__VAL_1,
		MUX_v_fb_data_0_6_write_1__VAL_1,
		MUX_v_fb_data_0_7_write_1__VAL_1,
		MUX_v_fb_data_0_8_write_1__VAL_1,
		MUX_v_fb_data_0_9_write_1__VAL_1,
		MUX_v_fb_data_1_0_write_1__VAL_1,
		MUX_v_fb_data_1_1_write_1__VAL_1,
		MUX_v_fb_data_1_10_write_1__VAL_1,
		MUX_v_fb_data_1_11_write_1__VAL_1,
		MUX_v_fb_data_1_12_write_1__VAL_1,
		MUX_v_fb_data_1_13_write_1__VAL_1,
		MUX_v_fb_data_1_14_write_1__VAL_1,
		MUX_v_fb_data_1_15_write_1__VAL_1,
		MUX_v_fb_data_1_2_write_1__VAL_1,
		MUX_v_fb_data_1_3_write_1__VAL_1,
		MUX_v_fb_data_1_4_write_1__VAL_1,
		MUX_v_fb_data_1_5_write_1__VAL_1,
		MUX_v_fb_data_1_6_write_1__VAL_1,
		MUX_v_fb_data_1_7_write_1__VAL_1,
		MUX_v_fb_data_1_8_write_1__VAL_1,
		MUX_v_fb_data_1_9_write_1__VAL_1,
		MUX_v_fb_data_2_0_write_1__VAL_1,
		MUX_v_fb_data_2_1_write_1__VAL_1,
		MUX_v_fb_data_2_10_write_1__VAL_1,
		MUX_v_fb_data_2_11_write_1__VAL_1,
		MUX_v_fb_data_2_12_write_1__VAL_1,
		MUX_v_fb_data_2_13_write_1__VAL_1,
		MUX_v_fb_data_2_14_write_1__VAL_1,
		MUX_v_fb_data_2_15_write_1__VAL_1,
		MUX_v_fb_data_2_2_write_1__VAL_1,
		MUX_v_fb_data_2_3_write_1__VAL_1,
		MUX_v_fb_data_2_4_write_1__VAL_1,
		MUX_v_fb_data_2_5_write_1__VAL_1,
		MUX_v_fb_data_2_6_write_1__VAL_1,
		MUX_v_fb_data_2_7_write_1__VAL_1,
		MUX_v_fb_data_2_8_write_1__VAL_1,
		MUX_v_fb_data_2_9_write_1__VAL_1,
		MUX_v_fb_data_3_0_write_1__VAL_1,
		MUX_v_fb_data_3_1_write_1__VAL_1,
		MUX_v_fb_data_3_10_write_1__VAL_1,
		MUX_v_fb_data_3_11_write_1__VAL_1,
		MUX_v_fb_data_3_12_write_1__VAL_1,
		MUX_v_fb_data_3_13_write_1__VAL_1,
		MUX_v_fb_data_3_14_write_1__VAL_1,
		MUX_v_fb_data_3_15_write_1__VAL_1,
		MUX_v_fb_data_3_2_write_1__VAL_1,
		MUX_v_fb_data_3_3_write_1__VAL_1,
		MUX_v_fb_data_3_4_write_1__VAL_1,
		MUX_v_fb_data_3_5_write_1__VAL_1,
		MUX_v_fb_data_3_6_write_1__VAL_1,
		MUX_v_fb_data_3_7_write_1__VAL_1,
		MUX_v_fb_data_3_8_write_1__VAL_1,
		MUX_v_fb_data_3_9_write_1__VAL_1;
  wire MUX_v_fb_addr_valid_0_write_1__SEL_1,
       MUX_v_fb_addr_valid_0_write_1__SEL_2,
       MUX_v_fb_addr_valid_1_write_1__SEL_1,
       MUX_v_fb_addr_valid_1_write_1__SEL_2,
       MUX_v_fb_addr_valid_2_write_1__SEL_1,
       MUX_v_fb_addr_valid_2_write_1__SEL_2,
       MUX_v_fb_addr_valid_3_write_1__SEL_1,
       MUX_v_fb_addr_valid_3_write_1__SEL_2,
       MUX_v_fb_data_0_0_write_1__SEL_1,
       MUX_v_fb_data_0_1_write_1__SEL_1,
       MUX_v_fb_data_0_10_write_1__SEL_1,
       MUX_v_fb_data_0_11_write_1__SEL_1,
       MUX_v_fb_data_0_12_write_1__SEL_1,
       MUX_v_fb_data_0_13_write_1__SEL_1,
       MUX_v_fb_data_0_14_write_1__SEL_1,
       MUX_v_fb_data_0_15_write_1__SEL_1,
       MUX_v_fb_data_0_2_write_1__SEL_1,
       MUX_v_fb_data_0_3_write_1__SEL_1,
       MUX_v_fb_data_0_4_write_1__SEL_1,
       MUX_v_fb_data_0_5_write_1__SEL_1,
       MUX_v_fb_data_0_6_write_1__SEL_1,
       MUX_v_fb_data_0_7_write_1__SEL_1,
       MUX_v_fb_data_0_8_write_1__SEL_1,
       MUX_v_fb_data_0_9_write_1__SEL_1,
       MUX_v_fb_data_1_0_write_1__SEL_1,
       MUX_v_fb_data_1_1_write_1__SEL_1,
       MUX_v_fb_data_1_10_write_1__SEL_1,
       MUX_v_fb_data_1_11_write_1__SEL_1,
       MUX_v_fb_data_1_12_write_1__SEL_1,
       MUX_v_fb_data_1_13_write_1__SEL_1,
       MUX_v_fb_data_1_14_write_1__SEL_1,
       MUX_v_fb_data_1_15_write_1__SEL_1,
       MUX_v_fb_data_1_2_write_1__SEL_1,
       MUX_v_fb_data_1_3_write_1__SEL_1,
       MUX_v_fb_data_1_4_write_1__SEL_1,
       MUX_v_fb_data_1_5_write_1__SEL_1,
       MUX_v_fb_data_1_6_write_1__SEL_1,
       MUX_v_fb_data_1_7_write_1__SEL_1,
       MUX_v_fb_data_1_8_write_1__SEL_1,
       MUX_v_fb_data_1_9_write_1__SEL_1,
       MUX_v_fb_data_2_0_write_1__SEL_1,
       MUX_v_fb_data_2_1_write_1__SEL_1,
       MUX_v_fb_data_2_10_write_1__SEL_1,
       MUX_v_fb_data_2_11_write_1__SEL_1,
       MUX_v_fb_data_2_12_write_1__SEL_1,
       MUX_v_fb_data_2_13_write_1__SEL_1,
       MUX_v_fb_data_2_14_write_1__SEL_1,
       MUX_v_fb_data_2_15_write_1__SEL_1,
       MUX_v_fb_data_2_2_write_1__SEL_1,
       MUX_v_fb_data_2_3_write_1__SEL_1,
       MUX_v_fb_data_2_4_write_1__SEL_1,
       MUX_v_fb_data_2_5_write_1__SEL_1,
       MUX_v_fb_data_2_6_write_1__SEL_1,
       MUX_v_fb_data_2_7_write_1__SEL_1,
       MUX_v_fb_data_2_8_write_1__SEL_1,
       MUX_v_fb_data_2_9_write_1__SEL_1,
       MUX_v_fb_data_3_0_write_1__SEL_1,
       MUX_v_fb_data_3_1_write_1__SEL_1,
       MUX_v_fb_data_3_10_write_1__SEL_1,
       MUX_v_fb_data_3_11_write_1__SEL_1,
       MUX_v_fb_data_3_12_write_1__SEL_1,
       MUX_v_fb_data_3_13_write_1__SEL_1,
       MUX_v_fb_data_3_14_write_1__SEL_1,
       MUX_v_fb_data_3_15_write_1__SEL_1,
       MUX_v_fb_data_3_2_write_1__SEL_1,
       MUX_v_fb_data_3_3_write_1__SEL_1,
       MUX_v_fb_data_3_4_write_1__SEL_1,
       MUX_v_fb_data_3_5_write_1__SEL_1,
       MUX_v_fb_data_3_6_write_1__SEL_1,
       MUX_v_fb_data_3_7_write_1__SEL_1,
       MUX_v_fb_data_3_8_write_1__SEL_1,
       MUX_v_fb_data_3_9_write_1__SEL_1,
       MUX_v_fb_err_0_write_1__SEL_1,
       MUX_v_fb_err_1_write_1__SEL_1,
       MUX_v_fb_err_2_write_1__SEL_1,
       MUX_v_fb_err_3_write_1__SEL_1,
       MUX_v_fb_line_valid_0_write_1__SEL_2,
       MUX_v_fb_line_valid_1_write_1__SEL_2,
       MUX_v_fb_line_valid_2_write_1__SEL_2,
       MUX_v_fb_line_valid_3_write_1__SEL_2;

  // remaining internal signals
  reg [31 : 0] lv_selected_word__h16759,
	       lv_selected_word__h16812,
	       lv_selected_word__h16865,
	       lv_selected_word__h16918,
	       spliced_bits__h14683,
	       spliced_bits__h14712,
	       spliced_bits__h14741,
	       spliced_bits__h14770,
	       spliced_bits__h14799,
	       spliced_bits__h14828,
	       spliced_bits__h14857,
	       spliced_bits__h14886,
	       spliced_bits__h14915,
	       spliced_bits__h14944,
	       spliced_bits__h14973,
	       spliced_bits__h15002,
	       spliced_bits__h15031,
	       spliced_bits__h15060,
	       spliced_bits__h15089,
	       spliced_bits__h15118,
	       x_mv_release_info_address__h14576;
  reg x_mv_release_info_err__h14577;
  wire [511 : 0] x_mv_release_info_dataline__h14575;
  wire [31 : 0] IF_v_fb_addr_1_30_BITS_31_TO_6_54_EQ_mav_polli_ETC___d376,
		IF_v_fb_addr_2_31_BITS_31_TO_6_51_EQ_mav_polli_ETC___d377,
		y_avValue_word__h16375;
  wire [15 : 0] w__h14364, x__h14340, x__h14368, x__h14393;
  wire [3 : 0] IF_v_fb_addr_0_29_BITS_31_TO_6_57_EQ_mav_polli_ETC___d360,
	       _theResult____h16339,
	       lv_current_bank__h11109,
	       x__h12649;
  wire [1 : 0] x__h11008, x__h16159;
  wire IF_v_fb_addr_1_30_BITS_31_TO_6_54_EQ_mav_polli_ETC___d363,
       IF_v_fb_addr_1_30_BITS_31_TO_6_54_EQ_mav_polli_ETC___d384,
       IF_v_fb_addr_2_31_BITS_31_TO_6_51_EQ_mav_polli_ETC___d364,
       IF_v_fb_addr_2_31_BITS_31_TO_6_51_EQ_mav_polli_ETC___d385,
       IF_v_fb_addr_3_32_BITS_31_TO_6_47_EQ_mav_polli_ETC___d386,
       _dfoo1,
       _dfoo101,
       _dfoo103,
       _dfoo105,
       _dfoo107,
       _dfoo109,
       _dfoo11,
       _dfoo111,
       _dfoo113,
       _dfoo115,
       _dfoo117,
       _dfoo119,
       _dfoo121,
       _dfoo123,
       _dfoo125,
       _dfoo127,
       _dfoo13,
       _dfoo15,
       _dfoo17,
       _dfoo19,
       _dfoo21,
       _dfoo23,
       _dfoo25,
       _dfoo27,
       _dfoo29,
       _dfoo3,
       _dfoo31,
       _dfoo33,
       _dfoo35,
       _dfoo37,
       _dfoo39,
       _dfoo41,
       _dfoo43,
       _dfoo45,
       _dfoo47,
       _dfoo49,
       _dfoo5,
       _dfoo51,
       _dfoo53,
       _dfoo55,
       _dfoo57,
       _dfoo59,
       _dfoo61,
       _dfoo63,
       _dfoo65,
       _dfoo67,
       _dfoo69,
       _dfoo7,
       _dfoo71,
       _dfoo73,
       _dfoo75,
       _dfoo77,
       _dfoo79,
       _dfoo81,
       _dfoo83,
       _dfoo85,
       _dfoo87,
       _dfoo89,
       _dfoo9,
       _dfoo91,
       _dfoo93,
       _dfoo95,
       _dfoo97,
       _dfoo99,
       mav_polling_response_fill_AND_v_fb_addr_3_32_B_ETC___d390,
       y_avValue_err__h16374;

  // value method mv_fbfull
  assign mv_fbfull =
	     v_fb_addr_valid_0 && v_fb_addr_valid_1 && v_fb_addr_valid_2 &&
	     v_fb_addr_valid_3 ;

  // value method mv_fbempty
  assign mv_fbempty =
	     !v_fb_addr_valid_0 && !v_fb_addr_valid_1 && !v_fb_addr_valid_2 &&
	     !v_fb_addr_valid_3 ;

  // value method mv_fbhead_valid
  always@(rg_fbhead or
	  v_fb_line_valid_0 or
	  v_fb_line_valid_1 or v_fb_line_valid_2 or v_fb_line_valid_3)
  begin
    case (rg_fbhead)
      2'd0: mv_fbhead_valid = v_fb_line_valid_0;
      2'd1: mv_fbhead_valid = v_fb_line_valid_1;
      2'd2: mv_fbhead_valid = v_fb_line_valid_2;
      2'd3: mv_fbhead_valid = v_fb_line_valid_3;
    endcase
  end

  // actionvalue method mav_allocate_line
  assign mav_allocate_line = rg_fbtail ;
  assign RDY_mav_allocate_line = 1'd1 ;
  assign CAN_FIRE_mav_allocate_line = 1'd1 ;
  assign WILL_FIRE_mav_allocate_line = EN_mav_allocate_line ;

  // action method ma_fill_from_memory
  assign RDY_ma_fill_from_memory = 1'd1 ;
  assign CAN_FIRE_ma_fill_from_memory = 1'd1 ;
  assign WILL_FIRE_ma_fill_from_memory = EN_ma_fill_from_memory ;

  // value method mv_release_info
  assign mv_release_info =
	     { x_mv_release_info_dataline__h14575,
	       x_mv_release_info_address__h14576,
	       x_mv_release_info_err__h14577 } ;
  assign RDY_mv_release_info = 1'd1 ;

  // action method ma_perform_release
  assign RDY_ma_perform_release = 1'd1 ;
  assign CAN_FIRE_ma_perform_release = 1'd1 ;
  assign WILL_FIRE_ma_perform_release = EN_ma_perform_release ;

  // actionvalue method mav_polling_response
  assign mav_polling_response =
	     { y_avValue_err__h16374,
	       y_avValue_word__h16375,
	       _theResult____h16339,
	       _theResult____h16339 != 4'd0,
	       IF_v_fb_addr_3_32_BITS_31_TO_6_47_EQ_mav_polli_ETC___d386 ||
	       mav_polling_response_fill_AND_v_fb_addr_3_32_B_ETC___d390 } ;
  assign RDY_mav_polling_response = 1'd1 ;
  assign CAN_FIRE_mav_polling_response = 1'd1 ;
  assign WILL_FIRE_mav_polling_response = EN_mav_polling_response ;

  // inputs to muxes for submodule ports
  assign MUX_v_fb_addr_valid_0_write_1__SEL_1 =
	     EN_ma_perform_release && rg_fbhead == 2'd0 ;
  assign MUX_v_fb_addr_valid_0_write_1__SEL_2 =
	     EN_mav_allocate_line && rg_fbtail == 2'd0 ;
  assign MUX_v_fb_addr_valid_1_write_1__SEL_1 =
	     EN_ma_perform_release && rg_fbhead == 2'd1 ;
  assign MUX_v_fb_addr_valid_1_write_1__SEL_2 =
	     EN_mav_allocate_line && rg_fbtail == 2'd1 ;
  assign MUX_v_fb_addr_valid_2_write_1__SEL_1 =
	     EN_ma_perform_release && rg_fbhead == 2'd2 ;
  assign MUX_v_fb_addr_valid_2_write_1__SEL_2 =
	     EN_mav_allocate_line && rg_fbtail == 2'd2 ;
  assign MUX_v_fb_addr_valid_3_write_1__SEL_1 =
	     EN_ma_perform_release && rg_fbhead == 2'd3 ;
  assign MUX_v_fb_addr_valid_3_write_1__SEL_2 =
	     EN_mav_allocate_line && rg_fbtail == 2'd3 ;
  assign MUX_v_fb_data_0_0_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo127 ;
  assign MUX_v_fb_data_0_1_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo125 ;
  assign MUX_v_fb_data_0_10_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo107 ;
  assign MUX_v_fb_data_0_11_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo105 ;
  assign MUX_v_fb_data_0_12_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo103 ;
  assign MUX_v_fb_data_0_13_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo101 ;
  assign MUX_v_fb_data_0_14_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo99 ;
  assign MUX_v_fb_data_0_15_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo97 ;
  assign MUX_v_fb_data_0_2_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo123 ;
  assign MUX_v_fb_data_0_3_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo121 ;
  assign MUX_v_fb_data_0_4_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo119 ;
  assign MUX_v_fb_data_0_5_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo117 ;
  assign MUX_v_fb_data_0_6_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo115 ;
  assign MUX_v_fb_data_0_7_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo113 ;
  assign MUX_v_fb_data_0_8_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo111 ;
  assign MUX_v_fb_data_0_9_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo109 ;
  assign MUX_v_fb_data_1_0_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo95 ;
  assign MUX_v_fb_data_1_1_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo93 ;
  assign MUX_v_fb_data_1_10_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo75 ;
  assign MUX_v_fb_data_1_11_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo73 ;
  assign MUX_v_fb_data_1_12_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo71 ;
  assign MUX_v_fb_data_1_13_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo69 ;
  assign MUX_v_fb_data_1_14_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo67 ;
  assign MUX_v_fb_data_1_15_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo65 ;
  assign MUX_v_fb_data_1_2_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo91 ;
  assign MUX_v_fb_data_1_3_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo89 ;
  assign MUX_v_fb_data_1_4_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo87 ;
  assign MUX_v_fb_data_1_5_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo85 ;
  assign MUX_v_fb_data_1_6_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo83 ;
  assign MUX_v_fb_data_1_7_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo81 ;
  assign MUX_v_fb_data_1_8_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo79 ;
  assign MUX_v_fb_data_1_9_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo77 ;
  assign MUX_v_fb_data_2_0_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo63 ;
  assign MUX_v_fb_data_2_1_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo61 ;
  assign MUX_v_fb_data_2_10_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo43 ;
  assign MUX_v_fb_data_2_11_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo41 ;
  assign MUX_v_fb_data_2_12_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo39 ;
  assign MUX_v_fb_data_2_13_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo37 ;
  assign MUX_v_fb_data_2_14_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo35 ;
  assign MUX_v_fb_data_2_15_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo33 ;
  assign MUX_v_fb_data_2_2_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo59 ;
  assign MUX_v_fb_data_2_3_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo57 ;
  assign MUX_v_fb_data_2_4_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo55 ;
  assign MUX_v_fb_data_2_5_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo53 ;
  assign MUX_v_fb_data_2_6_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo51 ;
  assign MUX_v_fb_data_2_7_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo49 ;
  assign MUX_v_fb_data_2_8_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo47 ;
  assign MUX_v_fb_data_2_9_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo45 ;
  assign MUX_v_fb_data_3_0_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo31 ;
  assign MUX_v_fb_data_3_1_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo29 ;
  assign MUX_v_fb_data_3_10_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo11 ;
  assign MUX_v_fb_data_3_11_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo9 ;
  assign MUX_v_fb_data_3_12_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo7 ;
  assign MUX_v_fb_data_3_13_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo5 ;
  assign MUX_v_fb_data_3_14_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo3 ;
  assign MUX_v_fb_data_3_15_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo1 ;
  assign MUX_v_fb_data_3_2_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo27 ;
  assign MUX_v_fb_data_3_3_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo25 ;
  assign MUX_v_fb_data_3_4_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo23 ;
  assign MUX_v_fb_data_3_5_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo21 ;
  assign MUX_v_fb_data_3_6_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo19 ;
  assign MUX_v_fb_data_3_7_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo17 ;
  assign MUX_v_fb_data_3_8_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo15 ;
  assign MUX_v_fb_data_3_9_write_1__SEL_1 =
	     EN_ma_fill_from_memory && _dfoo13 ;
  assign MUX_v_fb_err_0_write_1__SEL_1 =
	     EN_ma_fill_from_memory && ma_fill_from_memory_fbindex == 2'd0 ;
  assign MUX_v_fb_err_1_write_1__SEL_1 =
	     EN_ma_fill_from_memory && ma_fill_from_memory_fbindex == 2'd1 ;
  assign MUX_v_fb_err_2_write_1__SEL_1 =
	     EN_ma_fill_from_memory && ma_fill_from_memory_fbindex == 2'd2 ;
  assign MUX_v_fb_err_3_write_1__SEL_1 =
	     EN_ma_fill_from_memory && ma_fill_from_memory_fbindex == 2'd3 ;
  assign MUX_v_fb_line_valid_0_write_1__SEL_2 =
	     EN_ma_fill_from_memory && ma_fill_from_memory_fbindex == 2'd0 &&
	     ma_fill_from_memory_mem_resp[2] ;
  assign MUX_v_fb_line_valid_1_write_1__SEL_2 =
	     EN_ma_fill_from_memory && ma_fill_from_memory_fbindex == 2'd1 &&
	     ma_fill_from_memory_mem_resp[2] ;
  assign MUX_v_fb_line_valid_2_write_1__SEL_2 =
	     EN_ma_fill_from_memory && ma_fill_from_memory_fbindex == 2'd2 &&
	     ma_fill_from_memory_mem_resp[2] ;
  assign MUX_v_fb_line_valid_3_write_1__SEL_2 =
	     EN_ma_fill_from_memory && ma_fill_from_memory_fbindex == 2'd3 &&
	     ma_fill_from_memory_mem_resp[2] ;
  assign MUX_v_fb_data_0_0_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd0 &&
	      ma_fill_from_memory_fbindex == 2'd0) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_0_1_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd1 &&
	      ma_fill_from_memory_fbindex == 2'd0) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_0_10_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd10 &&
	      ma_fill_from_memory_fbindex == 2'd0) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_0_11_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd11 &&
	      ma_fill_from_memory_fbindex == 2'd0) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_0_12_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd12 &&
	      ma_fill_from_memory_fbindex == 2'd0) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_0_13_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd13 &&
	      ma_fill_from_memory_fbindex == 2'd0) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_0_14_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd14 &&
	      ma_fill_from_memory_fbindex == 2'd0) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_0_15_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd15 &&
	      ma_fill_from_memory_fbindex == 2'd0) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_0_2_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd2 &&
	      ma_fill_from_memory_fbindex == 2'd0) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_0_3_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd3 &&
	      ma_fill_from_memory_fbindex == 2'd0) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_0_4_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd4 &&
	      ma_fill_from_memory_fbindex == 2'd0) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_0_5_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd5 &&
	      ma_fill_from_memory_fbindex == 2'd0) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_0_6_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd6 &&
	      ma_fill_from_memory_fbindex == 2'd0) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_0_7_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd7 &&
	      ma_fill_from_memory_fbindex == 2'd0) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_0_8_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd8 &&
	      ma_fill_from_memory_fbindex == 2'd0) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_0_9_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd9 &&
	      ma_fill_from_memory_fbindex == 2'd0) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_1_0_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd0 &&
	      ma_fill_from_memory_fbindex == 2'd1) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_1_1_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd1 &&
	      ma_fill_from_memory_fbindex == 2'd1) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_1_10_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd10 &&
	      ma_fill_from_memory_fbindex == 2'd1) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_1_11_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd11 &&
	      ma_fill_from_memory_fbindex == 2'd1) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_1_12_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd12 &&
	      ma_fill_from_memory_fbindex == 2'd1) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_1_13_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd13 &&
	      ma_fill_from_memory_fbindex == 2'd1) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_1_14_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd14 &&
	      ma_fill_from_memory_fbindex == 2'd1) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_1_15_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd15 &&
	      ma_fill_from_memory_fbindex == 2'd1) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_1_2_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd2 &&
	      ma_fill_from_memory_fbindex == 2'd1) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_1_3_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd3 &&
	      ma_fill_from_memory_fbindex == 2'd1) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_1_4_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd4 &&
	      ma_fill_from_memory_fbindex == 2'd1) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_1_5_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd5 &&
	      ma_fill_from_memory_fbindex == 2'd1) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_1_6_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd6 &&
	      ma_fill_from_memory_fbindex == 2'd1) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_1_7_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd7 &&
	      ma_fill_from_memory_fbindex == 2'd1) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_1_8_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd8 &&
	      ma_fill_from_memory_fbindex == 2'd1) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_1_9_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd9 &&
	      ma_fill_from_memory_fbindex == 2'd1) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_2_0_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd0 &&
	      ma_fill_from_memory_fbindex == 2'd2) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_2_1_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd1 &&
	      ma_fill_from_memory_fbindex == 2'd2) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_2_10_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd10 &&
	      ma_fill_from_memory_fbindex == 2'd2) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_2_11_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd11 &&
	      ma_fill_from_memory_fbindex == 2'd2) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_2_12_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd12 &&
	      ma_fill_from_memory_fbindex == 2'd2) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_2_13_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd13 &&
	      ma_fill_from_memory_fbindex == 2'd2) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_2_14_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd14 &&
	      ma_fill_from_memory_fbindex == 2'd2) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_2_15_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd15 &&
	      ma_fill_from_memory_fbindex == 2'd2) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_2_2_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd2 &&
	      ma_fill_from_memory_fbindex == 2'd2) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_2_3_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd3 &&
	      ma_fill_from_memory_fbindex == 2'd2) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_2_4_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd4 &&
	      ma_fill_from_memory_fbindex == 2'd2) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_2_5_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd5 &&
	      ma_fill_from_memory_fbindex == 2'd2) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_2_6_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd6 &&
	      ma_fill_from_memory_fbindex == 2'd2) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_2_7_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd7 &&
	      ma_fill_from_memory_fbindex == 2'd2) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_2_8_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd8 &&
	      ma_fill_from_memory_fbindex == 2'd2) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_2_9_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd9 &&
	      ma_fill_from_memory_fbindex == 2'd2) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_3_0_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd0 &&
	      ma_fill_from_memory_fbindex == 2'd3) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_3_1_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd1 &&
	      ma_fill_from_memory_fbindex == 2'd3) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_3_10_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd10 &&
	      ma_fill_from_memory_fbindex == 2'd3) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_3_11_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd11 &&
	      ma_fill_from_memory_fbindex == 2'd3) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_3_12_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd12 &&
	      ma_fill_from_memory_fbindex == 2'd3) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_3_13_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd13 &&
	      ma_fill_from_memory_fbindex == 2'd3) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_3_14_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd14 &&
	      ma_fill_from_memory_fbindex == 2'd3) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_3_15_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd15 &&
	      ma_fill_from_memory_fbindex == 2'd3) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_3_2_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd2 &&
	      ma_fill_from_memory_fbindex == 2'd3) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_3_3_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd3 &&
	      ma_fill_from_memory_fbindex == 2'd3) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_3_4_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd4 &&
	      ma_fill_from_memory_fbindex == 2'd3) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_3_5_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd5 &&
	      ma_fill_from_memory_fbindex == 2'd3) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_3_6_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd6 &&
	      ma_fill_from_memory_fbindex == 2'd3) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_3_7_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd7 &&
	      ma_fill_from_memory_fbindex == 2'd3) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_3_8_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd8 &&
	      ma_fill_from_memory_fbindex == 2'd3) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;
  assign MUX_v_fb_data_3_9_write_1__VAL_1 =
	     (lv_current_bank__h11109 == 4'd9 &&
	      ma_fill_from_memory_fbindex == 2'd3) ?
	       ma_fill_from_memory_mem_resp[34:3] :
	       ma_fill_from_memory_mem_resp[66:35] ;

  // register rg_fb_enables
  assign rg_fb_enables_D_IN =
	     ma_fill_from_memory_mem_resp[2] ? 16'd0 : x__h14340 ;
  assign rg_fb_enables_EN = EN_ma_fill_from_memory ;

  // register rg_fbhead
  assign rg_fbhead_D_IN = (rg_fbhead == 2'd3) ? 2'd0 : x__h16159 ;
  assign rg_fbhead_EN = EN_ma_perform_release ;

  // register rg_fbtail
  assign rg_fbtail_D_IN = (rg_fbtail == 2'd3) ? 2'd0 : x__h11008 ;
  assign rg_fbtail_EN = EN_mav_allocate_line ;

  // register rg_next_bank
  assign rg_next_bank_D_IN = lv_current_bank__h11109 + 4'd2 ;
  assign rg_next_bank_EN = EN_ma_fill_from_memory ;

  // register v_fb_addr_0
  assign v_fb_addr_0_D_IN = mav_allocate_line_address ;
  assign v_fb_addr_0_EN = MUX_v_fb_addr_valid_0_write_1__SEL_2 ;

  // register v_fb_addr_1
  assign v_fb_addr_1_D_IN = mav_allocate_line_address ;
  assign v_fb_addr_1_EN = MUX_v_fb_addr_valid_1_write_1__SEL_2 ;

  // register v_fb_addr_2
  assign v_fb_addr_2_D_IN = mav_allocate_line_address ;
  assign v_fb_addr_2_EN = MUX_v_fb_addr_valid_2_write_1__SEL_2 ;

  // register v_fb_addr_3
  assign v_fb_addr_3_D_IN = mav_allocate_line_address ;
  assign v_fb_addr_3_EN = MUX_v_fb_addr_valid_3_write_1__SEL_2 ;

  // register v_fb_addr_valid_0
  assign v_fb_addr_valid_0_D_IN = !MUX_v_fb_addr_valid_0_write_1__SEL_1 ;
  assign v_fb_addr_valid_0_EN =
	     EN_mav_allocate_line && rg_fbtail == 2'd0 ||
	     EN_ma_perform_release && rg_fbhead == 2'd0 ;

  // register v_fb_addr_valid_1
  assign v_fb_addr_valid_1_D_IN = !MUX_v_fb_addr_valid_1_write_1__SEL_1 ;
  assign v_fb_addr_valid_1_EN =
	     EN_mav_allocate_line && rg_fbtail == 2'd1 ||
	     EN_ma_perform_release && rg_fbhead == 2'd1 ;

  // register v_fb_addr_valid_2
  assign v_fb_addr_valid_2_D_IN = !MUX_v_fb_addr_valid_2_write_1__SEL_1 ;
  assign v_fb_addr_valid_2_EN =
	     EN_mav_allocate_line && rg_fbtail == 2'd2 ||
	     EN_ma_perform_release && rg_fbhead == 2'd2 ;

  // register v_fb_addr_valid_3
  assign v_fb_addr_valid_3_D_IN = !MUX_v_fb_addr_valid_3_write_1__SEL_1 ;
  assign v_fb_addr_valid_3_EN =
	     EN_ma_perform_release && rg_fbhead == 2'd3 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd3 ;

  // register v_fb_data_0_0
  assign v_fb_data_0_0_D_IN =
	     MUX_v_fb_data_0_0_write_1__SEL_1 ?
	       MUX_v_fb_data_0_0_write_1__VAL_1 :
	       mav_allocate_line_dataline[31:0] ;
  assign v_fb_data_0_0_EN =
	     EN_ma_fill_from_memory && _dfoo127 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd0 ;

  // register v_fb_data_0_1
  assign v_fb_data_0_1_D_IN =
	     MUX_v_fb_data_0_1_write_1__SEL_1 ?
	       MUX_v_fb_data_0_1_write_1__VAL_1 :
	       mav_allocate_line_dataline[63:32] ;
  assign v_fb_data_0_1_EN =
	     EN_ma_fill_from_memory && _dfoo125 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd0 ;

  // register v_fb_data_0_10
  assign v_fb_data_0_10_D_IN =
	     MUX_v_fb_data_0_10_write_1__SEL_1 ?
	       MUX_v_fb_data_0_10_write_1__VAL_1 :
	       mav_allocate_line_dataline[351:320] ;
  assign v_fb_data_0_10_EN =
	     EN_ma_fill_from_memory && _dfoo107 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd0 ;

  // register v_fb_data_0_11
  assign v_fb_data_0_11_D_IN =
	     MUX_v_fb_data_0_11_write_1__SEL_1 ?
	       MUX_v_fb_data_0_11_write_1__VAL_1 :
	       mav_allocate_line_dataline[383:352] ;
  assign v_fb_data_0_11_EN =
	     EN_ma_fill_from_memory && _dfoo105 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd0 ;

  // register v_fb_data_0_12
  assign v_fb_data_0_12_D_IN =
	     MUX_v_fb_data_0_12_write_1__SEL_1 ?
	       MUX_v_fb_data_0_12_write_1__VAL_1 :
	       mav_allocate_line_dataline[415:384] ;
  assign v_fb_data_0_12_EN =
	     EN_ma_fill_from_memory && _dfoo103 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd0 ;

  // register v_fb_data_0_13
  assign v_fb_data_0_13_D_IN =
	     MUX_v_fb_data_0_13_write_1__SEL_1 ?
	       MUX_v_fb_data_0_13_write_1__VAL_1 :
	       mav_allocate_line_dataline[447:416] ;
  assign v_fb_data_0_13_EN =
	     EN_ma_fill_from_memory && _dfoo101 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd0 ;

  // register v_fb_data_0_14
  assign v_fb_data_0_14_D_IN =
	     MUX_v_fb_data_0_14_write_1__SEL_1 ?
	       MUX_v_fb_data_0_14_write_1__VAL_1 :
	       mav_allocate_line_dataline[479:448] ;
  assign v_fb_data_0_14_EN =
	     EN_ma_fill_from_memory && _dfoo99 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd0 ;

  // register v_fb_data_0_15
  assign v_fb_data_0_15_D_IN =
	     MUX_v_fb_data_0_15_write_1__SEL_1 ?
	       MUX_v_fb_data_0_15_write_1__VAL_1 :
	       mav_allocate_line_dataline[511:480] ;
  assign v_fb_data_0_15_EN =
	     EN_ma_fill_from_memory && _dfoo97 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd0 ;

  // register v_fb_data_0_2
  assign v_fb_data_0_2_D_IN =
	     MUX_v_fb_data_0_2_write_1__SEL_1 ?
	       MUX_v_fb_data_0_2_write_1__VAL_1 :
	       mav_allocate_line_dataline[95:64] ;
  assign v_fb_data_0_2_EN =
	     EN_ma_fill_from_memory && _dfoo123 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd0 ;

  // register v_fb_data_0_3
  assign v_fb_data_0_3_D_IN =
	     MUX_v_fb_data_0_3_write_1__SEL_1 ?
	       MUX_v_fb_data_0_3_write_1__VAL_1 :
	       mav_allocate_line_dataline[127:96] ;
  assign v_fb_data_0_3_EN =
	     EN_ma_fill_from_memory && _dfoo121 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd0 ;

  // register v_fb_data_0_4
  assign v_fb_data_0_4_D_IN =
	     MUX_v_fb_data_0_4_write_1__SEL_1 ?
	       MUX_v_fb_data_0_4_write_1__VAL_1 :
	       mav_allocate_line_dataline[159:128] ;
  assign v_fb_data_0_4_EN =
	     EN_ma_fill_from_memory && _dfoo119 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd0 ;

  // register v_fb_data_0_5
  assign v_fb_data_0_5_D_IN =
	     MUX_v_fb_data_0_5_write_1__SEL_1 ?
	       MUX_v_fb_data_0_5_write_1__VAL_1 :
	       mav_allocate_line_dataline[191:160] ;
  assign v_fb_data_0_5_EN =
	     EN_ma_fill_from_memory && _dfoo117 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd0 ;

  // register v_fb_data_0_6
  assign v_fb_data_0_6_D_IN =
	     MUX_v_fb_data_0_6_write_1__SEL_1 ?
	       MUX_v_fb_data_0_6_write_1__VAL_1 :
	       mav_allocate_line_dataline[223:192] ;
  assign v_fb_data_0_6_EN =
	     EN_ma_fill_from_memory && _dfoo115 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd0 ;

  // register v_fb_data_0_7
  assign v_fb_data_0_7_D_IN =
	     MUX_v_fb_data_0_7_write_1__SEL_1 ?
	       MUX_v_fb_data_0_7_write_1__VAL_1 :
	       mav_allocate_line_dataline[255:224] ;
  assign v_fb_data_0_7_EN =
	     EN_ma_fill_from_memory && _dfoo113 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd0 ;

  // register v_fb_data_0_8
  assign v_fb_data_0_8_D_IN =
	     MUX_v_fb_data_0_8_write_1__SEL_1 ?
	       MUX_v_fb_data_0_8_write_1__VAL_1 :
	       mav_allocate_line_dataline[287:256] ;
  assign v_fb_data_0_8_EN =
	     EN_ma_fill_from_memory && _dfoo111 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd0 ;

  // register v_fb_data_0_9
  assign v_fb_data_0_9_D_IN =
	     MUX_v_fb_data_0_9_write_1__SEL_1 ?
	       MUX_v_fb_data_0_9_write_1__VAL_1 :
	       mav_allocate_line_dataline[319:288] ;
  assign v_fb_data_0_9_EN =
	     EN_ma_fill_from_memory && _dfoo109 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd0 ;

  // register v_fb_data_1_0
  assign v_fb_data_1_0_D_IN =
	     MUX_v_fb_data_1_0_write_1__SEL_1 ?
	       MUX_v_fb_data_1_0_write_1__VAL_1 :
	       mav_allocate_line_dataline[31:0] ;
  assign v_fb_data_1_0_EN =
	     EN_ma_fill_from_memory && _dfoo95 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd1 ;

  // register v_fb_data_1_1
  assign v_fb_data_1_1_D_IN =
	     MUX_v_fb_data_1_1_write_1__SEL_1 ?
	       MUX_v_fb_data_1_1_write_1__VAL_1 :
	       mav_allocate_line_dataline[63:32] ;
  assign v_fb_data_1_1_EN =
	     EN_ma_fill_from_memory && _dfoo93 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd1 ;

  // register v_fb_data_1_10
  assign v_fb_data_1_10_D_IN =
	     MUX_v_fb_data_1_10_write_1__SEL_1 ?
	       MUX_v_fb_data_1_10_write_1__VAL_1 :
	       mav_allocate_line_dataline[351:320] ;
  assign v_fb_data_1_10_EN =
	     EN_ma_fill_from_memory && _dfoo75 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd1 ;

  // register v_fb_data_1_11
  assign v_fb_data_1_11_D_IN =
	     MUX_v_fb_data_1_11_write_1__SEL_1 ?
	       MUX_v_fb_data_1_11_write_1__VAL_1 :
	       mav_allocate_line_dataline[383:352] ;
  assign v_fb_data_1_11_EN =
	     EN_ma_fill_from_memory && _dfoo73 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd1 ;

  // register v_fb_data_1_12
  assign v_fb_data_1_12_D_IN =
	     MUX_v_fb_data_1_12_write_1__SEL_1 ?
	       MUX_v_fb_data_1_12_write_1__VAL_1 :
	       mav_allocate_line_dataline[415:384] ;
  assign v_fb_data_1_12_EN =
	     EN_ma_fill_from_memory && _dfoo71 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd1 ;

  // register v_fb_data_1_13
  assign v_fb_data_1_13_D_IN =
	     MUX_v_fb_data_1_13_write_1__SEL_1 ?
	       MUX_v_fb_data_1_13_write_1__VAL_1 :
	       mav_allocate_line_dataline[447:416] ;
  assign v_fb_data_1_13_EN =
	     EN_ma_fill_from_memory && _dfoo69 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd1 ;

  // register v_fb_data_1_14
  assign v_fb_data_1_14_D_IN =
	     MUX_v_fb_data_1_14_write_1__SEL_1 ?
	       MUX_v_fb_data_1_14_write_1__VAL_1 :
	       mav_allocate_line_dataline[479:448] ;
  assign v_fb_data_1_14_EN =
	     EN_ma_fill_from_memory && _dfoo67 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd1 ;

  // register v_fb_data_1_15
  assign v_fb_data_1_15_D_IN =
	     MUX_v_fb_data_1_15_write_1__SEL_1 ?
	       MUX_v_fb_data_1_15_write_1__VAL_1 :
	       mav_allocate_line_dataline[511:480] ;
  assign v_fb_data_1_15_EN =
	     EN_ma_fill_from_memory && _dfoo65 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd1 ;

  // register v_fb_data_1_2
  assign v_fb_data_1_2_D_IN =
	     MUX_v_fb_data_1_2_write_1__SEL_1 ?
	       MUX_v_fb_data_1_2_write_1__VAL_1 :
	       mav_allocate_line_dataline[95:64] ;
  assign v_fb_data_1_2_EN =
	     EN_ma_fill_from_memory && _dfoo91 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd1 ;

  // register v_fb_data_1_3
  assign v_fb_data_1_3_D_IN =
	     MUX_v_fb_data_1_3_write_1__SEL_1 ?
	       MUX_v_fb_data_1_3_write_1__VAL_1 :
	       mav_allocate_line_dataline[127:96] ;
  assign v_fb_data_1_3_EN =
	     EN_ma_fill_from_memory && _dfoo89 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd1 ;

  // register v_fb_data_1_4
  assign v_fb_data_1_4_D_IN =
	     MUX_v_fb_data_1_4_write_1__SEL_1 ?
	       MUX_v_fb_data_1_4_write_1__VAL_1 :
	       mav_allocate_line_dataline[159:128] ;
  assign v_fb_data_1_4_EN =
	     EN_ma_fill_from_memory && _dfoo87 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd1 ;

  // register v_fb_data_1_5
  assign v_fb_data_1_5_D_IN =
	     MUX_v_fb_data_1_5_write_1__SEL_1 ?
	       MUX_v_fb_data_1_5_write_1__VAL_1 :
	       mav_allocate_line_dataline[191:160] ;
  assign v_fb_data_1_5_EN =
	     EN_ma_fill_from_memory && _dfoo85 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd1 ;

  // register v_fb_data_1_6
  assign v_fb_data_1_6_D_IN =
	     MUX_v_fb_data_1_6_write_1__SEL_1 ?
	       MUX_v_fb_data_1_6_write_1__VAL_1 :
	       mav_allocate_line_dataline[223:192] ;
  assign v_fb_data_1_6_EN =
	     EN_ma_fill_from_memory && _dfoo83 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd1 ;

  // register v_fb_data_1_7
  assign v_fb_data_1_7_D_IN =
	     MUX_v_fb_data_1_7_write_1__SEL_1 ?
	       MUX_v_fb_data_1_7_write_1__VAL_1 :
	       mav_allocate_line_dataline[255:224] ;
  assign v_fb_data_1_7_EN =
	     EN_ma_fill_from_memory && _dfoo81 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd1 ;

  // register v_fb_data_1_8
  assign v_fb_data_1_8_D_IN =
	     MUX_v_fb_data_1_8_write_1__SEL_1 ?
	       MUX_v_fb_data_1_8_write_1__VAL_1 :
	       mav_allocate_line_dataline[287:256] ;
  assign v_fb_data_1_8_EN =
	     EN_ma_fill_from_memory && _dfoo79 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd1 ;

  // register v_fb_data_1_9
  assign v_fb_data_1_9_D_IN =
	     MUX_v_fb_data_1_9_write_1__SEL_1 ?
	       MUX_v_fb_data_1_9_write_1__VAL_1 :
	       mav_allocate_line_dataline[319:288] ;
  assign v_fb_data_1_9_EN =
	     EN_ma_fill_from_memory && _dfoo77 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd1 ;

  // register v_fb_data_2_0
  assign v_fb_data_2_0_D_IN =
	     MUX_v_fb_data_2_0_write_1__SEL_1 ?
	       MUX_v_fb_data_2_0_write_1__VAL_1 :
	       mav_allocate_line_dataline[31:0] ;
  assign v_fb_data_2_0_EN =
	     EN_ma_fill_from_memory && _dfoo63 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd2 ;

  // register v_fb_data_2_1
  assign v_fb_data_2_1_D_IN =
	     MUX_v_fb_data_2_1_write_1__SEL_1 ?
	       MUX_v_fb_data_2_1_write_1__VAL_1 :
	       mav_allocate_line_dataline[63:32] ;
  assign v_fb_data_2_1_EN =
	     EN_ma_fill_from_memory && _dfoo61 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd2 ;

  // register v_fb_data_2_10
  assign v_fb_data_2_10_D_IN =
	     MUX_v_fb_data_2_10_write_1__SEL_1 ?
	       MUX_v_fb_data_2_10_write_1__VAL_1 :
	       mav_allocate_line_dataline[351:320] ;
  assign v_fb_data_2_10_EN =
	     EN_ma_fill_from_memory && _dfoo43 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd2 ;

  // register v_fb_data_2_11
  assign v_fb_data_2_11_D_IN =
	     MUX_v_fb_data_2_11_write_1__SEL_1 ?
	       MUX_v_fb_data_2_11_write_1__VAL_1 :
	       mav_allocate_line_dataline[383:352] ;
  assign v_fb_data_2_11_EN =
	     EN_ma_fill_from_memory && _dfoo41 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd2 ;

  // register v_fb_data_2_12
  assign v_fb_data_2_12_D_IN =
	     MUX_v_fb_data_2_12_write_1__SEL_1 ?
	       MUX_v_fb_data_2_12_write_1__VAL_1 :
	       mav_allocate_line_dataline[415:384] ;
  assign v_fb_data_2_12_EN =
	     EN_ma_fill_from_memory && _dfoo39 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd2 ;

  // register v_fb_data_2_13
  assign v_fb_data_2_13_D_IN =
	     MUX_v_fb_data_2_13_write_1__SEL_1 ?
	       MUX_v_fb_data_2_13_write_1__VAL_1 :
	       mav_allocate_line_dataline[447:416] ;
  assign v_fb_data_2_13_EN =
	     EN_ma_fill_from_memory && _dfoo37 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd2 ;

  // register v_fb_data_2_14
  assign v_fb_data_2_14_D_IN =
	     MUX_v_fb_data_2_14_write_1__SEL_1 ?
	       MUX_v_fb_data_2_14_write_1__VAL_1 :
	       mav_allocate_line_dataline[479:448] ;
  assign v_fb_data_2_14_EN =
	     EN_ma_fill_from_memory && _dfoo35 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd2 ;

  // register v_fb_data_2_15
  assign v_fb_data_2_15_D_IN =
	     MUX_v_fb_data_2_15_write_1__SEL_1 ?
	       MUX_v_fb_data_2_15_write_1__VAL_1 :
	       mav_allocate_line_dataline[511:480] ;
  assign v_fb_data_2_15_EN =
	     EN_ma_fill_from_memory && _dfoo33 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd2 ;

  // register v_fb_data_2_2
  assign v_fb_data_2_2_D_IN =
	     MUX_v_fb_data_2_2_write_1__SEL_1 ?
	       MUX_v_fb_data_2_2_write_1__VAL_1 :
	       mav_allocate_line_dataline[95:64] ;
  assign v_fb_data_2_2_EN =
	     EN_ma_fill_from_memory && _dfoo59 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd2 ;

  // register v_fb_data_2_3
  assign v_fb_data_2_3_D_IN =
	     MUX_v_fb_data_2_3_write_1__SEL_1 ?
	       MUX_v_fb_data_2_3_write_1__VAL_1 :
	       mav_allocate_line_dataline[127:96] ;
  assign v_fb_data_2_3_EN =
	     EN_ma_fill_from_memory && _dfoo57 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd2 ;

  // register v_fb_data_2_4
  assign v_fb_data_2_4_D_IN =
	     MUX_v_fb_data_2_4_write_1__SEL_1 ?
	       MUX_v_fb_data_2_4_write_1__VAL_1 :
	       mav_allocate_line_dataline[159:128] ;
  assign v_fb_data_2_4_EN =
	     EN_ma_fill_from_memory && _dfoo55 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd2 ;

  // register v_fb_data_2_5
  assign v_fb_data_2_5_D_IN =
	     MUX_v_fb_data_2_5_write_1__SEL_1 ?
	       MUX_v_fb_data_2_5_write_1__VAL_1 :
	       mav_allocate_line_dataline[191:160] ;
  assign v_fb_data_2_5_EN =
	     EN_ma_fill_from_memory && _dfoo53 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd2 ;

  // register v_fb_data_2_6
  assign v_fb_data_2_6_D_IN =
	     MUX_v_fb_data_2_6_write_1__SEL_1 ?
	       MUX_v_fb_data_2_6_write_1__VAL_1 :
	       mav_allocate_line_dataline[223:192] ;
  assign v_fb_data_2_6_EN =
	     EN_ma_fill_from_memory && _dfoo51 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd2 ;

  // register v_fb_data_2_7
  assign v_fb_data_2_7_D_IN =
	     MUX_v_fb_data_2_7_write_1__SEL_1 ?
	       MUX_v_fb_data_2_7_write_1__VAL_1 :
	       mav_allocate_line_dataline[255:224] ;
  assign v_fb_data_2_7_EN =
	     EN_ma_fill_from_memory && _dfoo49 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd2 ;

  // register v_fb_data_2_8
  assign v_fb_data_2_8_D_IN =
	     MUX_v_fb_data_2_8_write_1__SEL_1 ?
	       MUX_v_fb_data_2_8_write_1__VAL_1 :
	       mav_allocate_line_dataline[287:256] ;
  assign v_fb_data_2_8_EN =
	     EN_ma_fill_from_memory && _dfoo47 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd2 ;

  // register v_fb_data_2_9
  assign v_fb_data_2_9_D_IN =
	     MUX_v_fb_data_2_9_write_1__SEL_1 ?
	       MUX_v_fb_data_2_9_write_1__VAL_1 :
	       mav_allocate_line_dataline[319:288] ;
  assign v_fb_data_2_9_EN =
	     EN_ma_fill_from_memory && _dfoo45 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd2 ;

  // register v_fb_data_3_0
  assign v_fb_data_3_0_D_IN =
	     MUX_v_fb_data_3_0_write_1__SEL_1 ?
	       MUX_v_fb_data_3_0_write_1__VAL_1 :
	       mav_allocate_line_dataline[31:0] ;
  assign v_fb_data_3_0_EN =
	     EN_ma_fill_from_memory && _dfoo31 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd3 ;

  // register v_fb_data_3_1
  assign v_fb_data_3_1_D_IN =
	     MUX_v_fb_data_3_1_write_1__SEL_1 ?
	       MUX_v_fb_data_3_1_write_1__VAL_1 :
	       mav_allocate_line_dataline[63:32] ;
  assign v_fb_data_3_1_EN =
	     EN_ma_fill_from_memory && _dfoo29 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd3 ;

  // register v_fb_data_3_10
  assign v_fb_data_3_10_D_IN =
	     MUX_v_fb_data_3_10_write_1__SEL_1 ?
	       MUX_v_fb_data_3_10_write_1__VAL_1 :
	       mav_allocate_line_dataline[351:320] ;
  assign v_fb_data_3_10_EN =
	     EN_ma_fill_from_memory && _dfoo11 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd3 ;

  // register v_fb_data_3_11
  assign v_fb_data_3_11_D_IN =
	     MUX_v_fb_data_3_11_write_1__SEL_1 ?
	       MUX_v_fb_data_3_11_write_1__VAL_1 :
	       mav_allocate_line_dataline[383:352] ;
  assign v_fb_data_3_11_EN =
	     EN_ma_fill_from_memory && _dfoo9 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd3 ;

  // register v_fb_data_3_12
  assign v_fb_data_3_12_D_IN =
	     MUX_v_fb_data_3_12_write_1__SEL_1 ?
	       MUX_v_fb_data_3_12_write_1__VAL_1 :
	       mav_allocate_line_dataline[415:384] ;
  assign v_fb_data_3_12_EN =
	     EN_ma_fill_from_memory && _dfoo7 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd3 ;

  // register v_fb_data_3_13
  assign v_fb_data_3_13_D_IN =
	     MUX_v_fb_data_3_13_write_1__SEL_1 ?
	       MUX_v_fb_data_3_13_write_1__VAL_1 :
	       mav_allocate_line_dataline[447:416] ;
  assign v_fb_data_3_13_EN =
	     EN_ma_fill_from_memory && _dfoo5 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd3 ;

  // register v_fb_data_3_14
  assign v_fb_data_3_14_D_IN =
	     MUX_v_fb_data_3_14_write_1__SEL_1 ?
	       MUX_v_fb_data_3_14_write_1__VAL_1 :
	       mav_allocate_line_dataline[479:448] ;
  assign v_fb_data_3_14_EN =
	     EN_ma_fill_from_memory && _dfoo3 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd3 ;

  // register v_fb_data_3_15
  assign v_fb_data_3_15_D_IN =
	     MUX_v_fb_data_3_15_write_1__SEL_1 ?
	       MUX_v_fb_data_3_15_write_1__VAL_1 :
	       mav_allocate_line_dataline[511:480] ;
  assign v_fb_data_3_15_EN =
	     EN_ma_fill_from_memory && _dfoo1 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd3 ;

  // register v_fb_data_3_2
  assign v_fb_data_3_2_D_IN =
	     MUX_v_fb_data_3_2_write_1__SEL_1 ?
	       MUX_v_fb_data_3_2_write_1__VAL_1 :
	       mav_allocate_line_dataline[95:64] ;
  assign v_fb_data_3_2_EN =
	     EN_ma_fill_from_memory && _dfoo27 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd3 ;

  // register v_fb_data_3_3
  assign v_fb_data_3_3_D_IN =
	     MUX_v_fb_data_3_3_write_1__SEL_1 ?
	       MUX_v_fb_data_3_3_write_1__VAL_1 :
	       mav_allocate_line_dataline[127:96] ;
  assign v_fb_data_3_3_EN =
	     EN_ma_fill_from_memory && _dfoo25 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd3 ;

  // register v_fb_data_3_4
  assign v_fb_data_3_4_D_IN =
	     MUX_v_fb_data_3_4_write_1__SEL_1 ?
	       MUX_v_fb_data_3_4_write_1__VAL_1 :
	       mav_allocate_line_dataline[159:128] ;
  assign v_fb_data_3_4_EN =
	     EN_ma_fill_from_memory && _dfoo23 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd3 ;

  // register v_fb_data_3_5
  assign v_fb_data_3_5_D_IN =
	     MUX_v_fb_data_3_5_write_1__SEL_1 ?
	       MUX_v_fb_data_3_5_write_1__VAL_1 :
	       mav_allocate_line_dataline[191:160] ;
  assign v_fb_data_3_5_EN =
	     EN_ma_fill_from_memory && _dfoo21 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd3 ;

  // register v_fb_data_3_6
  assign v_fb_data_3_6_D_IN =
	     MUX_v_fb_data_3_6_write_1__SEL_1 ?
	       MUX_v_fb_data_3_6_write_1__VAL_1 :
	       mav_allocate_line_dataline[223:192] ;
  assign v_fb_data_3_6_EN =
	     EN_ma_fill_from_memory && _dfoo19 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd3 ;

  // register v_fb_data_3_7
  assign v_fb_data_3_7_D_IN =
	     MUX_v_fb_data_3_7_write_1__SEL_1 ?
	       MUX_v_fb_data_3_7_write_1__VAL_1 :
	       mav_allocate_line_dataline[255:224] ;
  assign v_fb_data_3_7_EN =
	     EN_ma_fill_from_memory && _dfoo17 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd3 ;

  // register v_fb_data_3_8
  assign v_fb_data_3_8_D_IN =
	     MUX_v_fb_data_3_8_write_1__SEL_1 ?
	       MUX_v_fb_data_3_8_write_1__VAL_1 :
	       mav_allocate_line_dataline[287:256] ;
  assign v_fb_data_3_8_EN =
	     EN_ma_fill_from_memory && _dfoo15 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd3 ;

  // register v_fb_data_3_9
  assign v_fb_data_3_9_D_IN =
	     MUX_v_fb_data_3_9_write_1__SEL_1 ?
	       MUX_v_fb_data_3_9_write_1__VAL_1 :
	       mav_allocate_line_dataline[319:288] ;
  assign v_fb_data_3_9_EN =
	     EN_ma_fill_from_memory && _dfoo13 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd3 ;

  // register v_fb_err_0
  assign v_fb_err_0_D_IN =
	     MUX_v_fb_err_0_write_1__SEL_1 &&
	     ma_fill_from_memory_mem_resp[1] ;
  assign v_fb_err_0_EN =
	     EN_ma_fill_from_memory && ma_fill_from_memory_fbindex == 2'd0 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd0 ;

  // register v_fb_err_1
  assign v_fb_err_1_D_IN =
	     MUX_v_fb_err_1_write_1__SEL_1 &&
	     ma_fill_from_memory_mem_resp[1] ;
  assign v_fb_err_1_EN =
	     EN_ma_fill_from_memory && ma_fill_from_memory_fbindex == 2'd1 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd1 ;

  // register v_fb_err_2
  assign v_fb_err_2_D_IN =
	     MUX_v_fb_err_2_write_1__SEL_1 &&
	     ma_fill_from_memory_mem_resp[1] ;
  assign v_fb_err_2_EN =
	     EN_ma_fill_from_memory && ma_fill_from_memory_fbindex == 2'd2 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd2 ;

  // register v_fb_err_3
  assign v_fb_err_3_D_IN =
	     MUX_v_fb_err_3_write_1__SEL_1 &&
	     ma_fill_from_memory_mem_resp[1] ;
  assign v_fb_err_3_EN =
	     EN_ma_fill_from_memory && ma_fill_from_memory_fbindex == 2'd3 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd3 ;

  // register v_fb_line_valid_0
  always@(MUX_v_fb_addr_valid_0_write_1__SEL_1 or
	  MUX_v_fb_line_valid_0_write_1__SEL_2 or
	  MUX_v_fb_addr_valid_0_write_1__SEL_2 or mav_allocate_line_from_ram)
  case (1'b1)
    MUX_v_fb_addr_valid_0_write_1__SEL_1: v_fb_line_valid_0_D_IN = 1'd0;
    MUX_v_fb_line_valid_0_write_1__SEL_2: v_fb_line_valid_0_D_IN = 1'd1;
    MUX_v_fb_addr_valid_0_write_1__SEL_2:
	v_fb_line_valid_0_D_IN = mav_allocate_line_from_ram;
    default: v_fb_line_valid_0_D_IN = 1'bx /* unspecified value */ ;
  endcase
  assign v_fb_line_valid_0_EN =
	     EN_mav_allocate_line && rg_fbtail == 2'd0 ||
	     EN_ma_fill_from_memory && ma_fill_from_memory_fbindex == 2'd0 &&
	     ma_fill_from_memory_mem_resp[2] ||
	     EN_ma_perform_release && rg_fbhead == 2'd0 ;

  // register v_fb_line_valid_1
  always@(MUX_v_fb_addr_valid_1_write_1__SEL_1 or
	  MUX_v_fb_line_valid_1_write_1__SEL_2 or
	  MUX_v_fb_addr_valid_1_write_1__SEL_2 or mav_allocate_line_from_ram)
  case (1'b1)
    MUX_v_fb_addr_valid_1_write_1__SEL_1: v_fb_line_valid_1_D_IN = 1'd0;
    MUX_v_fb_line_valid_1_write_1__SEL_2: v_fb_line_valid_1_D_IN = 1'd1;
    MUX_v_fb_addr_valid_1_write_1__SEL_2:
	v_fb_line_valid_1_D_IN = mav_allocate_line_from_ram;
    default: v_fb_line_valid_1_D_IN = 1'bx /* unspecified value */ ;
  endcase
  assign v_fb_line_valid_1_EN =
	     EN_mav_allocate_line && rg_fbtail == 2'd1 ||
	     EN_ma_fill_from_memory && ma_fill_from_memory_fbindex == 2'd1 &&
	     ma_fill_from_memory_mem_resp[2] ||
	     EN_ma_perform_release && rg_fbhead == 2'd1 ;

  // register v_fb_line_valid_2
  always@(MUX_v_fb_addr_valid_2_write_1__SEL_1 or
	  MUX_v_fb_line_valid_2_write_1__SEL_2 or
	  MUX_v_fb_addr_valid_2_write_1__SEL_2 or mav_allocate_line_from_ram)
  case (1'b1)
    MUX_v_fb_addr_valid_2_write_1__SEL_1: v_fb_line_valid_2_D_IN = 1'd0;
    MUX_v_fb_line_valid_2_write_1__SEL_2: v_fb_line_valid_2_D_IN = 1'd1;
    MUX_v_fb_addr_valid_2_write_1__SEL_2:
	v_fb_line_valid_2_D_IN = mav_allocate_line_from_ram;
    default: v_fb_line_valid_2_D_IN = 1'bx /* unspecified value */ ;
  endcase
  assign v_fb_line_valid_2_EN =
	     EN_mav_allocate_line && rg_fbtail == 2'd2 ||
	     EN_ma_fill_from_memory && ma_fill_from_memory_fbindex == 2'd2 &&
	     ma_fill_from_memory_mem_resp[2] ||
	     EN_ma_perform_release && rg_fbhead == 2'd2 ;

  // register v_fb_line_valid_3
  always@(MUX_v_fb_addr_valid_3_write_1__SEL_1 or
	  MUX_v_fb_line_valid_3_write_1__SEL_2 or
	  MUX_v_fb_addr_valid_3_write_1__SEL_2 or mav_allocate_line_from_ram)
  case (1'b1)
    MUX_v_fb_addr_valid_3_write_1__SEL_1: v_fb_line_valid_3_D_IN = 1'd0;
    MUX_v_fb_line_valid_3_write_1__SEL_2: v_fb_line_valid_3_D_IN = 1'd1;
    MUX_v_fb_addr_valid_3_write_1__SEL_2:
	v_fb_line_valid_3_D_IN = mav_allocate_line_from_ram;
    default: v_fb_line_valid_3_D_IN = 1'bx /* unspecified value */ ;
  endcase
  assign v_fb_line_valid_3_EN =
	     EN_ma_perform_release && rg_fbhead == 2'd3 ||
	     EN_mav_allocate_line && rg_fbtail == 2'd3 ||
	     EN_ma_fill_from_memory && ma_fill_from_memory_fbindex == 2'd3 &&
	     ma_fill_from_memory_mem_resp[2] ;

  // remaining internal signals
  assign IF_v_fb_addr_0_29_BITS_31_TO_6_57_EQ_mav_polli_ETC___d360 =
	     (v_fb_addr_0[31:6] == mav_polling_response_address[31:6] &&
	      v_fb_addr_valid_0) ?
	       4'd1 :
	       4'd0 ;
  assign IF_v_fb_addr_1_30_BITS_31_TO_6_54_EQ_mav_polli_ETC___d363 =
	     (v_fb_addr_1[31:6] == mav_polling_response_address[31:6] &&
	      v_fb_addr_valid_1) ?
	       v_fb_err_1 :
	       v_fb_err_0 ;
  assign IF_v_fb_addr_1_30_BITS_31_TO_6_54_EQ_mav_polli_ETC___d376 =
	     (v_fb_addr_1[31:6] == mav_polling_response_address[31:6] &&
	      v_fb_addr_valid_1) ?
	       lv_selected_word__h16865 :
	       lv_selected_word__h16918 ;
  assign IF_v_fb_addr_1_30_BITS_31_TO_6_54_EQ_mav_polli_ETC___d384 =
	     (v_fb_addr_1[31:6] == mav_polling_response_address[31:6] &&
	      v_fb_addr_valid_1) ?
	       v_fb_line_valid_1 :
	       IF_v_fb_addr_0_29_BITS_31_TO_6_57_EQ_mav_polli_ETC___d360[0] &&
	       v_fb_line_valid_0 ;
  assign IF_v_fb_addr_2_31_BITS_31_TO_6_51_EQ_mav_polli_ETC___d364 =
	     (v_fb_addr_2[31:6] == mav_polling_response_address[31:6] &&
	      v_fb_addr_valid_2) ?
	       v_fb_err_2 :
	       IF_v_fb_addr_1_30_BITS_31_TO_6_54_EQ_mav_polli_ETC___d363 ;
  assign IF_v_fb_addr_2_31_BITS_31_TO_6_51_EQ_mav_polli_ETC___d377 =
	     (v_fb_addr_2[31:6] == mav_polling_response_address[31:6] &&
	      v_fb_addr_valid_2) ?
	       lv_selected_word__h16812 :
	       IF_v_fb_addr_1_30_BITS_31_TO_6_54_EQ_mav_polli_ETC___d376 ;
  assign IF_v_fb_addr_2_31_BITS_31_TO_6_51_EQ_mav_polli_ETC___d385 =
	     (v_fb_addr_2[31:6] == mav_polling_response_address[31:6] &&
	      v_fb_addr_valid_2) ?
	       v_fb_line_valid_2 :
	       IF_v_fb_addr_1_30_BITS_31_TO_6_54_EQ_mav_polli_ETC___d384 ;
  assign IF_v_fb_addr_3_32_BITS_31_TO_6_47_EQ_mav_polli_ETC___d386 =
	     (v_fb_addr_3[31:6] == mav_polling_response_address[31:6] &&
	      v_fb_addr_valid_3) ?
	       v_fb_line_valid_3 :
	       IF_v_fb_addr_2_31_BITS_31_TO_6_51_EQ_mav_polli_ETC___d385 ;
  assign _dfoo1 =
	     (lv_current_bank__h11109 == 4'd15 || x__h12649 == 4'd15) &&
	     ma_fill_from_memory_fbindex == 2'd3 ;
  assign _dfoo101 =
	     (lv_current_bank__h11109 == 4'd13 || x__h12649 == 4'd13) &&
	     ma_fill_from_memory_fbindex == 2'd0 ;
  assign _dfoo103 =
	     (lv_current_bank__h11109 == 4'd12 || x__h12649 == 4'd12) &&
	     ma_fill_from_memory_fbindex == 2'd0 ;
  assign _dfoo105 =
	     (lv_current_bank__h11109 == 4'd11 || x__h12649 == 4'd11) &&
	     ma_fill_from_memory_fbindex == 2'd0 ;
  assign _dfoo107 =
	     (lv_current_bank__h11109 == 4'd10 || x__h12649 == 4'd10) &&
	     ma_fill_from_memory_fbindex == 2'd0 ;
  assign _dfoo109 =
	     (lv_current_bank__h11109 == 4'd9 || x__h12649 == 4'd9) &&
	     ma_fill_from_memory_fbindex == 2'd0 ;
  assign _dfoo11 =
	     (lv_current_bank__h11109 == 4'd10 || x__h12649 == 4'd10) &&
	     ma_fill_from_memory_fbindex == 2'd3 ;
  assign _dfoo111 =
	     (lv_current_bank__h11109 == 4'd8 || x__h12649 == 4'd8) &&
	     ma_fill_from_memory_fbindex == 2'd0 ;
  assign _dfoo113 =
	     (lv_current_bank__h11109 == 4'd7 || x__h12649 == 4'd7) &&
	     ma_fill_from_memory_fbindex == 2'd0 ;
  assign _dfoo115 =
	     (lv_current_bank__h11109 == 4'd6 || x__h12649 == 4'd6) &&
	     ma_fill_from_memory_fbindex == 2'd0 ;
  assign _dfoo117 =
	     (lv_current_bank__h11109 == 4'd5 || x__h12649 == 4'd5) &&
	     ma_fill_from_memory_fbindex == 2'd0 ;
  assign _dfoo119 =
	     (lv_current_bank__h11109 == 4'd4 || x__h12649 == 4'd4) &&
	     ma_fill_from_memory_fbindex == 2'd0 ;
  assign _dfoo121 =
	     (lv_current_bank__h11109 == 4'd3 || x__h12649 == 4'd3) &&
	     ma_fill_from_memory_fbindex == 2'd0 ;
  assign _dfoo123 =
	     (lv_current_bank__h11109 == 4'd2 || x__h12649 == 4'd2) &&
	     ma_fill_from_memory_fbindex == 2'd0 ;
  assign _dfoo125 =
	     (lv_current_bank__h11109 == 4'd1 || x__h12649 == 4'd1) &&
	     ma_fill_from_memory_fbindex == 2'd0 ;
  assign _dfoo127 =
	     (lv_current_bank__h11109 == 4'd0 || x__h12649 == 4'd0) &&
	     ma_fill_from_memory_fbindex == 2'd0 ;
  assign _dfoo13 =
	     (lv_current_bank__h11109 == 4'd9 || x__h12649 == 4'd9) &&
	     ma_fill_from_memory_fbindex == 2'd3 ;
  assign _dfoo15 =
	     (lv_current_bank__h11109 == 4'd8 || x__h12649 == 4'd8) &&
	     ma_fill_from_memory_fbindex == 2'd3 ;
  assign _dfoo17 =
	     (lv_current_bank__h11109 == 4'd7 || x__h12649 == 4'd7) &&
	     ma_fill_from_memory_fbindex == 2'd3 ;
  assign _dfoo19 =
	     (lv_current_bank__h11109 == 4'd6 || x__h12649 == 4'd6) &&
	     ma_fill_from_memory_fbindex == 2'd3 ;
  assign _dfoo21 =
	     (lv_current_bank__h11109 == 4'd5 || x__h12649 == 4'd5) &&
	     ma_fill_from_memory_fbindex == 2'd3 ;
  assign _dfoo23 =
	     (lv_current_bank__h11109 == 4'd4 || x__h12649 == 4'd4) &&
	     ma_fill_from_memory_fbindex == 2'd3 ;
  assign _dfoo25 =
	     (lv_current_bank__h11109 == 4'd3 || x__h12649 == 4'd3) &&
	     ma_fill_from_memory_fbindex == 2'd3 ;
  assign _dfoo27 =
	     (lv_current_bank__h11109 == 4'd2 || x__h12649 == 4'd2) &&
	     ma_fill_from_memory_fbindex == 2'd3 ;
  assign _dfoo29 =
	     (lv_current_bank__h11109 == 4'd1 || x__h12649 == 4'd1) &&
	     ma_fill_from_memory_fbindex == 2'd3 ;
  assign _dfoo3 =
	     (lv_current_bank__h11109 == 4'd14 || x__h12649 == 4'd14) &&
	     ma_fill_from_memory_fbindex == 2'd3 ;
  assign _dfoo31 =
	     (lv_current_bank__h11109 == 4'd0 || x__h12649 == 4'd0) &&
	     ma_fill_from_memory_fbindex == 2'd3 ;
  assign _dfoo33 =
	     (lv_current_bank__h11109 == 4'd15 || x__h12649 == 4'd15) &&
	     ma_fill_from_memory_fbindex == 2'd2 ;
  assign _dfoo35 =
	     (lv_current_bank__h11109 == 4'd14 || x__h12649 == 4'd14) &&
	     ma_fill_from_memory_fbindex == 2'd2 ;
  assign _dfoo37 =
	     (lv_current_bank__h11109 == 4'd13 || x__h12649 == 4'd13) &&
	     ma_fill_from_memory_fbindex == 2'd2 ;
  assign _dfoo39 =
	     (lv_current_bank__h11109 == 4'd12 || x__h12649 == 4'd12) &&
	     ma_fill_from_memory_fbindex == 2'd2 ;
  assign _dfoo41 =
	     (lv_current_bank__h11109 == 4'd11 || x__h12649 == 4'd11) &&
	     ma_fill_from_memory_fbindex == 2'd2 ;
  assign _dfoo43 =
	     (lv_current_bank__h11109 == 4'd10 || x__h12649 == 4'd10) &&
	     ma_fill_from_memory_fbindex == 2'd2 ;
  assign _dfoo45 =
	     (lv_current_bank__h11109 == 4'd9 || x__h12649 == 4'd9) &&
	     ma_fill_from_memory_fbindex == 2'd2 ;
  assign _dfoo47 =
	     (lv_current_bank__h11109 == 4'd8 || x__h12649 == 4'd8) &&
	     ma_fill_from_memory_fbindex == 2'd2 ;
  assign _dfoo49 =
	     (lv_current_bank__h11109 == 4'd7 || x__h12649 == 4'd7) &&
	     ma_fill_from_memory_fbindex == 2'd2 ;
  assign _dfoo5 =
	     (lv_current_bank__h11109 == 4'd13 || x__h12649 == 4'd13) &&
	     ma_fill_from_memory_fbindex == 2'd3 ;
  assign _dfoo51 =
	     (lv_current_bank__h11109 == 4'd6 || x__h12649 == 4'd6) &&
	     ma_fill_from_memory_fbindex == 2'd2 ;
  assign _dfoo53 =
	     (lv_current_bank__h11109 == 4'd5 || x__h12649 == 4'd5) &&
	     ma_fill_from_memory_fbindex == 2'd2 ;
  assign _dfoo55 =
	     (lv_current_bank__h11109 == 4'd4 || x__h12649 == 4'd4) &&
	     ma_fill_from_memory_fbindex == 2'd2 ;
  assign _dfoo57 =
	     (lv_current_bank__h11109 == 4'd3 || x__h12649 == 4'd3) &&
	     ma_fill_from_memory_fbindex == 2'd2 ;
  assign _dfoo59 =
	     (lv_current_bank__h11109 == 4'd2 || x__h12649 == 4'd2) &&
	     ma_fill_from_memory_fbindex == 2'd2 ;
  assign _dfoo61 =
	     (lv_current_bank__h11109 == 4'd1 || x__h12649 == 4'd1) &&
	     ma_fill_from_memory_fbindex == 2'd2 ;
  assign _dfoo63 =
	     (lv_current_bank__h11109 == 4'd0 || x__h12649 == 4'd0) &&
	     ma_fill_from_memory_fbindex == 2'd2 ;
  assign _dfoo65 =
	     (lv_current_bank__h11109 == 4'd15 || x__h12649 == 4'd15) &&
	     ma_fill_from_memory_fbindex == 2'd1 ;
  assign _dfoo67 =
	     (lv_current_bank__h11109 == 4'd14 || x__h12649 == 4'd14) &&
	     ma_fill_from_memory_fbindex == 2'd1 ;
  assign _dfoo69 =
	     (lv_current_bank__h11109 == 4'd13 || x__h12649 == 4'd13) &&
	     ma_fill_from_memory_fbindex == 2'd1 ;
  assign _dfoo7 =
	     (lv_current_bank__h11109 == 4'd12 || x__h12649 == 4'd12) &&
	     ma_fill_from_memory_fbindex == 2'd3 ;
  assign _dfoo71 =
	     (lv_current_bank__h11109 == 4'd12 || x__h12649 == 4'd12) &&
	     ma_fill_from_memory_fbindex == 2'd1 ;
  assign _dfoo73 =
	     (lv_current_bank__h11109 == 4'd11 || x__h12649 == 4'd11) &&
	     ma_fill_from_memory_fbindex == 2'd1 ;
  assign _dfoo75 =
	     (lv_current_bank__h11109 == 4'd10 || x__h12649 == 4'd10) &&
	     ma_fill_from_memory_fbindex == 2'd1 ;
  assign _dfoo77 =
	     (lv_current_bank__h11109 == 4'd9 || x__h12649 == 4'd9) &&
	     ma_fill_from_memory_fbindex == 2'd1 ;
  assign _dfoo79 =
	     (lv_current_bank__h11109 == 4'd8 || x__h12649 == 4'd8) &&
	     ma_fill_from_memory_fbindex == 2'd1 ;
  assign _dfoo81 =
	     (lv_current_bank__h11109 == 4'd7 || x__h12649 == 4'd7) &&
	     ma_fill_from_memory_fbindex == 2'd1 ;
  assign _dfoo83 =
	     (lv_current_bank__h11109 == 4'd6 || x__h12649 == 4'd6) &&
	     ma_fill_from_memory_fbindex == 2'd1 ;
  assign _dfoo85 =
	     (lv_current_bank__h11109 == 4'd5 || x__h12649 == 4'd5) &&
	     ma_fill_from_memory_fbindex == 2'd1 ;
  assign _dfoo87 =
	     (lv_current_bank__h11109 == 4'd4 || x__h12649 == 4'd4) &&
	     ma_fill_from_memory_fbindex == 2'd1 ;
  assign _dfoo89 =
	     (lv_current_bank__h11109 == 4'd3 || x__h12649 == 4'd3) &&
	     ma_fill_from_memory_fbindex == 2'd1 ;
  assign _dfoo9 =
	     (lv_current_bank__h11109 == 4'd11 || x__h12649 == 4'd11) &&
	     ma_fill_from_memory_fbindex == 2'd3 ;
  assign _dfoo91 =
	     (lv_current_bank__h11109 == 4'd2 || x__h12649 == 4'd2) &&
	     ma_fill_from_memory_fbindex == 2'd1 ;
  assign _dfoo93 =
	     (lv_current_bank__h11109 == 4'd1 || x__h12649 == 4'd1) &&
	     ma_fill_from_memory_fbindex == 2'd1 ;
  assign _dfoo95 =
	     (lv_current_bank__h11109 == 4'd0 || x__h12649 == 4'd0) &&
	     ma_fill_from_memory_fbindex == 2'd1 ;
  assign _dfoo97 =
	     (lv_current_bank__h11109 == 4'd15 || x__h12649 == 4'd15) &&
	     ma_fill_from_memory_fbindex == 2'd0 ;
  assign _dfoo99 =
	     (lv_current_bank__h11109 == 4'd14 || x__h12649 == 4'd14) &&
	     ma_fill_from_memory_fbindex == 2'd0 ;
  assign _theResult____h16339 =
	     { v_fb_addr_3[31:6] == mav_polling_response_address[31:6] &&
	       v_fb_addr_valid_3,
	       v_fb_addr_2[31:6] == mav_polling_response_address[31:6] &&
	       v_fb_addr_valid_2,
	       v_fb_addr_1[31:6] == mav_polling_response_address[31:6] &&
	       v_fb_addr_valid_1,
	       IF_v_fb_addr_0_29_BITS_31_TO_6_57_EQ_mav_polli_ETC___d360[0] } ;
  assign lv_current_bank__h11109 =
	     (rg_fb_enables == 16'd0) ?
	       ma_fill_from_memory_init_bank :
	       rg_next_bank ;
  assign mav_polling_response_fill_AND_v_fb_addr_3_32_B_ETC___d390 =
	     mav_polling_response_fill &&
	     _theResult____h16339[mav_polling_response_fbindex] &&
	     rg_fb_enables[mav_polling_response_address[5:2]] ;
  assign w__h14364 = rg_fb_enables | x__h14393 ;
  assign x__h11008 = rg_fbtail + 2'd1 ;
  assign x__h12649 = lv_current_bank__h11109 + 4'd1 ;
  assign x__h14340 = w__h14364 | x__h14368 ;
  assign x__h14368 = 16'd1 << x__h12649 ;
  assign x__h14393 = 16'd1 << lv_current_bank__h11109 ;
  assign x__h16159 = rg_fbhead + 2'd1 ;
  assign x_mv_release_info_dataline__h14575 =
	     { spliced_bits__h14683,
	       spliced_bits__h14712,
	       spliced_bits__h14741,
	       spliced_bits__h14770,
	       spliced_bits__h14799,
	       spliced_bits__h14828,
	       spliced_bits__h14857,
	       spliced_bits__h14886,
	       spliced_bits__h14915,
	       spliced_bits__h14944,
	       spliced_bits__h14973,
	       spliced_bits__h15002,
	       spliced_bits__h15031,
	       spliced_bits__h15060,
	       spliced_bits__h15089,
	       spliced_bits__h15118 } ;
  assign y_avValue_err__h16374 =
	     (v_fb_addr_3[31:6] == mav_polling_response_address[31:6] &&
	      v_fb_addr_valid_3) ?
	       v_fb_err_3 :
	       IF_v_fb_addr_2_31_BITS_31_TO_6_51_EQ_mav_polli_ETC___d364 ;
  assign y_avValue_word__h16375 =
	     (v_fb_addr_3[31:6] == mav_polling_response_address[31:6] &&
	      v_fb_addr_valid_3) ?
	       lv_selected_word__h16759 :
	       IF_v_fb_addr_2_31_BITS_31_TO_6_51_EQ_mav_polli_ETC___d377 ;
  always@(rg_fbhead or
	  v_fb_data_0_0 or v_fb_data_1_0 or v_fb_data_2_0 or v_fb_data_3_0)
  begin
    case (rg_fbhead)
      2'd0: spliced_bits__h15118 = v_fb_data_0_0;
      2'd1: spliced_bits__h15118 = v_fb_data_1_0;
      2'd2: spliced_bits__h15118 = v_fb_data_2_0;
      2'd3: spliced_bits__h15118 = v_fb_data_3_0;
    endcase
  end
  always@(rg_fbhead or
	  v_fb_data_0_14 or
	  v_fb_data_1_14 or v_fb_data_2_14 or v_fb_data_3_14)
  begin
    case (rg_fbhead)
      2'd0: spliced_bits__h14712 = v_fb_data_0_14;
      2'd1: spliced_bits__h14712 = v_fb_data_1_14;
      2'd2: spliced_bits__h14712 = v_fb_data_2_14;
      2'd3: spliced_bits__h14712 = v_fb_data_3_14;
    endcase
  end
  always@(rg_fbhead or
	  v_fb_data_0_13 or
	  v_fb_data_1_13 or v_fb_data_2_13 or v_fb_data_3_13)
  begin
    case (rg_fbhead)
      2'd0: spliced_bits__h14741 = v_fb_data_0_13;
      2'd1: spliced_bits__h14741 = v_fb_data_1_13;
      2'd2: spliced_bits__h14741 = v_fb_data_2_13;
      2'd3: spliced_bits__h14741 = v_fb_data_3_13;
    endcase
  end
  always@(rg_fbhead or
	  v_fb_data_0_12 or
	  v_fb_data_1_12 or v_fb_data_2_12 or v_fb_data_3_12)
  begin
    case (rg_fbhead)
      2'd0: spliced_bits__h14770 = v_fb_data_0_12;
      2'd1: spliced_bits__h14770 = v_fb_data_1_12;
      2'd2: spliced_bits__h14770 = v_fb_data_2_12;
      2'd3: spliced_bits__h14770 = v_fb_data_3_12;
    endcase
  end
  always@(rg_fbhead or
	  v_fb_data_0_11 or
	  v_fb_data_1_11 or v_fb_data_2_11 or v_fb_data_3_11)
  begin
    case (rg_fbhead)
      2'd0: spliced_bits__h14799 = v_fb_data_0_11;
      2'd1: spliced_bits__h14799 = v_fb_data_1_11;
      2'd2: spliced_bits__h14799 = v_fb_data_2_11;
      2'd3: spliced_bits__h14799 = v_fb_data_3_11;
    endcase
  end
  always@(rg_fbhead or
	  v_fb_data_0_10 or
	  v_fb_data_1_10 or v_fb_data_2_10 or v_fb_data_3_10)
  begin
    case (rg_fbhead)
      2'd0: spliced_bits__h14828 = v_fb_data_0_10;
      2'd1: spliced_bits__h14828 = v_fb_data_1_10;
      2'd2: spliced_bits__h14828 = v_fb_data_2_10;
      2'd3: spliced_bits__h14828 = v_fb_data_3_10;
    endcase
  end
  always@(rg_fbhead or
	  v_fb_data_0_9 or v_fb_data_1_9 or v_fb_data_2_9 or v_fb_data_3_9)
  begin
    case (rg_fbhead)
      2'd0: spliced_bits__h14857 = v_fb_data_0_9;
      2'd1: spliced_bits__h14857 = v_fb_data_1_9;
      2'd2: spliced_bits__h14857 = v_fb_data_2_9;
      2'd3: spliced_bits__h14857 = v_fb_data_3_9;
    endcase
  end
  always@(rg_fbhead or
	  v_fb_data_0_8 or v_fb_data_1_8 or v_fb_data_2_8 or v_fb_data_3_8)
  begin
    case (rg_fbhead)
      2'd0: spliced_bits__h14886 = v_fb_data_0_8;
      2'd1: spliced_bits__h14886 = v_fb_data_1_8;
      2'd2: spliced_bits__h14886 = v_fb_data_2_8;
      2'd3: spliced_bits__h14886 = v_fb_data_3_8;
    endcase
  end
  always@(rg_fbhead or
	  v_fb_data_0_7 or v_fb_data_1_7 or v_fb_data_2_7 or v_fb_data_3_7)
  begin
    case (rg_fbhead)
      2'd0: spliced_bits__h14915 = v_fb_data_0_7;
      2'd1: spliced_bits__h14915 = v_fb_data_1_7;
      2'd2: spliced_bits__h14915 = v_fb_data_2_7;
      2'd3: spliced_bits__h14915 = v_fb_data_3_7;
    endcase
  end
  always@(rg_fbhead or
	  v_fb_data_0_6 or v_fb_data_1_6 or v_fb_data_2_6 or v_fb_data_3_6)
  begin
    case (rg_fbhead)
      2'd0: spliced_bits__h14944 = v_fb_data_0_6;
      2'd1: spliced_bits__h14944 = v_fb_data_1_6;
      2'd2: spliced_bits__h14944 = v_fb_data_2_6;
      2'd3: spliced_bits__h14944 = v_fb_data_3_6;
    endcase
  end
  always@(rg_fbhead or
	  v_fb_data_0_5 or v_fb_data_1_5 or v_fb_data_2_5 or v_fb_data_3_5)
  begin
    case (rg_fbhead)
      2'd0: spliced_bits__h14973 = v_fb_data_0_5;
      2'd1: spliced_bits__h14973 = v_fb_data_1_5;
      2'd2: spliced_bits__h14973 = v_fb_data_2_5;
      2'd3: spliced_bits__h14973 = v_fb_data_3_5;
    endcase
  end
  always@(rg_fbhead or
	  v_fb_data_0_4 or v_fb_data_1_4 or v_fb_data_2_4 or v_fb_data_3_4)
  begin
    case (rg_fbhead)
      2'd0: spliced_bits__h15002 = v_fb_data_0_4;
      2'd1: spliced_bits__h15002 = v_fb_data_1_4;
      2'd2: spliced_bits__h15002 = v_fb_data_2_4;
      2'd3: spliced_bits__h15002 = v_fb_data_3_4;
    endcase
  end
  always@(rg_fbhead or
	  v_fb_data_0_3 or v_fb_data_1_3 or v_fb_data_2_3 or v_fb_data_3_3)
  begin
    case (rg_fbhead)
      2'd0: spliced_bits__h15031 = v_fb_data_0_3;
      2'd1: spliced_bits__h15031 = v_fb_data_1_3;
      2'd2: spliced_bits__h15031 = v_fb_data_2_3;
      2'd3: spliced_bits__h15031 = v_fb_data_3_3;
    endcase
  end
  always@(rg_fbhead or
	  v_fb_data_0_2 or v_fb_data_1_2 or v_fb_data_2_2 or v_fb_data_3_2)
  begin
    case (rg_fbhead)
      2'd0: spliced_bits__h15060 = v_fb_data_0_2;
      2'd1: spliced_bits__h15060 = v_fb_data_1_2;
      2'd2: spliced_bits__h15060 = v_fb_data_2_2;
      2'd3: spliced_bits__h15060 = v_fb_data_3_2;
    endcase
  end
  always@(rg_fbhead or
	  v_fb_data_0_1 or v_fb_data_1_1 or v_fb_data_2_1 or v_fb_data_3_1)
  begin
    case (rg_fbhead)
      2'd0: spliced_bits__h15089 = v_fb_data_0_1;
      2'd1: spliced_bits__h15089 = v_fb_data_1_1;
      2'd2: spliced_bits__h15089 = v_fb_data_2_1;
      2'd3: spliced_bits__h15089 = v_fb_data_3_1;
    endcase
  end
  always@(rg_fbhead or v_fb_err_0 or v_fb_err_1 or v_fb_err_2 or v_fb_err_3)
  begin
    case (rg_fbhead)
      2'd0: x_mv_release_info_err__h14577 = v_fb_err_0;
      2'd1: x_mv_release_info_err__h14577 = v_fb_err_1;
      2'd2: x_mv_release_info_err__h14577 = v_fb_err_2;
      2'd3: x_mv_release_info_err__h14577 = v_fb_err_3;
    endcase
  end
  always@(rg_fbhead or
	  v_fb_addr_0 or v_fb_addr_1 or v_fb_addr_2 or v_fb_addr_3)
  begin
    case (rg_fbhead)
      2'd0: x_mv_release_info_address__h14576 = v_fb_addr_0;
      2'd1: x_mv_release_info_address__h14576 = v_fb_addr_1;
      2'd2: x_mv_release_info_address__h14576 = v_fb_addr_2;
      2'd3: x_mv_release_info_address__h14576 = v_fb_addr_3;
    endcase
  end
  always@(rg_fbhead or
	  v_fb_data_0_15 or
	  v_fb_data_1_15 or v_fb_data_2_15 or v_fb_data_3_15)
  begin
    case (rg_fbhead)
      2'd0: spliced_bits__h14683 = v_fb_data_0_15;
      2'd1: spliced_bits__h14683 = v_fb_data_1_15;
      2'd2: spliced_bits__h14683 = v_fb_data_2_15;
      2'd3: spliced_bits__h14683 = v_fb_data_3_15;
    endcase
  end
  always@(mav_polling_response_address or
	  v_fb_data_3_0 or
	  v_fb_data_3_1 or
	  v_fb_data_3_2 or
	  v_fb_data_3_3 or
	  v_fb_data_3_4 or
	  v_fb_data_3_5 or
	  v_fb_data_3_6 or
	  v_fb_data_3_7 or
	  v_fb_data_3_8 or
	  v_fb_data_3_9 or
	  v_fb_data_3_10 or
	  v_fb_data_3_11 or
	  v_fb_data_3_12 or
	  v_fb_data_3_13 or v_fb_data_3_14 or v_fb_data_3_15)
  begin
    case (mav_polling_response_address[5:2])
      4'd0: lv_selected_word__h16759 = v_fb_data_3_0;
      4'd1: lv_selected_word__h16759 = v_fb_data_3_1;
      4'd2: lv_selected_word__h16759 = v_fb_data_3_2;
      4'd3: lv_selected_word__h16759 = v_fb_data_3_3;
      4'd4: lv_selected_word__h16759 = v_fb_data_3_4;
      4'd5: lv_selected_word__h16759 = v_fb_data_3_5;
      4'd6: lv_selected_word__h16759 = v_fb_data_3_6;
      4'd7: lv_selected_word__h16759 = v_fb_data_3_7;
      4'd8: lv_selected_word__h16759 = v_fb_data_3_8;
      4'd9: lv_selected_word__h16759 = v_fb_data_3_9;
      4'd10: lv_selected_word__h16759 = v_fb_data_3_10;
      4'd11: lv_selected_word__h16759 = v_fb_data_3_11;
      4'd12: lv_selected_word__h16759 = v_fb_data_3_12;
      4'd13: lv_selected_word__h16759 = v_fb_data_3_13;
      4'd14: lv_selected_word__h16759 = v_fb_data_3_14;
      4'd15: lv_selected_word__h16759 = v_fb_data_3_15;
    endcase
  end
  always@(mav_polling_response_address or
	  v_fb_data_2_0 or
	  v_fb_data_2_1 or
	  v_fb_data_2_2 or
	  v_fb_data_2_3 or
	  v_fb_data_2_4 or
	  v_fb_data_2_5 or
	  v_fb_data_2_6 or
	  v_fb_data_2_7 or
	  v_fb_data_2_8 or
	  v_fb_data_2_9 or
	  v_fb_data_2_10 or
	  v_fb_data_2_11 or
	  v_fb_data_2_12 or
	  v_fb_data_2_13 or v_fb_data_2_14 or v_fb_data_2_15)
  begin
    case (mav_polling_response_address[5:2])
      4'd0: lv_selected_word__h16812 = v_fb_data_2_0;
      4'd1: lv_selected_word__h16812 = v_fb_data_2_1;
      4'd2: lv_selected_word__h16812 = v_fb_data_2_2;
      4'd3: lv_selected_word__h16812 = v_fb_data_2_3;
      4'd4: lv_selected_word__h16812 = v_fb_data_2_4;
      4'd5: lv_selected_word__h16812 = v_fb_data_2_5;
      4'd6: lv_selected_word__h16812 = v_fb_data_2_6;
      4'd7: lv_selected_word__h16812 = v_fb_data_2_7;
      4'd8: lv_selected_word__h16812 = v_fb_data_2_8;
      4'd9: lv_selected_word__h16812 = v_fb_data_2_9;
      4'd10: lv_selected_word__h16812 = v_fb_data_2_10;
      4'd11: lv_selected_word__h16812 = v_fb_data_2_11;
      4'd12: lv_selected_word__h16812 = v_fb_data_2_12;
      4'd13: lv_selected_word__h16812 = v_fb_data_2_13;
      4'd14: lv_selected_word__h16812 = v_fb_data_2_14;
      4'd15: lv_selected_word__h16812 = v_fb_data_2_15;
    endcase
  end
  always@(mav_polling_response_address or
	  v_fb_data_1_0 or
	  v_fb_data_1_1 or
	  v_fb_data_1_2 or
	  v_fb_data_1_3 or
	  v_fb_data_1_4 or
	  v_fb_data_1_5 or
	  v_fb_data_1_6 or
	  v_fb_data_1_7 or
	  v_fb_data_1_8 or
	  v_fb_data_1_9 or
	  v_fb_data_1_10 or
	  v_fb_data_1_11 or
	  v_fb_data_1_12 or
	  v_fb_data_1_13 or v_fb_data_1_14 or v_fb_data_1_15)
  begin
    case (mav_polling_response_address[5:2])
      4'd0: lv_selected_word__h16865 = v_fb_data_1_0;
      4'd1: lv_selected_word__h16865 = v_fb_data_1_1;
      4'd2: lv_selected_word__h16865 = v_fb_data_1_2;
      4'd3: lv_selected_word__h16865 = v_fb_data_1_3;
      4'd4: lv_selected_word__h16865 = v_fb_data_1_4;
      4'd5: lv_selected_word__h16865 = v_fb_data_1_5;
      4'd6: lv_selected_word__h16865 = v_fb_data_1_6;
      4'd7: lv_selected_word__h16865 = v_fb_data_1_7;
      4'd8: lv_selected_word__h16865 = v_fb_data_1_8;
      4'd9: lv_selected_word__h16865 = v_fb_data_1_9;
      4'd10: lv_selected_word__h16865 = v_fb_data_1_10;
      4'd11: lv_selected_word__h16865 = v_fb_data_1_11;
      4'd12: lv_selected_word__h16865 = v_fb_data_1_12;
      4'd13: lv_selected_word__h16865 = v_fb_data_1_13;
      4'd14: lv_selected_word__h16865 = v_fb_data_1_14;
      4'd15: lv_selected_word__h16865 = v_fb_data_1_15;
    endcase
  end
  always@(mav_polling_response_address or
	  v_fb_data_0_0 or
	  v_fb_data_0_1 or
	  v_fb_data_0_2 or
	  v_fb_data_0_3 or
	  v_fb_data_0_4 or
	  v_fb_data_0_5 or
	  v_fb_data_0_6 or
	  v_fb_data_0_7 or
	  v_fb_data_0_8 or
	  v_fb_data_0_9 or
	  v_fb_data_0_10 or
	  v_fb_data_0_11 or
	  v_fb_data_0_12 or
	  v_fb_data_0_13 or v_fb_data_0_14 or v_fb_data_0_15)
  begin
    case (mav_polling_response_address[5:2])
      4'd0: lv_selected_word__h16918 = v_fb_data_0_0;
      4'd1: lv_selected_word__h16918 = v_fb_data_0_1;
      4'd2: lv_selected_word__h16918 = v_fb_data_0_2;
      4'd3: lv_selected_word__h16918 = v_fb_data_0_3;
      4'd4: lv_selected_word__h16918 = v_fb_data_0_4;
      4'd5: lv_selected_word__h16918 = v_fb_data_0_5;
      4'd6: lv_selected_word__h16918 = v_fb_data_0_6;
      4'd7: lv_selected_word__h16918 = v_fb_data_0_7;
      4'd8: lv_selected_word__h16918 = v_fb_data_0_8;
      4'd9: lv_selected_word__h16918 = v_fb_data_0_9;
      4'd10: lv_selected_word__h16918 = v_fb_data_0_10;
      4'd11: lv_selected_word__h16918 = v_fb_data_0_11;
      4'd12: lv_selected_word__h16918 = v_fb_data_0_12;
      4'd13: lv_selected_word__h16918 = v_fb_data_0_13;
      4'd14: lv_selected_word__h16918 = v_fb_data_0_14;
      4'd15: lv_selected_word__h16918 = v_fb_data_0_15;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        rg_fb_enables <= `BSV_ASSIGNMENT_DELAY 16'd0;
	rg_fbhead <= `BSV_ASSIGNMENT_DELAY 2'd0;
	rg_fbtail <= `BSV_ASSIGNMENT_DELAY 2'd0;
	rg_next_bank <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_fb_addr_0 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_addr_1 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_addr_2 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_addr_3 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_addr_valid_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	v_fb_addr_valid_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	v_fb_addr_valid_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	v_fb_addr_valid_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	v_fb_data_0_0 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_0_1 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_0_10 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_0_11 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_0_12 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_0_13 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_0_14 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_0_15 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_0_2 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_0_3 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_0_4 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_0_5 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_0_6 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_0_7 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_0_8 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_0_9 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_1_0 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_1_1 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_1_10 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_1_11 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_1_12 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_1_13 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_1_14 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_1_15 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_1_2 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_1_3 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_1_4 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_1_5 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_1_6 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_1_7 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_1_8 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_1_9 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_2_0 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_2_1 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_2_10 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_2_11 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_2_12 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_2_13 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_2_14 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_2_15 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_2_2 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_2_3 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_2_4 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_2_5 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_2_6 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_2_7 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_2_8 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_2_9 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_3_0 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_3_1 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_3_10 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_3_11 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_3_12 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_3_13 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_3_14 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_3_15 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_3_2 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_3_3 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_3_4 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_3_5 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_3_6 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_3_7 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_3_8 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_data_3_9 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	v_fb_err_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	v_fb_err_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	v_fb_err_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	v_fb_err_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	v_fb_line_valid_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	v_fb_line_valid_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	v_fb_line_valid_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	v_fb_line_valid_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (rg_fb_enables_EN)
	  rg_fb_enables <= `BSV_ASSIGNMENT_DELAY rg_fb_enables_D_IN;
	if (rg_fbhead_EN) rg_fbhead <= `BSV_ASSIGNMENT_DELAY rg_fbhead_D_IN;
	if (rg_fbtail_EN) rg_fbtail <= `BSV_ASSIGNMENT_DELAY rg_fbtail_D_IN;
	if (rg_next_bank_EN)
	  rg_next_bank <= `BSV_ASSIGNMENT_DELAY rg_next_bank_D_IN;
	if (v_fb_addr_0_EN)
	  v_fb_addr_0 <= `BSV_ASSIGNMENT_DELAY v_fb_addr_0_D_IN;
	if (v_fb_addr_1_EN)
	  v_fb_addr_1 <= `BSV_ASSIGNMENT_DELAY v_fb_addr_1_D_IN;
	if (v_fb_addr_2_EN)
	  v_fb_addr_2 <= `BSV_ASSIGNMENT_DELAY v_fb_addr_2_D_IN;
	if (v_fb_addr_3_EN)
	  v_fb_addr_3 <= `BSV_ASSIGNMENT_DELAY v_fb_addr_3_D_IN;
	if (v_fb_addr_valid_0_EN)
	  v_fb_addr_valid_0 <= `BSV_ASSIGNMENT_DELAY v_fb_addr_valid_0_D_IN;
	if (v_fb_addr_valid_1_EN)
	  v_fb_addr_valid_1 <= `BSV_ASSIGNMENT_DELAY v_fb_addr_valid_1_D_IN;
	if (v_fb_addr_valid_2_EN)
	  v_fb_addr_valid_2 <= `BSV_ASSIGNMENT_DELAY v_fb_addr_valid_2_D_IN;
	if (v_fb_addr_valid_3_EN)
	  v_fb_addr_valid_3 <= `BSV_ASSIGNMENT_DELAY v_fb_addr_valid_3_D_IN;
	if (v_fb_data_0_0_EN)
	  v_fb_data_0_0 <= `BSV_ASSIGNMENT_DELAY v_fb_data_0_0_D_IN;
	if (v_fb_data_0_1_EN)
	  v_fb_data_0_1 <= `BSV_ASSIGNMENT_DELAY v_fb_data_0_1_D_IN;
	if (v_fb_data_0_10_EN)
	  v_fb_data_0_10 <= `BSV_ASSIGNMENT_DELAY v_fb_data_0_10_D_IN;
	if (v_fb_data_0_11_EN)
	  v_fb_data_0_11 <= `BSV_ASSIGNMENT_DELAY v_fb_data_0_11_D_IN;
	if (v_fb_data_0_12_EN)
	  v_fb_data_0_12 <= `BSV_ASSIGNMENT_DELAY v_fb_data_0_12_D_IN;
	if (v_fb_data_0_13_EN)
	  v_fb_data_0_13 <= `BSV_ASSIGNMENT_DELAY v_fb_data_0_13_D_IN;
	if (v_fb_data_0_14_EN)
	  v_fb_data_0_14 <= `BSV_ASSIGNMENT_DELAY v_fb_data_0_14_D_IN;
	if (v_fb_data_0_15_EN)
	  v_fb_data_0_15 <= `BSV_ASSIGNMENT_DELAY v_fb_data_0_15_D_IN;
	if (v_fb_data_0_2_EN)
	  v_fb_data_0_2 <= `BSV_ASSIGNMENT_DELAY v_fb_data_0_2_D_IN;
	if (v_fb_data_0_3_EN)
	  v_fb_data_0_3 <= `BSV_ASSIGNMENT_DELAY v_fb_data_0_3_D_IN;
	if (v_fb_data_0_4_EN)
	  v_fb_data_0_4 <= `BSV_ASSIGNMENT_DELAY v_fb_data_0_4_D_IN;
	if (v_fb_data_0_5_EN)
	  v_fb_data_0_5 <= `BSV_ASSIGNMENT_DELAY v_fb_data_0_5_D_IN;
	if (v_fb_data_0_6_EN)
	  v_fb_data_0_6 <= `BSV_ASSIGNMENT_DELAY v_fb_data_0_6_D_IN;
	if (v_fb_data_0_7_EN)
	  v_fb_data_0_7 <= `BSV_ASSIGNMENT_DELAY v_fb_data_0_7_D_IN;
	if (v_fb_data_0_8_EN)
	  v_fb_data_0_8 <= `BSV_ASSIGNMENT_DELAY v_fb_data_0_8_D_IN;
	if (v_fb_data_0_9_EN)
	  v_fb_data_0_9 <= `BSV_ASSIGNMENT_DELAY v_fb_data_0_9_D_IN;
	if (v_fb_data_1_0_EN)
	  v_fb_data_1_0 <= `BSV_ASSIGNMENT_DELAY v_fb_data_1_0_D_IN;
	if (v_fb_data_1_1_EN)
	  v_fb_data_1_1 <= `BSV_ASSIGNMENT_DELAY v_fb_data_1_1_D_IN;
	if (v_fb_data_1_10_EN)
	  v_fb_data_1_10 <= `BSV_ASSIGNMENT_DELAY v_fb_data_1_10_D_IN;
	if (v_fb_data_1_11_EN)
	  v_fb_data_1_11 <= `BSV_ASSIGNMENT_DELAY v_fb_data_1_11_D_IN;
	if (v_fb_data_1_12_EN)
	  v_fb_data_1_12 <= `BSV_ASSIGNMENT_DELAY v_fb_data_1_12_D_IN;
	if (v_fb_data_1_13_EN)
	  v_fb_data_1_13 <= `BSV_ASSIGNMENT_DELAY v_fb_data_1_13_D_IN;
	if (v_fb_data_1_14_EN)
	  v_fb_data_1_14 <= `BSV_ASSIGNMENT_DELAY v_fb_data_1_14_D_IN;
	if (v_fb_data_1_15_EN)
	  v_fb_data_1_15 <= `BSV_ASSIGNMENT_DELAY v_fb_data_1_15_D_IN;
	if (v_fb_data_1_2_EN)
	  v_fb_data_1_2 <= `BSV_ASSIGNMENT_DELAY v_fb_data_1_2_D_IN;
	if (v_fb_data_1_3_EN)
	  v_fb_data_1_3 <= `BSV_ASSIGNMENT_DELAY v_fb_data_1_3_D_IN;
	if (v_fb_data_1_4_EN)
	  v_fb_data_1_4 <= `BSV_ASSIGNMENT_DELAY v_fb_data_1_4_D_IN;
	if (v_fb_data_1_5_EN)
	  v_fb_data_1_5 <= `BSV_ASSIGNMENT_DELAY v_fb_data_1_5_D_IN;
	if (v_fb_data_1_6_EN)
	  v_fb_data_1_6 <= `BSV_ASSIGNMENT_DELAY v_fb_data_1_6_D_IN;
	if (v_fb_data_1_7_EN)
	  v_fb_data_1_7 <= `BSV_ASSIGNMENT_DELAY v_fb_data_1_7_D_IN;
	if (v_fb_data_1_8_EN)
	  v_fb_data_1_8 <= `BSV_ASSIGNMENT_DELAY v_fb_data_1_8_D_IN;
	if (v_fb_data_1_9_EN)
	  v_fb_data_1_9 <= `BSV_ASSIGNMENT_DELAY v_fb_data_1_9_D_IN;
	if (v_fb_data_2_0_EN)
	  v_fb_data_2_0 <= `BSV_ASSIGNMENT_DELAY v_fb_data_2_0_D_IN;
	if (v_fb_data_2_1_EN)
	  v_fb_data_2_1 <= `BSV_ASSIGNMENT_DELAY v_fb_data_2_1_D_IN;
	if (v_fb_data_2_10_EN)
	  v_fb_data_2_10 <= `BSV_ASSIGNMENT_DELAY v_fb_data_2_10_D_IN;
	if (v_fb_data_2_11_EN)
	  v_fb_data_2_11 <= `BSV_ASSIGNMENT_DELAY v_fb_data_2_11_D_IN;
	if (v_fb_data_2_12_EN)
	  v_fb_data_2_12 <= `BSV_ASSIGNMENT_DELAY v_fb_data_2_12_D_IN;
	if (v_fb_data_2_13_EN)
	  v_fb_data_2_13 <= `BSV_ASSIGNMENT_DELAY v_fb_data_2_13_D_IN;
	if (v_fb_data_2_14_EN)
	  v_fb_data_2_14 <= `BSV_ASSIGNMENT_DELAY v_fb_data_2_14_D_IN;
	if (v_fb_data_2_15_EN)
	  v_fb_data_2_15 <= `BSV_ASSIGNMENT_DELAY v_fb_data_2_15_D_IN;
	if (v_fb_data_2_2_EN)
	  v_fb_data_2_2 <= `BSV_ASSIGNMENT_DELAY v_fb_data_2_2_D_IN;
	if (v_fb_data_2_3_EN)
	  v_fb_data_2_3 <= `BSV_ASSIGNMENT_DELAY v_fb_data_2_3_D_IN;
	if (v_fb_data_2_4_EN)
	  v_fb_data_2_4 <= `BSV_ASSIGNMENT_DELAY v_fb_data_2_4_D_IN;
	if (v_fb_data_2_5_EN)
	  v_fb_data_2_5 <= `BSV_ASSIGNMENT_DELAY v_fb_data_2_5_D_IN;
	if (v_fb_data_2_6_EN)
	  v_fb_data_2_6 <= `BSV_ASSIGNMENT_DELAY v_fb_data_2_6_D_IN;
	if (v_fb_data_2_7_EN)
	  v_fb_data_2_7 <= `BSV_ASSIGNMENT_DELAY v_fb_data_2_7_D_IN;
	if (v_fb_data_2_8_EN)
	  v_fb_data_2_8 <= `BSV_ASSIGNMENT_DELAY v_fb_data_2_8_D_IN;
	if (v_fb_data_2_9_EN)
	  v_fb_data_2_9 <= `BSV_ASSIGNMENT_DELAY v_fb_data_2_9_D_IN;
	if (v_fb_data_3_0_EN)
	  v_fb_data_3_0 <= `BSV_ASSIGNMENT_DELAY v_fb_data_3_0_D_IN;
	if (v_fb_data_3_1_EN)
	  v_fb_data_3_1 <= `BSV_ASSIGNMENT_DELAY v_fb_data_3_1_D_IN;
	if (v_fb_data_3_10_EN)
	  v_fb_data_3_10 <= `BSV_ASSIGNMENT_DELAY v_fb_data_3_10_D_IN;
	if (v_fb_data_3_11_EN)
	  v_fb_data_3_11 <= `BSV_ASSIGNMENT_DELAY v_fb_data_3_11_D_IN;
	if (v_fb_data_3_12_EN)
	  v_fb_data_3_12 <= `BSV_ASSIGNMENT_DELAY v_fb_data_3_12_D_IN;
	if (v_fb_data_3_13_EN)
	  v_fb_data_3_13 <= `BSV_ASSIGNMENT_DELAY v_fb_data_3_13_D_IN;
	if (v_fb_data_3_14_EN)
	  v_fb_data_3_14 <= `BSV_ASSIGNMENT_DELAY v_fb_data_3_14_D_IN;
	if (v_fb_data_3_15_EN)
	  v_fb_data_3_15 <= `BSV_ASSIGNMENT_DELAY v_fb_data_3_15_D_IN;
	if (v_fb_data_3_2_EN)
	  v_fb_data_3_2 <= `BSV_ASSIGNMENT_DELAY v_fb_data_3_2_D_IN;
	if (v_fb_data_3_3_EN)
	  v_fb_data_3_3 <= `BSV_ASSIGNMENT_DELAY v_fb_data_3_3_D_IN;
	if (v_fb_data_3_4_EN)
	  v_fb_data_3_4 <= `BSV_ASSIGNMENT_DELAY v_fb_data_3_4_D_IN;
	if (v_fb_data_3_5_EN)
	  v_fb_data_3_5 <= `BSV_ASSIGNMENT_DELAY v_fb_data_3_5_D_IN;
	if (v_fb_data_3_6_EN)
	  v_fb_data_3_6 <= `BSV_ASSIGNMENT_DELAY v_fb_data_3_6_D_IN;
	if (v_fb_data_3_7_EN)
	  v_fb_data_3_7 <= `BSV_ASSIGNMENT_DELAY v_fb_data_3_7_D_IN;
	if (v_fb_data_3_8_EN)
	  v_fb_data_3_8 <= `BSV_ASSIGNMENT_DELAY v_fb_data_3_8_D_IN;
	if (v_fb_data_3_9_EN)
	  v_fb_data_3_9 <= `BSV_ASSIGNMENT_DELAY v_fb_data_3_9_D_IN;
	if (v_fb_err_0_EN)
	  v_fb_err_0 <= `BSV_ASSIGNMENT_DELAY v_fb_err_0_D_IN;
	if (v_fb_err_1_EN)
	  v_fb_err_1 <= `BSV_ASSIGNMENT_DELAY v_fb_err_1_D_IN;
	if (v_fb_err_2_EN)
	  v_fb_err_2 <= `BSV_ASSIGNMENT_DELAY v_fb_err_2_D_IN;
	if (v_fb_err_3_EN)
	  v_fb_err_3 <= `BSV_ASSIGNMENT_DELAY v_fb_err_3_D_IN;
	if (v_fb_line_valid_0_EN)
	  v_fb_line_valid_0 <= `BSV_ASSIGNMENT_DELAY v_fb_line_valid_0_D_IN;
	if (v_fb_line_valid_1_EN)
	  v_fb_line_valid_1 <= `BSV_ASSIGNMENT_DELAY v_fb_line_valid_1_D_IN;
	if (v_fb_line_valid_2_EN)
	  v_fb_line_valid_2 <= `BSV_ASSIGNMENT_DELAY v_fb_line_valid_2_D_IN;
	if (v_fb_line_valid_3_EN)
	  v_fb_line_valid_3 <= `BSV_ASSIGNMENT_DELAY v_fb_line_valid_3_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    rg_fb_enables = 16'hAAAA;
    rg_fbhead = 2'h2;
    rg_fbtail = 2'h2;
    rg_next_bank = 4'hA;
    v_fb_addr_0 = 32'hAAAAAAAA;
    v_fb_addr_1 = 32'hAAAAAAAA;
    v_fb_addr_2 = 32'hAAAAAAAA;
    v_fb_addr_3 = 32'hAAAAAAAA;
    v_fb_addr_valid_0 = 1'h0;
    v_fb_addr_valid_1 = 1'h0;
    v_fb_addr_valid_2 = 1'h0;
    v_fb_addr_valid_3 = 1'h0;
    v_fb_data_0_0 = 32'hAAAAAAAA;
    v_fb_data_0_1 = 32'hAAAAAAAA;
    v_fb_data_0_10 = 32'hAAAAAAAA;
    v_fb_data_0_11 = 32'hAAAAAAAA;
    v_fb_data_0_12 = 32'hAAAAAAAA;
    v_fb_data_0_13 = 32'hAAAAAAAA;
    v_fb_data_0_14 = 32'hAAAAAAAA;
    v_fb_data_0_15 = 32'hAAAAAAAA;
    v_fb_data_0_2 = 32'hAAAAAAAA;
    v_fb_data_0_3 = 32'hAAAAAAAA;
    v_fb_data_0_4 = 32'hAAAAAAAA;
    v_fb_data_0_5 = 32'hAAAAAAAA;
    v_fb_data_0_6 = 32'hAAAAAAAA;
    v_fb_data_0_7 = 32'hAAAAAAAA;
    v_fb_data_0_8 = 32'hAAAAAAAA;
    v_fb_data_0_9 = 32'hAAAAAAAA;
    v_fb_data_1_0 = 32'hAAAAAAAA;
    v_fb_data_1_1 = 32'hAAAAAAAA;
    v_fb_data_1_10 = 32'hAAAAAAAA;
    v_fb_data_1_11 = 32'hAAAAAAAA;
    v_fb_data_1_12 = 32'hAAAAAAAA;
    v_fb_data_1_13 = 32'hAAAAAAAA;
    v_fb_data_1_14 = 32'hAAAAAAAA;
    v_fb_data_1_15 = 32'hAAAAAAAA;
    v_fb_data_1_2 = 32'hAAAAAAAA;
    v_fb_data_1_3 = 32'hAAAAAAAA;
    v_fb_data_1_4 = 32'hAAAAAAAA;
    v_fb_data_1_5 = 32'hAAAAAAAA;
    v_fb_data_1_6 = 32'hAAAAAAAA;
    v_fb_data_1_7 = 32'hAAAAAAAA;
    v_fb_data_1_8 = 32'hAAAAAAAA;
    v_fb_data_1_9 = 32'hAAAAAAAA;
    v_fb_data_2_0 = 32'hAAAAAAAA;
    v_fb_data_2_1 = 32'hAAAAAAAA;
    v_fb_data_2_10 = 32'hAAAAAAAA;
    v_fb_data_2_11 = 32'hAAAAAAAA;
    v_fb_data_2_12 = 32'hAAAAAAAA;
    v_fb_data_2_13 = 32'hAAAAAAAA;
    v_fb_data_2_14 = 32'hAAAAAAAA;
    v_fb_data_2_15 = 32'hAAAAAAAA;
    v_fb_data_2_2 = 32'hAAAAAAAA;
    v_fb_data_2_3 = 32'hAAAAAAAA;
    v_fb_data_2_4 = 32'hAAAAAAAA;
    v_fb_data_2_5 = 32'hAAAAAAAA;
    v_fb_data_2_6 = 32'hAAAAAAAA;
    v_fb_data_2_7 = 32'hAAAAAAAA;
    v_fb_data_2_8 = 32'hAAAAAAAA;
    v_fb_data_2_9 = 32'hAAAAAAAA;
    v_fb_data_3_0 = 32'hAAAAAAAA;
    v_fb_data_3_1 = 32'hAAAAAAAA;
    v_fb_data_3_10 = 32'hAAAAAAAA;
    v_fb_data_3_11 = 32'hAAAAAAAA;
    v_fb_data_3_12 = 32'hAAAAAAAA;
    v_fb_data_3_13 = 32'hAAAAAAAA;
    v_fb_data_3_14 = 32'hAAAAAAAA;
    v_fb_data_3_15 = 32'hAAAAAAAA;
    v_fb_data_3_2 = 32'hAAAAAAAA;
    v_fb_data_3_3 = 32'hAAAAAAAA;
    v_fb_data_3_4 = 32'hAAAAAAAA;
    v_fb_data_3_5 = 32'hAAAAAAAA;
    v_fb_data_3_6 = 32'hAAAAAAAA;
    v_fb_data_3_7 = 32'hAAAAAAAA;
    v_fb_data_3_8 = 32'hAAAAAAAA;
    v_fb_data_3_9 = 32'hAAAAAAAA;
    v_fb_err_0 = 1'h0;
    v_fb_err_1 = 1'h0;
    v_fb_err_2 = 1'h0;
    v_fb_err_3 = 1'h0;
    v_fb_line_valid_0 = 1'h0;
    v_fb_line_valid_1 = 1'h0;
    v_fb_line_valid_2 = 1'h0;
    v_fb_line_valid_3 = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkicache_fb_v2

