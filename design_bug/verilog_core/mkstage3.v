//
// Generated by Bluespec Compiler, version 2023.07 (build 0eb551dc)
//
// On Tue Jul 29 14:28:14 +04 2025
//
//
// Ports:
// Name                         I/O  size props
// common_mv_flush_fst            O     1
// common_mv_flush_snd            O    64
// RDY_common_ma_sb_release       O     1 const
// rx_rx_meta_from_stage2_deq_ena  O     1
// rx_rx_mtval_from_stage2_deq_ena  O     1
// rx_rx_instrtype_from_stage2_deq_ena  O     1
// rx_rx_opmeta_from_stage2_deq_ena  O     1
// rx_rx_commitlog_deq_ena        O     1
// tx_tx_baseout_to_stage4_enq_ena  O     1
// tx_tx_baseout_to_stage4_enq_data  O    80
// tx_tx_trapout_to_stage4_enq_ena  O     1
// tx_tx_trapout_to_stage4_enq_data  O    72
// tx_tx_systemout_to_stage4_enq_ena  O     1
// tx_tx_systemout_to_stage4_enq_data  O    81
// tx_tx_memoryout_to_stage4_enq_ena  O     1
// tx_tx_memoryout_to_stage4_enq_data  O     9
// tx_tx_fuid_to_stage4_enq_ena   O     1
// tx_tx_fuid_to_stage4_enq_data  O    78
// tx_tx_commitlog_enq_ena        O     1
// tx_tx_commitlog_enq_data       O   309
// cache_mv_memory_request_get    O   145
// RDY_cache_mv_memory_request_get  O     1
// RDY_bpu_ma_next_pc             O     1 const
// bpu_mv_train_bpu               O   142 reg
// RDY_bpu_mv_train_bpu           O     1 reg
// bpu_mv_mispredict_fst          O     1 reg
// RDY_bpu_mv_mispredict_fst      O     1 reg
// bpu_mv_mispredict_snd          O     8 reg
// RDY_bpu_mv_mispredict_snd      O     1 reg
// muldiv_mv_mbox_inputs          O   132
// RDY_muldiv_mv_mbox_inputs      O     1
// float_mv_fbox_inputs           O   212
// RDY_float_mv_fbox_inputs       O     1
// perfmonitors_mv_count_floats   O     1
// perfmonitors_mv_count_muldiv   O     1
// perfmonitors_mv_count_jumps    O     1
// perfmonitors_mv_count_branches  O     1
// perfmonitors_mv_count_rawstalls  O     1
// perfmonitors_mv_count_exestalls  O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// common_ma_csr_misa_c_m         I     1
// common_ma_sb_release_commit    I    75
// common_ma_priv_priv            I     2
// common_ma_mstatus_mstatus      I    64
// rx_rx_meta_from_stage2_notEmpty_b  I     1
// rx_rx_meta_from_stage2_first_deq_rdy_b  I     1
// rx_rx_meta_from_stage2_first_x  I    97
// rx_rx_mtval_from_stage2_notEmpty_b  I     1 unused
// rx_rx_mtval_from_stage2_first_deq_rdy_b  I     1
// rx_rx_mtval_from_stage2_first_x  I    64
// rx_rx_instrtype_from_stage2_notEmpty_b  I     1 unused
// rx_rx_instrtype_from_stage2_first_deq_rdy_b  I     1
// rx_rx_instrtype_from_stage2_first_x  I     4
// rx_rx_opmeta_from_stage2_notEmpty_b  I     1 unused
// rx_rx_opmeta_from_stage2_first_deq_rdy_b  I     1
// rx_rx_opmeta_from_stage2_first_x  I    21
// rx_rx_commitlog_notEmpty_b     I     1 unused
// rx_rx_commitlog_first_deq_rdy_b  I     1
// rx_rx_commitlog_first_x        I   309
// tx_tx_baseout_to_stage4_notFull_b  I     1 unused
// tx_tx_baseout_to_stage4_enq_rdy_b  I     1
// tx_tx_trapout_to_stage4_notFull_b  I     1 unused
// tx_tx_trapout_to_stage4_enq_rdy_b  I     1
// tx_tx_systemout_to_stage4_notFull_b  I     1 unused
// tx_tx_systemout_to_stage4_enq_rdy_b  I     1
// tx_tx_memoryout_to_stage4_notFull_b  I     1 unused
// tx_tx_memoryout_to_stage4_enq_rdy_b  I     1
// tx_tx_fuid_to_stage4_notFull_b  I     1 unused
// tx_tx_fuid_to_stage4_enq_rdy_b  I     1
// tx_tx_commitlog_notFull_b      I     1 unused
// tx_tx_commitlog_enq_rdy_b      I     1
// rf_ma_op1_i                    I    76
// rf_ma_op2_i                    I    76
// rf_ma_op3_i                    I    76
// cache_ma_cache_is_available_avail  I     1
// bypass_ma_bypass_fwd           I   152
// bpu_ma_next_pc_npc             I    64
// muldiv_ma_mbox_ready_rdy       I     2
// float_ma_fbox_ready_rdy        I     1
// EN_common_ma_update_wEpoch     I     1
// EN_common_ma_sb_release        I     1
// EN_bpu_ma_next_pc              I     1
// EN_cache_mv_memory_request_get  I     1 unused
//
// Combinational paths from inputs to outputs:
//   (common_ma_csr_misa_c_m,
//    rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    bypass_ma_bypass_fwd,
//    bpu_ma_next_pc_npc,
//    EN_bpu_ma_next_pc) -> common_mv_flush_fst
//   (common_ma_csr_misa_c_m,
//    rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_memoryout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    cache_ma_cache_is_available_avail,
//    bypass_ma_bypass_fwd,
//    bpu_ma_next_pc_npc,
//    EN_bpu_ma_next_pc) -> tx_tx_baseout_to_stage4_enq_ena
//   (common_ma_csr_misa_c_m,
//    rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_memoryout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    cache_ma_cache_is_available_avail,
//    bypass_ma_bypass_fwd,
//    bpu_ma_next_pc_npc,
//    EN_bpu_ma_next_pc) -> tx_tx_baseout_to_stage4_enq_data
//   (common_ma_csr_misa_c_m,
//    rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_memoryout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    cache_ma_cache_is_available_avail,
//    bypass_ma_bypass_fwd,
//    bpu_ma_next_pc_npc,
//    EN_bpu_ma_next_pc) -> tx_tx_trapout_to_stage4_enq_ena
//   (common_ma_csr_misa_c_m,
//    rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_mtval_from_stage2_first_x,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_memoryout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    cache_ma_cache_is_available_avail,
//    bypass_ma_bypass_fwd,
//    bpu_ma_next_pc_npc,
//    EN_bpu_ma_next_pc) -> tx_tx_trapout_to_stage4_enq_data
//   (common_ma_csr_misa_c_m,
//    rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_systemout_to_stage4_enq_rdy_b,
//    tx_tx_memoryout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    cache_ma_cache_is_available_avail,
//    bypass_ma_bypass_fwd,
//    bpu_ma_next_pc_npc,
//    muldiv_ma_mbox_ready_rdy,
//    float_ma_fbox_ready_rdy,
//    EN_bpu_ma_next_pc) -> tx_tx_fuid_to_stage4_enq_data
//   (common_ma_priv_priv,
//    common_ma_mstatus_mstatus,
//    rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_memoryout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    cache_ma_cache_is_available_avail,
//    bypass_ma_bypass_fwd) -> cache_mv_memory_request_get
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    bypass_ma_bypass_fwd,
//    bpu_ma_next_pc_npc,
//    EN_bpu_ma_next_pc) -> common_mv_flush_snd
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_systemout_to_stage4_enq_rdy_b,
//    tx_tx_memoryout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    cache_ma_cache_is_available_avail,
//    bypass_ma_bypass_fwd,
//    bpu_ma_next_pc_npc,
//    muldiv_ma_mbox_ready_rdy,
//    float_ma_fbox_ready_rdy,
//    EN_bpu_ma_next_pc) -> rx_rx_meta_from_stage2_deq_ena
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_systemout_to_stage4_enq_rdy_b,
//    tx_tx_memoryout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    cache_ma_cache_is_available_avail,
//    bypass_ma_bypass_fwd,
//    bpu_ma_next_pc_npc,
//    muldiv_ma_mbox_ready_rdy,
//    float_ma_fbox_ready_rdy,
//    EN_bpu_ma_next_pc) -> rx_rx_mtval_from_stage2_deq_ena
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_systemout_to_stage4_enq_rdy_b,
//    tx_tx_memoryout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    cache_ma_cache_is_available_avail,
//    bypass_ma_bypass_fwd,
//    bpu_ma_next_pc_npc,
//    muldiv_ma_mbox_ready_rdy,
//    float_ma_fbox_ready_rdy,
//    EN_bpu_ma_next_pc) -> rx_rx_instrtype_from_stage2_deq_ena
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_systemout_to_stage4_enq_rdy_b,
//    tx_tx_memoryout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    cache_ma_cache_is_available_avail,
//    bypass_ma_bypass_fwd,
//    bpu_ma_next_pc_npc,
//    muldiv_ma_mbox_ready_rdy,
//    float_ma_fbox_ready_rdy,
//    EN_bpu_ma_next_pc) -> rx_rx_opmeta_from_stage2_deq_ena
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_systemout_to_stage4_enq_rdy_b,
//    tx_tx_memoryout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    cache_ma_cache_is_available_avail,
//    bypass_ma_bypass_fwd,
//    bpu_ma_next_pc_npc,
//    muldiv_ma_mbox_ready_rdy,
//    float_ma_fbox_ready_rdy,
//    EN_bpu_ma_next_pc) -> rx_rx_commitlog_deq_ena
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_systemout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    bypass_ma_bypass_fwd) -> tx_tx_systemout_to_stage4_enq_ena
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_systemout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op3_i,
//    bypass_ma_bypass_fwd) -> tx_tx_systemout_to_stage4_enq_data
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_memoryout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    cache_ma_cache_is_available_avail,
//    bypass_ma_bypass_fwd) -> tx_tx_memoryout_to_stage4_enq_ena
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_memoryout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    cache_ma_cache_is_available_avail,
//    bypass_ma_bypass_fwd) -> tx_tx_memoryout_to_stage4_enq_data
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_systemout_to_stage4_enq_rdy_b,
//    tx_tx_memoryout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    cache_ma_cache_is_available_avail,
//    bypass_ma_bypass_fwd,
//    bpu_ma_next_pc_npc,
//    muldiv_ma_mbox_ready_rdy,
//    float_ma_fbox_ready_rdy,
//    EN_bpu_ma_next_pc) -> tx_tx_fuid_to_stage4_enq_ena
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_systemout_to_stage4_enq_rdy_b,
//    tx_tx_memoryout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    cache_ma_cache_is_available_avail,
//    bypass_ma_bypass_fwd,
//    bpu_ma_next_pc_npc,
//    muldiv_ma_mbox_ready_rdy,
//    float_ma_fbox_ready_rdy,
//    EN_bpu_ma_next_pc) -> tx_tx_commitlog_enq_ena
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    rx_rx_commitlog_first_x,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_systemout_to_stage4_enq_rdy_b,
//    tx_tx_memoryout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    cache_ma_cache_is_available_avail,
//    bypass_ma_bypass_fwd,
//    bpu_ma_next_pc_npc,
//    muldiv_ma_mbox_ready_rdy,
//    float_ma_fbox_ready_rdy,
//    EN_bpu_ma_next_pc) -> tx_tx_commitlog_enq_data
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_memoryout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    cache_ma_cache_is_available_avail,
//    bypass_ma_bypass_fwd) -> RDY_cache_mv_memory_request_get
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    bypass_ma_bypass_fwd,
//    muldiv_ma_mbox_ready_rdy) -> muldiv_mv_mbox_inputs
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    bypass_ma_bypass_fwd,
//    muldiv_ma_mbox_ready_rdy) -> RDY_muldiv_mv_mbox_inputs
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    bypass_ma_bypass_fwd,
//    float_ma_fbox_ready_rdy) -> float_mv_fbox_inputs
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    bypass_ma_bypass_fwd,
//    float_ma_fbox_ready_rdy) -> RDY_float_mv_fbox_inputs
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    bypass_ma_bypass_fwd,
//    float_ma_fbox_ready_rdy) -> perfmonitors_mv_count_floats
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    bypass_ma_bypass_fwd,
//    muldiv_ma_mbox_ready_rdy) -> perfmonitors_mv_count_muldiv
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    bypass_ma_bypass_fwd,
//    bpu_ma_next_pc_npc,
//    EN_bpu_ma_next_pc) -> perfmonitors_mv_count_jumps
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    bypass_ma_bypass_fwd,
//    bpu_ma_next_pc_npc,
//    EN_bpu_ma_next_pc) -> perfmonitors_mv_count_branches
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_opmeta_from_stage2_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_systemout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    rf_ma_op1_i,
//    rf_ma_op2_i,
//    rf_ma_op3_i,
//    bypass_ma_bypass_fwd,
//    bpu_ma_next_pc_npc,
//    muldiv_ma_mbox_ready_rdy,
//    float_ma_fbox_ready_rdy,
//    EN_bpu_ma_next_pc) -> perfmonitors_mv_count_rawstalls
//   (rx_rx_meta_from_stage2_notEmpty_b,
//    rx_rx_meta_from_stage2_first_deq_rdy_b,
//    rx_rx_meta_from_stage2_first_x,
//    rx_rx_mtval_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_deq_rdy_b,
//    rx_rx_instrtype_from_stage2_first_x,
//    rx_rx_opmeta_from_stage2_first_deq_rdy_b,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage4_enq_rdy_b,
//    tx_tx_trapout_to_stage4_enq_rdy_b,
//    tx_tx_systemout_to_stage4_enq_rdy_b,
//    tx_tx_memoryout_to_stage4_enq_rdy_b,
//    tx_tx_fuid_to_stage4_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    cache_ma_cache_is_available_avail,
//    bpu_ma_next_pc_npc,
//    muldiv_ma_mbox_ready_rdy,
//    float_ma_fbox_ready_rdy,
//    EN_bpu_ma_next_pc) -> perfmonitors_mv_count_exestalls
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkstage3(CLK,
		RST_N,

		EN_common_ma_update_wEpoch,

		common_mv_flush_fst,

		common_mv_flush_snd,

		common_ma_csr_misa_c_m,

		common_ma_sb_release_commit,
		EN_common_ma_sb_release,
		RDY_common_ma_sb_release,

		common_ma_priv_priv,

		common_ma_mstatus_mstatus,

		rx_rx_meta_from_stage2_notEmpty_b,

		rx_rx_meta_from_stage2_first_deq_rdy_b,

		rx_rx_meta_from_stage2_first_x,

		rx_rx_meta_from_stage2_deq_ena,

		rx_rx_mtval_from_stage2_notEmpty_b,

		rx_rx_mtval_from_stage2_first_deq_rdy_b,

		rx_rx_mtval_from_stage2_first_x,

		rx_rx_mtval_from_stage2_deq_ena,

		rx_rx_instrtype_from_stage2_notEmpty_b,

		rx_rx_instrtype_from_stage2_first_deq_rdy_b,

		rx_rx_instrtype_from_stage2_first_x,

		rx_rx_instrtype_from_stage2_deq_ena,

		rx_rx_opmeta_from_stage2_notEmpty_b,

		rx_rx_opmeta_from_stage2_first_deq_rdy_b,

		rx_rx_opmeta_from_stage2_first_x,

		rx_rx_opmeta_from_stage2_deq_ena,

		rx_rx_commitlog_notEmpty_b,

		rx_rx_commitlog_first_deq_rdy_b,

		rx_rx_commitlog_first_x,

		rx_rx_commitlog_deq_ena,

		tx_tx_baseout_to_stage4_notFull_b,

		tx_tx_baseout_to_stage4_enq_rdy_b,

		tx_tx_baseout_to_stage4_enq_ena,

		tx_tx_baseout_to_stage4_enq_data,

		tx_tx_trapout_to_stage4_notFull_b,

		tx_tx_trapout_to_stage4_enq_rdy_b,

		tx_tx_trapout_to_stage4_enq_ena,

		tx_tx_trapout_to_stage4_enq_data,

		tx_tx_systemout_to_stage4_notFull_b,

		tx_tx_systemout_to_stage4_enq_rdy_b,

		tx_tx_systemout_to_stage4_enq_ena,

		tx_tx_systemout_to_stage4_enq_data,

		tx_tx_memoryout_to_stage4_notFull_b,

		tx_tx_memoryout_to_stage4_enq_rdy_b,

		tx_tx_memoryout_to_stage4_enq_ena,

		tx_tx_memoryout_to_stage4_enq_data,

		tx_tx_fuid_to_stage4_notFull_b,

		tx_tx_fuid_to_stage4_enq_rdy_b,

		tx_tx_fuid_to_stage4_enq_ena,

		tx_tx_fuid_to_stage4_enq_data,

		tx_tx_commitlog_notFull_b,

		tx_tx_commitlog_enq_rdy_b,

		tx_tx_commitlog_enq_ena,

		tx_tx_commitlog_enq_data,

		rf_ma_op1_i,

		rf_ma_op2_i,

		rf_ma_op3_i,

		EN_cache_mv_memory_request_get,
		cache_mv_memory_request_get,
		RDY_cache_mv_memory_request_get,

		cache_ma_cache_is_available_avail,

		bypass_ma_bypass_fwd,

		bpu_ma_next_pc_npc,
		EN_bpu_ma_next_pc,
		RDY_bpu_ma_next_pc,

		bpu_mv_train_bpu,
		RDY_bpu_mv_train_bpu,

		bpu_mv_mispredict_fst,
		RDY_bpu_mv_mispredict_fst,

		bpu_mv_mispredict_snd,
		RDY_bpu_mv_mispredict_snd,

		muldiv_mv_mbox_inputs,
		RDY_muldiv_mv_mbox_inputs,

		muldiv_ma_mbox_ready_rdy,

		float_mv_fbox_inputs,
		RDY_float_mv_fbox_inputs,

		float_ma_fbox_ready_rdy,

		perfmonitors_mv_count_floats,

		perfmonitors_mv_count_muldiv,

		perfmonitors_mv_count_jumps,

		perfmonitors_mv_count_branches,

		perfmonitors_mv_count_rawstalls,

		perfmonitors_mv_count_exestalls);
  parameter [63 : 0] hartid = 64'b0;
  input  CLK;
  input  RST_N;

  // action method common_ma_update_wEpoch
  input  EN_common_ma_update_wEpoch;

  // value method common_mv_flush_fst
  output common_mv_flush_fst;

  // value method common_mv_flush_snd
  output [63 : 0] common_mv_flush_snd;

  // action method common_ma_csr_misa_c
  input  common_ma_csr_misa_c_m;

  // action method common_ma_sb_release
  input  [74 : 0] common_ma_sb_release_commit;
  input  EN_common_ma_sb_release;
  output RDY_common_ma_sb_release;

  // action method common_ma_priv
  input  [1 : 0] common_ma_priv_priv;

  // action method common_ma_mstatus
  input  [63 : 0] common_ma_mstatus_mstatus;

  // action method rx_rx_meta_from_stage2_notEmpty
  input  rx_rx_meta_from_stage2_notEmpty_b;

  // action method rx_rx_meta_from_stage2_first_deq_rdy
  input  rx_rx_meta_from_stage2_first_deq_rdy_b;

  // action method rx_rx_meta_from_stage2_first
  input  [96 : 0] rx_rx_meta_from_stage2_first_x;

  // value method rx_rx_meta_from_stage2_deq_ena
  output rx_rx_meta_from_stage2_deq_ena;

  // action method rx_rx_mtval_from_stage2_notEmpty
  input  rx_rx_mtval_from_stage2_notEmpty_b;

  // action method rx_rx_mtval_from_stage2_first_deq_rdy
  input  rx_rx_mtval_from_stage2_first_deq_rdy_b;

  // action method rx_rx_mtval_from_stage2_first
  input  [63 : 0] rx_rx_mtval_from_stage2_first_x;

  // value method rx_rx_mtval_from_stage2_deq_ena
  output rx_rx_mtval_from_stage2_deq_ena;

  // action method rx_rx_instrtype_from_stage2_notEmpty
  input  rx_rx_instrtype_from_stage2_notEmpty_b;

  // action method rx_rx_instrtype_from_stage2_first_deq_rdy
  input  rx_rx_instrtype_from_stage2_first_deq_rdy_b;

  // action method rx_rx_instrtype_from_stage2_first
  input  [3 : 0] rx_rx_instrtype_from_stage2_first_x;

  // value method rx_rx_instrtype_from_stage2_deq_ena
  output rx_rx_instrtype_from_stage2_deq_ena;

  // action method rx_rx_opmeta_from_stage2_notEmpty
  input  rx_rx_opmeta_from_stage2_notEmpty_b;

  // action method rx_rx_opmeta_from_stage2_first_deq_rdy
  input  rx_rx_opmeta_from_stage2_first_deq_rdy_b;

  // action method rx_rx_opmeta_from_stage2_first
  input  [20 : 0] rx_rx_opmeta_from_stage2_first_x;

  // value method rx_rx_opmeta_from_stage2_deq_ena
  output rx_rx_opmeta_from_stage2_deq_ena;

  // action method rx_rx_commitlog_notEmpty
  input  rx_rx_commitlog_notEmpty_b;

  // action method rx_rx_commitlog_first_deq_rdy
  input  rx_rx_commitlog_first_deq_rdy_b;

  // action method rx_rx_commitlog_first
  input  [308 : 0] rx_rx_commitlog_first_x;

  // value method rx_rx_commitlog_deq_ena
  output rx_rx_commitlog_deq_ena;

  // action method tx_tx_baseout_to_stage4_notFull
  input  tx_tx_baseout_to_stage4_notFull_b;

  // action method tx_tx_baseout_to_stage4_enq_rdy
  input  tx_tx_baseout_to_stage4_enq_rdy_b;

  // value method tx_tx_baseout_to_stage4_enq_ena
  output tx_tx_baseout_to_stage4_enq_ena;

  // value method tx_tx_baseout_to_stage4_enq_data
  output [79 : 0] tx_tx_baseout_to_stage4_enq_data;

  // action method tx_tx_trapout_to_stage4_notFull
  input  tx_tx_trapout_to_stage4_notFull_b;

  // action method tx_tx_trapout_to_stage4_enq_rdy
  input  tx_tx_trapout_to_stage4_enq_rdy_b;

  // value method tx_tx_trapout_to_stage4_enq_ena
  output tx_tx_trapout_to_stage4_enq_ena;

  // value method tx_tx_trapout_to_stage4_enq_data
  output [71 : 0] tx_tx_trapout_to_stage4_enq_data;

  // action method tx_tx_systemout_to_stage4_notFull
  input  tx_tx_systemout_to_stage4_notFull_b;

  // action method tx_tx_systemout_to_stage4_enq_rdy
  input  tx_tx_systemout_to_stage4_enq_rdy_b;

  // value method tx_tx_systemout_to_stage4_enq_ena
  output tx_tx_systemout_to_stage4_enq_ena;

  // value method tx_tx_systemout_to_stage4_enq_data
  output [80 : 0] tx_tx_systemout_to_stage4_enq_data;

  // action method tx_tx_memoryout_to_stage4_notFull
  input  tx_tx_memoryout_to_stage4_notFull_b;

  // action method tx_tx_memoryout_to_stage4_enq_rdy
  input  tx_tx_memoryout_to_stage4_enq_rdy_b;

  // value method tx_tx_memoryout_to_stage4_enq_ena
  output tx_tx_memoryout_to_stage4_enq_ena;

  // value method tx_tx_memoryout_to_stage4_enq_data
  output [8 : 0] tx_tx_memoryout_to_stage4_enq_data;

  // action method tx_tx_fuid_to_stage4_notFull
  input  tx_tx_fuid_to_stage4_notFull_b;

  // action method tx_tx_fuid_to_stage4_enq_rdy
  input  tx_tx_fuid_to_stage4_enq_rdy_b;

  // value method tx_tx_fuid_to_stage4_enq_ena
  output tx_tx_fuid_to_stage4_enq_ena;

  // value method tx_tx_fuid_to_stage4_enq_data
  output [77 : 0] tx_tx_fuid_to_stage4_enq_data;

  // action method tx_tx_commitlog_notFull
  input  tx_tx_commitlog_notFull_b;

  // action method tx_tx_commitlog_enq_rdy
  input  tx_tx_commitlog_enq_rdy_b;

  // value method tx_tx_commitlog_enq_ena
  output tx_tx_commitlog_enq_ena;

  // value method tx_tx_commitlog_enq_data
  output [308 : 0] tx_tx_commitlog_enq_data;

  // action method rf_ma_op1
  input  [75 : 0] rf_ma_op1_i;

  // action method rf_ma_op2
  input  [75 : 0] rf_ma_op2_i;

  // action method rf_ma_op3
  input  [75 : 0] rf_ma_op3_i;

  // actionvalue method cache_mv_memory_request_get
  input  EN_cache_mv_memory_request_get;
  output [144 : 0] cache_mv_memory_request_get;
  output RDY_cache_mv_memory_request_get;

  // action method cache_ma_cache_is_available
  input  cache_ma_cache_is_available_avail;

  // action method bypass_ma_bypass
  input  [151 : 0] bypass_ma_bypass_fwd;

  // action method bpu_ma_next_pc
  input  [63 : 0] bpu_ma_next_pc_npc;
  input  EN_bpu_ma_next_pc;
  output RDY_bpu_ma_next_pc;

  // value method bpu_mv_train_bpu
  output [141 : 0] bpu_mv_train_bpu;
  output RDY_bpu_mv_train_bpu;

  // value method bpu_mv_mispredict_fst
  output bpu_mv_mispredict_fst;
  output RDY_bpu_mv_mispredict_fst;

  // value method bpu_mv_mispredict_snd
  output [7 : 0] bpu_mv_mispredict_snd;
  output RDY_bpu_mv_mispredict_snd;

  // value method muldiv_mv_mbox_inputs
  output [131 : 0] muldiv_mv_mbox_inputs;
  output RDY_muldiv_mv_mbox_inputs;

  // action method muldiv_ma_mbox_ready
  input  [1 : 0] muldiv_ma_mbox_ready_rdy;

  // value method float_mv_fbox_inputs
  output [211 : 0] float_mv_fbox_inputs;
  output RDY_float_mv_fbox_inputs;

  // action method float_ma_fbox_ready
  input  float_ma_fbox_ready_rdy;

  // value method perfmonitors_mv_count_floats
  output perfmonitors_mv_count_floats;

  // value method perfmonitors_mv_count_muldiv
  output perfmonitors_mv_count_muldiv;

  // value method perfmonitors_mv_count_jumps
  output perfmonitors_mv_count_jumps;

  // value method perfmonitors_mv_count_branches
  output perfmonitors_mv_count_branches;

  // value method perfmonitors_mv_count_rawstalls
  output perfmonitors_mv_count_rawstalls;

  // value method perfmonitors_mv_count_exestalls
  output perfmonitors_mv_count_exestalls;

  // signals for module outputs
  reg [79 : 0] tx_tx_baseout_to_stage4_enq_data;
  reg [77 : 0] tx_tx_fuid_to_stage4_enq_data;
  reg [71 : 0] tx_tx_trapout_to_stage4_enq_data;
  wire [308 : 0] tx_tx_commitlog_enq_data;
  wire [211 : 0] float_mv_fbox_inputs;
  wire [144 : 0] cache_mv_memory_request_get;
  wire [141 : 0] bpu_mv_train_bpu;
  wire [131 : 0] muldiv_mv_mbox_inputs;
  wire [80 : 0] tx_tx_systemout_to_stage4_enq_data;
  wire [63 : 0] common_mv_flush_snd;
  wire [8 : 0] tx_tx_memoryout_to_stage4_enq_data;
  wire [7 : 0] bpu_mv_mispredict_snd;
  wire RDY_bpu_ma_next_pc,
       RDY_bpu_mv_mispredict_fst,
       RDY_bpu_mv_mispredict_snd,
       RDY_bpu_mv_train_bpu,
       RDY_cache_mv_memory_request_get,
       RDY_common_ma_sb_release,
       RDY_float_mv_fbox_inputs,
       RDY_muldiv_mv_mbox_inputs,
       bpu_mv_mispredict_fst,
       common_mv_flush_fst,
       perfmonitors_mv_count_branches,
       perfmonitors_mv_count_exestalls,
       perfmonitors_mv_count_floats,
       perfmonitors_mv_count_jumps,
       perfmonitors_mv_count_muldiv,
       perfmonitors_mv_count_rawstalls,
       rx_rx_commitlog_deq_ena,
       rx_rx_instrtype_from_stage2_deq_ena,
       rx_rx_meta_from_stage2_deq_ena,
       rx_rx_mtval_from_stage2_deq_ena,
       rx_rx_opmeta_from_stage2_deq_ena,
       tx_tx_baseout_to_stage4_enq_ena,
       tx_tx_commitlog_enq_ena,
       tx_tx_fuid_to_stage4_enq_ena,
       tx_tx_memoryout_to_stage4_enq_ena,
       tx_tx_systemout_to_stage4_enq_ena,
       tx_tx_trapout_to_stage4_enq_ena;

  // probes
  wire wr_op1_avail_probe_PROBE,
       wr_op1_avail_probe_PROBE_VALID,
       wr_op2_avail_probe_PROBE,
       wr_op2_avail_probe_PROBE_VALID,
       wr_op3_avail_probe_PROBE,
       wr_op3_avail_probe_PROBE_VALID;

  // inlined wires
  wire [142 : 0] wr_training_data_1_wget;
  wire [64 : 0] wr_next_pc_wget;
  wire [9 : 0] wr_mispredict_ghr_1_wget;
  wire rx_commitlog_w_ena_whas,
       rx_instrtype_w_ena_whas,
       rx_meta_w_ena_whas,
       rx_mtval_w_ena_whas,
       rx_opmeta_w_ena_whas,
       tx_baseout_w_ena_whas,
       tx_commitlog_w_ena_whas,
       tx_fuid_w_ena_whas,
       tx_memoryout_w_ena_whas,
       tx_trapout_w_ena_whas,
       wr_count_branches_whas,
       wr_count_jumps_whas,
       wr_count_rawstalls_whas,
       wr_flush_from_exe_wget,
       wr_mispredict_ghr_1_whas,
       wr_op3_avail_wget;

  // register rg_eEpoch
  reg rg_eEpoch;
  wire rg_eEpoch_D_IN, rg_eEpoch_EN;

  // register rg_wEpoch
  reg rg_wEpoch;
  wire rg_wEpoch_D_IN, rg_wEpoch_EN;

  // register wr_mispredict_ghr
  reg [9 : 0] wr_mispredict_ghr;
  wire [9 : 0] wr_mispredict_ghr_D_IN;
  wire wr_mispredict_ghr_EN;

  // register wr_training_data
  reg [142 : 0] wr_training_data;
  wire [142 : 0] wr_training_data_D_IN;
  wire wr_training_data_EN;

  // ports of submodule sboard
  reg [9 : 0] sboard_ma_lock_rd_lock;
  wire [319 : 0] sboard_mv_board;
  wire [9 : 0] sboard_ma_release_rd_rls;
  wire [3 : 0] sboard_ma_lock_rd;
  wire sboard_EN_ma_lock_rd, sboard_EN_ma_release_rd;

  // rule scheduling signals
  wire CAN_FIRE_RL_rl_drop_instr,
       CAN_FIRE_RL_rl_exe_base_arith,
       CAN_FIRE_RL_rl_exe_base_control,
       CAN_FIRE_RL_rl_exe_base_memory,
       CAN_FIRE_RL_rl_fbox,
       CAN_FIRE_RL_rl_mbox,
       CAN_FIRE_RL_rl_perform_fwding,
       CAN_FIRE_RL_rl_structural_stalls,
       CAN_FIRE_RL_rl_system_instr,
       CAN_FIRE_RL_rl_trap_from_prev,
       CAN_FIRE_RL_wr_mispredict_ghr__dreg_update,
       CAN_FIRE_RL_wr_training_data__dreg_update,
       CAN_FIRE_bpu_ma_next_pc,
       CAN_FIRE_bypass_ma_bypass,
       CAN_FIRE_cache_ma_cache_is_available,
       CAN_FIRE_cache_mv_memory_request_get,
       CAN_FIRE_common_ma_csr_misa_c,
       CAN_FIRE_common_ma_mstatus,
       CAN_FIRE_common_ma_priv,
       CAN_FIRE_common_ma_sb_release,
       CAN_FIRE_common_ma_update_wEpoch,
       CAN_FIRE_float_ma_fbox_ready,
       CAN_FIRE_muldiv_ma_mbox_ready,
       CAN_FIRE_rf_ma_op1,
       CAN_FIRE_rf_ma_op2,
       CAN_FIRE_rf_ma_op3,
       CAN_FIRE_rx_rx_commitlog_first,
       CAN_FIRE_rx_rx_commitlog_first_deq_rdy,
       CAN_FIRE_rx_rx_commitlog_notEmpty,
       CAN_FIRE_rx_rx_instrtype_from_stage2_first,
       CAN_FIRE_rx_rx_instrtype_from_stage2_first_deq_rdy,
       CAN_FIRE_rx_rx_instrtype_from_stage2_notEmpty,
       CAN_FIRE_rx_rx_meta_from_stage2_first,
       CAN_FIRE_rx_rx_meta_from_stage2_first_deq_rdy,
       CAN_FIRE_rx_rx_meta_from_stage2_notEmpty,
       CAN_FIRE_rx_rx_mtval_from_stage2_first,
       CAN_FIRE_rx_rx_mtval_from_stage2_first_deq_rdy,
       CAN_FIRE_rx_rx_mtval_from_stage2_notEmpty,
       CAN_FIRE_rx_rx_opmeta_from_stage2_first,
       CAN_FIRE_rx_rx_opmeta_from_stage2_first_deq_rdy,
       CAN_FIRE_rx_rx_opmeta_from_stage2_notEmpty,
       CAN_FIRE_tx_tx_baseout_to_stage4_enq_rdy,
       CAN_FIRE_tx_tx_baseout_to_stage4_notFull,
       CAN_FIRE_tx_tx_commitlog_enq_rdy,
       CAN_FIRE_tx_tx_commitlog_notFull,
       CAN_FIRE_tx_tx_fuid_to_stage4_enq_rdy,
       CAN_FIRE_tx_tx_fuid_to_stage4_notFull,
       CAN_FIRE_tx_tx_memoryout_to_stage4_enq_rdy,
       CAN_FIRE_tx_tx_memoryout_to_stage4_notFull,
       CAN_FIRE_tx_tx_systemout_to_stage4_enq_rdy,
       CAN_FIRE_tx_tx_systemout_to_stage4_notFull,
       CAN_FIRE_tx_tx_trapout_to_stage4_enq_rdy,
       CAN_FIRE_tx_tx_trapout_to_stage4_notFull,
       WILL_FIRE_RL_rl_drop_instr,
       WILL_FIRE_RL_rl_exe_base_arith,
       WILL_FIRE_RL_rl_exe_base_control,
       WILL_FIRE_RL_rl_exe_base_memory,
       WILL_FIRE_RL_rl_fbox,
       WILL_FIRE_RL_rl_mbox,
       WILL_FIRE_RL_rl_perform_fwding,
       WILL_FIRE_RL_rl_structural_stalls,
       WILL_FIRE_RL_rl_system_instr,
       WILL_FIRE_RL_rl_trap_from_prev,
       WILL_FIRE_RL_wr_mispredict_ghr__dreg_update,
       WILL_FIRE_RL_wr_training_data__dreg_update,
       WILL_FIRE_bpu_ma_next_pc,
       WILL_FIRE_bypass_ma_bypass,
       WILL_FIRE_cache_ma_cache_is_available,
       WILL_FIRE_cache_mv_memory_request_get,
       WILL_FIRE_common_ma_csr_misa_c,
       WILL_FIRE_common_ma_mstatus,
       WILL_FIRE_common_ma_priv,
       WILL_FIRE_common_ma_sb_release,
       WILL_FIRE_common_ma_update_wEpoch,
       WILL_FIRE_float_ma_fbox_ready,
       WILL_FIRE_muldiv_ma_mbox_ready,
       WILL_FIRE_rf_ma_op1,
       WILL_FIRE_rf_ma_op2,
       WILL_FIRE_rf_ma_op3,
       WILL_FIRE_rx_rx_commitlog_first,
       WILL_FIRE_rx_rx_commitlog_first_deq_rdy,
       WILL_FIRE_rx_rx_commitlog_notEmpty,
       WILL_FIRE_rx_rx_instrtype_from_stage2_first,
       WILL_FIRE_rx_rx_instrtype_from_stage2_first_deq_rdy,
       WILL_FIRE_rx_rx_instrtype_from_stage2_notEmpty,
       WILL_FIRE_rx_rx_meta_from_stage2_first,
       WILL_FIRE_rx_rx_meta_from_stage2_first_deq_rdy,
       WILL_FIRE_rx_rx_meta_from_stage2_notEmpty,
       WILL_FIRE_rx_rx_mtval_from_stage2_first,
       WILL_FIRE_rx_rx_mtval_from_stage2_first_deq_rdy,
       WILL_FIRE_rx_rx_mtval_from_stage2_notEmpty,
       WILL_FIRE_rx_rx_opmeta_from_stage2_first,
       WILL_FIRE_rx_rx_opmeta_from_stage2_first_deq_rdy,
       WILL_FIRE_rx_rx_opmeta_from_stage2_notEmpty,
       WILL_FIRE_tx_tx_baseout_to_stage4_enq_rdy,
       WILL_FIRE_tx_tx_baseout_to_stage4_notFull,
       WILL_FIRE_tx_tx_commitlog_enq_rdy,
       WILL_FIRE_tx_tx_commitlog_notFull,
       WILL_FIRE_tx_tx_fuid_to_stage4_enq_rdy,
       WILL_FIRE_tx_tx_fuid_to_stage4_notFull,
       WILL_FIRE_tx_tx_memoryout_to_stage4_enq_rdy,
       WILL_FIRE_tx_tx_memoryout_to_stage4_notFull,
       WILL_FIRE_tx_tx_systemout_to_stage4_enq_rdy,
       WILL_FIRE_tx_tx_systemout_to_stage4_notFull,
       WILL_FIRE_tx_tx_trapout_to_stage4_enq_rdy,
       WILL_FIRE_tx_tx_trapout_to_stage4_notFull;

  // inputs to muxes for submodule ports
  wire [308 : 0] MUX_tx_commitlog_w_data_wset_1__VAL_3;
  wire [79 : 0] MUX_tx_baseout_w_data_wset_1__VAL_1,
		MUX_tx_baseout_w_data_wset_1__VAL_2,
		MUX_tx_baseout_w_data_wset_1__VAL_3;
  wire [77 : 0] MUX_tx_fuid_w_data_wset_1__VAL_1,
		MUX_tx_fuid_w_data_wset_1__VAL_2,
		MUX_tx_fuid_w_data_wset_1__VAL_3,
		MUX_tx_fuid_w_data_wset_1__VAL_4,
		MUX_tx_fuid_w_data_wset_1__VAL_5,
		MUX_tx_fuid_w_data_wset_1__VAL_6,
		MUX_tx_fuid_w_data_wset_1__VAL_7;
  wire [71 : 0] MUX_tx_trapout_w_data_wset_1__VAL_1,
		MUX_tx_trapout_w_data_wset_1__VAL_2,
		MUX_tx_trapout_w_data_wset_1__VAL_3;
  wire [9 : 0] MUX_sboard_ma_lock_rd_1__VAL_2;
  wire MUX_rx_commitlog_w_ena_wset_1__PSEL_2,
       MUX_rx_commitlog_w_ena_wset_1__SEL_1,
       MUX_sboard_ma_lock_rd_1__SEL_2,
       MUX_tx_baseout_w_data_wset_1__SEL_1,
       MUX_tx_baseout_w_data_wset_1__SEL_2,
       MUX_tx_baseout_w_data_wset_1__SEL_3,
       MUX_tx_commitlog_w_data_wset_1__PSEL_2,
       MUX_tx_commitlog_w_data_wset_1__SEL_2,
       MUX_tx_commitlog_w_data_wset_1__SEL_3,
       MUX_tx_fuid_w_data_wset_1__SEL_4,
       MUX_tx_trapout_w_data_wset_1__SEL_1,
       MUX_tx_trapout_w_data_wset_1__SEL_2;

  // remaining internal signals
  reg [63 : 0] _theResult_____5__h17475;
  reg [3 : 0] sb_rs1id__h6270, sb_rs2id__h6271, sb_rs3id__h10729;
  reg [1 : 0] CASE_rx_rx_instrtype_from_stage2_first_x_3_1_4_ETC__q7,
	      CASE_rx_rx_meta_from_stage2_first_x_BITS_84_TO_ETC__q5,
	      CASE_rx_rx_meta_from_stage2_first_x_BITS_84_TO_ETC__q6;
  wire [64 : 0] fn_bypass___d102, fn_bypass___d116, fn_bypass___d132;
  wire [63 : 0] alu_result__h14330,
		base__h17436,
		baseoutput_rdvalue__h14506,
		incr__h17467,
		jump_address__h17466,
		memory_address__h15642,
		nextpc__h17670,
		nextpc__h17738,
		nextpc__h17799,
		nlogical_pc__h17468,
		sboardmv_board_BITS_319_TO_256__q1,
		systemout_rs1_imm__h11975,
		x__h12037,
		x__read__h4398,
		x_wget__h4456,
		x_wget__h5177;
  wire [31 : 0] alu_result4330_BITS_31_TO_0__q4;
  wire [6 : 0] memory_cause__h15645, x__h12048;
  wire [5 : 0] i__h10946, i__h9245, x__h10027;
  wire [4 : 0] req_atomic_op__h15873,
	       x_wget_rs1addr__h6347,
	       x_wget_rs2addr__h6348;
  wire [2 : 0] rx_rx_meta_from_stage2_first_x_BITS_73_TO_71__q3;
  wire [1 : 0] IF_IF_rx_instrtype_w_data_whas__68_THEN_rx_ins_ETC___d488,
	       _theResult_____2__h19490,
	       curr_epochs__h5467,
	       rx_rx_meta_from_stage2_first_x_BITS_6_TO_5__q2,
	       rx_rx_meta_from_stage2_first_x_BITS_84_TO_83__q8,
	       state__h19503,
	       x__h15946,
	       x__h17607;
  wire IF_IF_rx_instrtype_w_data_whas__68_THEN_rx_ins_ETC___d415,
       IF_rx_instrtype_w_data_whas__68_THEN_rx_instrt_ETC___d452,
       IF_rx_instrtype_w_data_whas__68_THEN_rx_instrt_ETC___d517,
       NOT_IF_IF_rx_instrtype_w_data_whas__68_THEN_rx_ETC___d403,
       NOT_IF_rx_meta_w_data_whas__46_THEN_rx_meta_w__ETC___d339,
       _dand2rx_commitlog_w_ena_EN_wset,
       _dand2rx_instrtype_w_ena_EN_wset,
       _dand2rx_meta_w_ena_EN_wset,
       _dand2rx_mtval_w_ena_EN_wset,
       _dand2rx_opmeta_w_ena_EN_wset,
       _dand2sboard_EN_ma_lock_rd,
       _dand2tx_commitlog_w_ena_EN_wset,
       _dand2tx_fuid_w_ena_EN_wset,
       _dand2wr_count_rawstalls_EN_wset,
       baseoutput_epochs__h18186,
       btaken__h17469,
       nanboxing__h15646,
       rg_eEpoch_read__44_CONCAT_rg_wEpoch_6_45_EQ_IF_ETC___d150,
       rx_commitlog_w_rdy_wget__39_AND_tx_fuid_w_rdy__ETC___d365,
       rx_mtval_w_rdy_wget__37_AND_rx_commitlog_w_rdy_ETC___d230,
       rx_mtval_w_rdy_wget__37_AND_rx_commitlog_w_rdy_ETC___d531,
       rx_opmeta_w_rdy_wget__0_AND_rx_mtval_w_rdy_wge_ETC___d212,
       rx_opmeta_w_rdy_wget__0_AND_rx_mtval_w_rdy_wge_ETC___d502,
       tx_fuid_w_rdy_wget__55_AND_tx_commitlog_w_rdy__ETC___d269,
       wr_op1_avail_wget__80_AND_wr_op2_avail_wget__4_ETC___d306,
       wr_op1_avail_wget__80_AND_wr_op2_avail_wget__4_ETC___d335,
       wr_op1_avail_whas__53_AND_rx_instrtype_w_rdy_w_ETC___d371,
       wr_op2_avail_whas__22_AND_rx_opmeta_w_rdy_wget_ETC___d275,
       wr_op3_whas__4_AND_rx_mtval_w_rdy_wget__37_AND_ETC___d163,
       x__h10136,
       x__h10945,
       x__h9244,
       x_wget__h5806;

  // action method common_ma_update_wEpoch
  assign CAN_FIRE_common_ma_update_wEpoch = 1'd1 ;
  assign WILL_FIRE_common_ma_update_wEpoch = EN_common_ma_update_wEpoch ;

  // value method common_mv_flush_fst
  assign common_mv_flush_fst =
	     MUX_tx_fuid_w_data_wset_1__SEL_4 && wr_flush_from_exe_wget ;

  // value method common_mv_flush_snd
  assign common_mv_flush_snd =
	     MUX_tx_fuid_w_data_wset_1__SEL_4 ? x_wget__h5177 : 64'd0 ;

  // action method common_ma_csr_misa_c
  assign CAN_FIRE_common_ma_csr_misa_c = 1'd1 ;
  assign WILL_FIRE_common_ma_csr_misa_c = 1'd1 ;

  // action method common_ma_sb_release
  assign RDY_common_ma_sb_release = 1'd1 ;
  assign CAN_FIRE_common_ma_sb_release = 1'd1 ;
  assign WILL_FIRE_common_ma_sb_release = EN_common_ma_sb_release ;

  // action method common_ma_priv
  assign CAN_FIRE_common_ma_priv = 1'd1 ;
  assign WILL_FIRE_common_ma_priv = 1'd1 ;

  // action method common_ma_mstatus
  assign CAN_FIRE_common_ma_mstatus = 1'd1 ;
  assign WILL_FIRE_common_ma_mstatus = 1'd1 ;

  // action method rx_rx_meta_from_stage2_notEmpty
  assign CAN_FIRE_rx_rx_meta_from_stage2_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_rx_meta_from_stage2_notEmpty = 1'd1 ;

  // action method rx_rx_meta_from_stage2_first_deq_rdy
  assign CAN_FIRE_rx_rx_meta_from_stage2_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_rx_meta_from_stage2_first_deq_rdy = 1'd1 ;

  // action method rx_rx_meta_from_stage2_first
  assign CAN_FIRE_rx_rx_meta_from_stage2_first = 1'd1 ;
  assign WILL_FIRE_rx_rx_meta_from_stage2_first = 1'd1 ;

  // value method rx_rx_meta_from_stage2_deq_ena
  assign rx_rx_meta_from_stage2_deq_ena = rx_meta_w_ena_whas ;

  // action method rx_rx_mtval_from_stage2_notEmpty
  assign CAN_FIRE_rx_rx_mtval_from_stage2_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_rx_mtval_from_stage2_notEmpty = 1'd1 ;

  // action method rx_rx_mtval_from_stage2_first_deq_rdy
  assign CAN_FIRE_rx_rx_mtval_from_stage2_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_rx_mtval_from_stage2_first_deq_rdy = 1'd1 ;

  // action method rx_rx_mtval_from_stage2_first
  assign CAN_FIRE_rx_rx_mtval_from_stage2_first = 1'd1 ;
  assign WILL_FIRE_rx_rx_mtval_from_stage2_first = 1'd1 ;

  // value method rx_rx_mtval_from_stage2_deq_ena
  assign rx_rx_mtval_from_stage2_deq_ena = rx_mtval_w_ena_whas ;

  // action method rx_rx_instrtype_from_stage2_notEmpty
  assign CAN_FIRE_rx_rx_instrtype_from_stage2_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_rx_instrtype_from_stage2_notEmpty = 1'd1 ;

  // action method rx_rx_instrtype_from_stage2_first_deq_rdy
  assign CAN_FIRE_rx_rx_instrtype_from_stage2_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_rx_instrtype_from_stage2_first_deq_rdy = 1'd1 ;

  // action method rx_rx_instrtype_from_stage2_first
  assign CAN_FIRE_rx_rx_instrtype_from_stage2_first = 1'd1 ;
  assign WILL_FIRE_rx_rx_instrtype_from_stage2_first = 1'd1 ;

  // value method rx_rx_instrtype_from_stage2_deq_ena
  assign rx_rx_instrtype_from_stage2_deq_ena = rx_instrtype_w_ena_whas ;

  // action method rx_rx_opmeta_from_stage2_notEmpty
  assign CAN_FIRE_rx_rx_opmeta_from_stage2_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_rx_opmeta_from_stage2_notEmpty = 1'd1 ;

  // action method rx_rx_opmeta_from_stage2_first_deq_rdy
  assign CAN_FIRE_rx_rx_opmeta_from_stage2_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_rx_opmeta_from_stage2_first_deq_rdy = 1'd1 ;

  // action method rx_rx_opmeta_from_stage2_first
  assign CAN_FIRE_rx_rx_opmeta_from_stage2_first = 1'd1 ;
  assign WILL_FIRE_rx_rx_opmeta_from_stage2_first = 1'd1 ;

  // value method rx_rx_opmeta_from_stage2_deq_ena
  assign rx_rx_opmeta_from_stage2_deq_ena = rx_opmeta_w_ena_whas ;

  // action method rx_rx_commitlog_notEmpty
  assign CAN_FIRE_rx_rx_commitlog_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_rx_commitlog_notEmpty = 1'd1 ;

  // action method rx_rx_commitlog_first_deq_rdy
  assign CAN_FIRE_rx_rx_commitlog_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_rx_commitlog_first_deq_rdy = 1'd1 ;

  // action method rx_rx_commitlog_first
  assign CAN_FIRE_rx_rx_commitlog_first = 1'd1 ;
  assign WILL_FIRE_rx_rx_commitlog_first = 1'd1 ;

  // value method rx_rx_commitlog_deq_ena
  assign rx_rx_commitlog_deq_ena = rx_commitlog_w_ena_whas ;

  // action method tx_tx_baseout_to_stage4_notFull
  assign CAN_FIRE_tx_tx_baseout_to_stage4_notFull = 1'd1 ;
  assign WILL_FIRE_tx_tx_baseout_to_stage4_notFull = 1'd1 ;

  // action method tx_tx_baseout_to_stage4_enq_rdy
  assign CAN_FIRE_tx_tx_baseout_to_stage4_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_tx_baseout_to_stage4_enq_rdy = 1'd1 ;

  // value method tx_tx_baseout_to_stage4_enq_ena
  assign tx_tx_baseout_to_stage4_enq_ena = tx_baseout_w_ena_whas ;

  // value method tx_tx_baseout_to_stage4_enq_data
  always@(MUX_tx_baseout_w_data_wset_1__SEL_1 or
	  MUX_tx_baseout_w_data_wset_1__VAL_1 or
	  MUX_tx_baseout_w_data_wset_1__SEL_2 or
	  MUX_tx_baseout_w_data_wset_1__VAL_2 or
	  MUX_tx_baseout_w_data_wset_1__SEL_3 or
	  MUX_tx_baseout_w_data_wset_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_tx_baseout_w_data_wset_1__SEL_1:
	  tx_tx_baseout_to_stage4_enq_data =
	      MUX_tx_baseout_w_data_wset_1__VAL_1;
      MUX_tx_baseout_w_data_wset_1__SEL_2:
	  tx_tx_baseout_to_stage4_enq_data =
	      MUX_tx_baseout_w_data_wset_1__VAL_2;
      MUX_tx_baseout_w_data_wset_1__SEL_3:
	  tx_tx_baseout_to_stage4_enq_data =
	      MUX_tx_baseout_w_data_wset_1__VAL_3;
      default: tx_tx_baseout_to_stage4_enq_data =
		   80'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end

  // action method tx_tx_trapout_to_stage4_notFull
  assign CAN_FIRE_tx_tx_trapout_to_stage4_notFull = 1'd1 ;
  assign WILL_FIRE_tx_tx_trapout_to_stage4_notFull = 1'd1 ;

  // action method tx_tx_trapout_to_stage4_enq_rdy
  assign CAN_FIRE_tx_tx_trapout_to_stage4_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_tx_trapout_to_stage4_enq_rdy = 1'd1 ;

  // value method tx_tx_trapout_to_stage4_enq_ena
  assign tx_tx_trapout_to_stage4_enq_ena = tx_trapout_w_ena_whas ;

  // value method tx_tx_trapout_to_stage4_enq_data
  always@(MUX_tx_trapout_w_data_wset_1__SEL_1 or
	  MUX_tx_trapout_w_data_wset_1__VAL_1 or
	  MUX_tx_trapout_w_data_wset_1__SEL_2 or
	  MUX_tx_trapout_w_data_wset_1__VAL_2 or
	  WILL_FIRE_RL_rl_trap_from_prev or
	  MUX_tx_trapout_w_data_wset_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_tx_trapout_w_data_wset_1__SEL_1:
	  tx_tx_trapout_to_stage4_enq_data =
	      MUX_tx_trapout_w_data_wset_1__VAL_1;
      MUX_tx_trapout_w_data_wset_1__SEL_2:
	  tx_tx_trapout_to_stage4_enq_data =
	      MUX_tx_trapout_w_data_wset_1__VAL_2;
      WILL_FIRE_RL_rl_trap_from_prev:
	  tx_tx_trapout_to_stage4_enq_data =
	      MUX_tx_trapout_w_data_wset_1__VAL_3;
      default: tx_tx_trapout_to_stage4_enq_data =
		   72'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end

  // action method tx_tx_systemout_to_stage4_notFull
  assign CAN_FIRE_tx_tx_systemout_to_stage4_notFull = 1'd1 ;
  assign WILL_FIRE_tx_tx_systemout_to_stage4_notFull = 1'd1 ;

  // action method tx_tx_systemout_to_stage4_enq_rdy
  assign CAN_FIRE_tx_tx_systemout_to_stage4_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_tx_systemout_to_stage4_enq_rdy = 1'd1 ;

  // value method tx_tx_systemout_to_stage4_enq_ena
  assign tx_tx_systemout_to_stage4_enq_ena =
	     MUX_rx_commitlog_w_ena_wset_1__SEL_1 ;

  // value method tx_tx_systemout_to_stage4_enq_data
  assign tx_tx_systemout_to_stage4_enq_data =
	     { systemout_rs1_imm__h11975,
	       x__h12037[1:0],
	       rf_ma_op3_i[12:1],
	       x__h12048[2:0] } ;

  // action method tx_tx_memoryout_to_stage4_notFull
  assign CAN_FIRE_tx_tx_memoryout_to_stage4_notFull = 1'd1 ;
  assign WILL_FIRE_tx_tx_memoryout_to_stage4_notFull = 1'd1 ;

  // action method tx_tx_memoryout_to_stage4_enq_rdy
  assign CAN_FIRE_tx_tx_memoryout_to_stage4_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_tx_memoryout_to_stage4_enq_rdy = 1'd1 ;

  // value method tx_tx_memoryout_to_stage4_enq_ena
  assign tx_tx_memoryout_to_stage4_enq_ena = tx_memoryout_w_ena_whas ;

  // value method tx_tx_memoryout_to_stage4_enq_data
  assign tx_tx_memoryout_to_stage4_enq_data =
	     { req_atomic_op__h15873,
	       nanboxing__h15646,
	       rx_rx_meta_from_stage2_first_x[73:71] } ;

  // action method tx_tx_fuid_to_stage4_notFull
  assign CAN_FIRE_tx_tx_fuid_to_stage4_notFull = 1'd1 ;
  assign WILL_FIRE_tx_tx_fuid_to_stage4_notFull = 1'd1 ;

  // action method tx_tx_fuid_to_stage4_enq_rdy
  assign CAN_FIRE_tx_tx_fuid_to_stage4_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_tx_fuid_to_stage4_enq_rdy = 1'd1 ;

  // value method tx_tx_fuid_to_stage4_enq_ena
  assign tx_tx_fuid_to_stage4_enq_ena = tx_fuid_w_ena_whas ;

  // value method tx_tx_fuid_to_stage4_enq_data
  always@(MUX_rx_commitlog_w_ena_wset_1__SEL_1 or
	  MUX_tx_fuid_w_data_wset_1__VAL_1 or
	  MUX_tx_baseout_w_data_wset_1__SEL_1 or
	  MUX_tx_fuid_w_data_wset_1__VAL_2 or
	  MUX_tx_commitlog_w_data_wset_1__SEL_3 or
	  MUX_tx_fuid_w_data_wset_1__VAL_3 or
	  MUX_tx_fuid_w_data_wset_1__SEL_4 or
	  MUX_tx_fuid_w_data_wset_1__VAL_4 or
	  RDY_muldiv_mv_mbox_inputs or
	  MUX_tx_fuid_w_data_wset_1__VAL_5 or
	  RDY_float_mv_fbox_inputs or
	  MUX_tx_fuid_w_data_wset_1__VAL_6 or
	  WILL_FIRE_RL_rl_trap_from_prev or MUX_tx_fuid_w_data_wset_1__VAL_7)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rx_commitlog_w_ena_wset_1__SEL_1:
	  tx_tx_fuid_to_stage4_enq_data = MUX_tx_fuid_w_data_wset_1__VAL_1;
      MUX_tx_baseout_w_data_wset_1__SEL_1:
	  tx_tx_fuid_to_stage4_enq_data = MUX_tx_fuid_w_data_wset_1__VAL_2;
      MUX_tx_commitlog_w_data_wset_1__SEL_3:
	  tx_tx_fuid_to_stage4_enq_data = MUX_tx_fuid_w_data_wset_1__VAL_3;
      MUX_tx_fuid_w_data_wset_1__SEL_4:
	  tx_tx_fuid_to_stage4_enq_data = MUX_tx_fuid_w_data_wset_1__VAL_4;
      RDY_muldiv_mv_mbox_inputs:
	  tx_tx_fuid_to_stage4_enq_data = MUX_tx_fuid_w_data_wset_1__VAL_5;
      RDY_float_mv_fbox_inputs:
	  tx_tx_fuid_to_stage4_enq_data = MUX_tx_fuid_w_data_wset_1__VAL_6;
      WILL_FIRE_RL_rl_trap_from_prev:
	  tx_tx_fuid_to_stage4_enq_data = MUX_tx_fuid_w_data_wset_1__VAL_7;
      default: tx_tx_fuid_to_stage4_enq_data =
		   78'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end

  // action method tx_tx_commitlog_notFull
  assign CAN_FIRE_tx_tx_commitlog_notFull = 1'd1 ;
  assign WILL_FIRE_tx_tx_commitlog_notFull = 1'd1 ;

  // action method tx_tx_commitlog_enq_rdy
  assign CAN_FIRE_tx_tx_commitlog_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_tx_commitlog_enq_rdy = 1'd1 ;

  // value method tx_tx_commitlog_enq_ena
  assign tx_tx_commitlog_enq_ena = tx_commitlog_w_ena_whas ;

  // value method tx_tx_commitlog_enq_data
  assign tx_tx_commitlog_enq_data =
	     (MUX_rx_commitlog_w_ena_wset_1__SEL_1 ||
	      MUX_tx_commitlog_w_data_wset_1__SEL_2 ||
	      RDY_float_mv_fbox_inputs ||
	      WILL_FIRE_RL_rl_trap_from_prev) ?
	       rx_rx_commitlog_first_x :
	       MUX_tx_commitlog_w_data_wset_1__VAL_3 ;

  // action method rf_ma_op1
  assign CAN_FIRE_rf_ma_op1 = 1'd1 ;
  assign WILL_FIRE_rf_ma_op1 = 1'd1 ;

  // action method rf_ma_op2
  assign CAN_FIRE_rf_ma_op2 = 1'd1 ;
  assign WILL_FIRE_rf_ma_op2 = 1'd1 ;

  // action method rf_ma_op3
  assign CAN_FIRE_rf_ma_op3 = 1'd1 ;
  assign WILL_FIRE_rf_ma_op3 = 1'd1 ;

  // actionvalue method cache_mv_memory_request_get
  assign cache_mv_memory_request_get =
	     { memory_address__h15642,
	       rx_rx_meta_from_stage2_first_x_BITS_6_TO_5__q2[0],
	       x__h12048[2:0],
	       rx_rx_meta_from_stage2_first_x[73:71] == 3'd4 ||
	       rx_rx_meta_from_stage2_first_x[73:71] == 3'd3,
	       rx_rx_meta_from_stage2_first_x_BITS_73_TO_71__q3[1:0],
	       fn_bypass___d116[63:0],
	       x__h15946,
	       req_atomic_op__h15873,
	       rx_rx_meta_from_stage2_first_x[73:71] == 3'd5,
	       2'd0 } ;
  assign RDY_cache_mv_memory_request_get =
	     WILL_FIRE_RL_rl_exe_base_memory &&
	     wr_op1_avail_wget__80_AND_wr_op2_avail_wget__4_ETC___d306 ;
  assign CAN_FIRE_cache_mv_memory_request_get =
	     RDY_cache_mv_memory_request_get ;
  assign WILL_FIRE_cache_mv_memory_request_get =
	     EN_cache_mv_memory_request_get ;

  // action method cache_ma_cache_is_available
  assign CAN_FIRE_cache_ma_cache_is_available = 1'd1 ;
  assign WILL_FIRE_cache_ma_cache_is_available = 1'd1 ;

  // action method bypass_ma_bypass
  assign CAN_FIRE_bypass_ma_bypass = 1'd1 ;
  assign WILL_FIRE_bypass_ma_bypass = 1'd1 ;

  // action method bpu_ma_next_pc
  assign RDY_bpu_ma_next_pc = 1'd1 ;
  assign CAN_FIRE_bpu_ma_next_pc = 1'd1 ;
  assign WILL_FIRE_bpu_ma_next_pc = EN_bpu_ma_next_pc ;

  // value method bpu_mv_train_bpu
  assign bpu_mv_train_bpu = wr_training_data[141:0] ;
  assign RDY_bpu_mv_train_bpu = wr_training_data[142] ;

  // value method bpu_mv_mispredict_fst
  assign bpu_mv_mispredict_fst = wr_mispredict_ghr[8] ;
  assign RDY_bpu_mv_mispredict_fst = wr_mispredict_ghr[9] ;

  // value method bpu_mv_mispredict_snd
  assign bpu_mv_mispredict_snd = wr_mispredict_ghr[7:0] ;
  assign RDY_bpu_mv_mispredict_snd = wr_mispredict_ghr[9] ;

  // value method muldiv_mv_mbox_inputs
  assign muldiv_mv_mbox_inputs =
	     { rx_rx_meta_from_stage2_first_x[95],
	       fn_bypass___d102[63:0],
	       fn_bypass___d116[63:0],
	       x__h12048[2:0] } ;
  assign RDY_muldiv_mv_mbox_inputs =
	     WILL_FIRE_RL_rl_mbox && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] ;

  // action method muldiv_ma_mbox_ready
  assign CAN_FIRE_muldiv_ma_mbox_ready = 1'd1 ;
  assign WILL_FIRE_muldiv_ma_mbox_ready = 1'd1 ;

  // value method float_mv_fbox_inputs
  assign float_mv_fbox_inputs =
	     { fn_bypass___d102[63:0],
	       fn_bypass___d116[63:0],
	       fn_bypass___d132[63:0],
	       x__h12048[6:3],
	       rf_ma_op3_i[12:6],
	       x__h12048[2:0],
	       rf_ma_op3_i[2:1],
	       rx_rx_meta_from_stage2_first_x[95],
	       x__h12048[2:0] } ;
  assign RDY_float_mv_fbox_inputs =
	     WILL_FIRE_RL_rl_fbox && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] &&
	     wr_op3_avail_wget ;

  // action method float_ma_fbox_ready
  assign CAN_FIRE_float_ma_fbox_ready = 1'd1 ;
  assign WILL_FIRE_float_ma_fbox_ready = 1'd1 ;

  // value method perfmonitors_mv_count_floats
  assign perfmonitors_mv_count_floats = RDY_float_mv_fbox_inputs ;

  // value method perfmonitors_mv_count_muldiv
  assign perfmonitors_mv_count_muldiv = RDY_muldiv_mv_mbox_inputs ;

  // value method perfmonitors_mv_count_jumps
  assign perfmonitors_mv_count_jumps = wr_count_jumps_whas ;

  // value method perfmonitors_mv_count_branches
  assign perfmonitors_mv_count_branches = wr_count_branches_whas ;

  // value method perfmonitors_mv_count_rawstalls
  assign perfmonitors_mv_count_rawstalls =
	     wr_count_rawstalls_whas && x_wget__h5806 ;

  // value method perfmonitors_mv_count_exestalls
  assign perfmonitors_mv_count_exestalls = WILL_FIRE_RL_rl_structural_stalls ;

  // submodule sboard
  mkscoreboard #(.hartid(hartid)) sboard(.CLK(CLK),
					 .RST_N(RST_N),
					 .ma_lock_rd_lock(sboard_ma_lock_rd_lock),
					 .ma_release_rd_rls(sboard_ma_release_rd_rls),
					 .EN_ma_lock_rd(sboard_EN_ma_lock_rd),
					 .EN_ma_release_rd(sboard_EN_ma_release_rd),
					 .ma_lock_rd(sboard_ma_lock_rd),
					 .RDY_ma_lock_rd(),
					 .RDY_ma_release_rd(),
					 .mv_board(sboard_mv_board),
					 .RDY_mv_board());

  // rule RL_rl_perform_fwding
  assign CAN_FIRE_RL_rl_perform_fwding =
	     rx_rx_opmeta_from_stage2_first_deq_rdy_b &&
	     rx_rx_meta_from_stage2_notEmpty_b ;
  assign WILL_FIRE_RL_rl_perform_fwding = CAN_FIRE_RL_rl_perform_fwding ;

  // rule RL_rl_drop_instr
  assign CAN_FIRE_RL_rl_drop_instr =
	     rx_rx_meta_from_stage2_first_deq_rdy_b &&
	     rx_rx_opmeta_from_stage2_first_deq_rdy_b &&
	     rx_rx_mtval_from_stage2_first_deq_rdy_b &&
	     rx_rx_instrtype_from_stage2_first_deq_rdy_b &&
	     rx_rx_commitlog_first_deq_rdy_b &&
	     !rg_eEpoch_read__44_CONCAT_rg_wEpoch_6_45_EQ_IF_ETC___d150 ;
  assign WILL_FIRE_RL_rl_drop_instr = CAN_FIRE_RL_rl_drop_instr ;

  // rule RL_rl_system_instr
  assign CAN_FIRE_RL_rl_system_instr =
	     rx_rx_meta_from_stage2_first_deq_rdy_b &&
	     CAN_FIRE_RL_rl_perform_fwding &&
	     rx_rx_instrtype_from_stage2_first_deq_rdy_b &&
	     rx_rx_opmeta_from_stage2_first_deq_rdy_b &&
	     wr_op3_whas__4_AND_rx_mtval_w_rdy_wget__37_AND_ETC___d163 &&
	     rg_eEpoch_read__44_CONCAT_rg_wEpoch_6_45_EQ_IF_ETC___d150 &&
	     rx_rx_instrtype_from_stage2_first_x == 4'd5 ;
  assign WILL_FIRE_RL_rl_system_instr = CAN_FIRE_RL_rl_system_instr ;

  // rule RL_rl_trap_from_prev
  assign CAN_FIRE_RL_rl_trap_from_prev =
	     rx_rx_meta_from_stage2_first_deq_rdy_b &&
	     rx_opmeta_w_rdy_wget__0_AND_rx_mtval_w_rdy_wge_ETC___d212 &&
	     rg_eEpoch_read__44_CONCAT_rg_wEpoch_6_45_EQ_IF_ETC___d150 &&
	     rx_rx_instrtype_from_stage2_first_x == 4'd6 ;
  assign WILL_FIRE_RL_rl_trap_from_prev = CAN_FIRE_RL_rl_trap_from_prev ;

  // rule RL_rl_exe_base_arith
  assign CAN_FIRE_RL_rl_exe_base_arith =
	     rx_rx_instrtype_from_stage2_first_deq_rdy_b &&
	     CAN_FIRE_RL_rl_perform_fwding &&
	     rx_rx_meta_from_stage2_first_deq_rdy_b &&
	     CAN_FIRE_RL_rl_perform_fwding &&
	     rx_rx_opmeta_from_stage2_first_deq_rdy_b &&
	     rx_mtval_w_rdy_wget__37_AND_rx_commitlog_w_rdy_ETC___d230 &&
	     rx_rx_instrtype_from_stage2_first_x == 4'd0 &&
	     rg_eEpoch_read__44_CONCAT_rg_wEpoch_6_45_EQ_IF_ETC___d150 ;
  assign WILL_FIRE_RL_rl_exe_base_arith = CAN_FIRE_RL_rl_exe_base_arith ;

  // rule RL_rl_exe_base_memory
  assign CAN_FIRE_RL_rl_exe_base_memory =
	     rx_rx_instrtype_from_stage2_first_deq_rdy_b &&
	     CAN_FIRE_RL_rl_perform_fwding &&
	     rx_rx_meta_from_stage2_first_deq_rdy_b &&
	     wr_op2_avail_whas__22_AND_rx_opmeta_w_rdy_wget_ETC___d275 &&
	     rx_rx_instrtype_from_stage2_first_x == 4'd1 &&
	     cache_ma_cache_is_available_avail &&
	     rg_eEpoch_read__44_CONCAT_rg_wEpoch_6_45_EQ_IF_ETC___d150 ;
  assign WILL_FIRE_RL_rl_exe_base_memory = CAN_FIRE_RL_rl_exe_base_memory ;

  // rule RL_rl_exe_base_control
  assign CAN_FIRE_RL_rl_exe_base_control =
	     rx_rx_meta_from_stage2_first_deq_rdy_b &&
	     wr_op1_avail_whas__53_AND_rx_instrtype_w_rdy_w_ETC___d371 &&
	     rg_eEpoch_read__44_CONCAT_rg_wEpoch_6_45_EQ_IF_ETC___d150 &&
	     (rx_rx_instrtype_from_stage2_first_x == 4'd4 ||
	      rx_rx_instrtype_from_stage2_first_x == 4'd3 ||
	      rx_rx_instrtype_from_stage2_first_x == 4'd2) &&
	     EN_bpu_ma_next_pc &&
	     wr_next_pc_wget[64] ;
  assign WILL_FIRE_RL_rl_exe_base_control = CAN_FIRE_RL_rl_exe_base_control ;

  // rule RL_rl_mbox
  assign CAN_FIRE_RL_rl_mbox =
	     rx_rx_instrtype_from_stage2_first_deq_rdy_b &&
	     CAN_FIRE_RL_rl_perform_fwding &&
	     rx_rx_meta_from_stage2_first_deq_rdy_b &&
	     CAN_FIRE_RL_rl_perform_fwding &&
	     rx_opmeta_w_rdy_wget__0_AND_rx_mtval_w_rdy_wge_ETC___d502 &&
	     IF_rx_instrtype_w_data_whas__68_THEN_rx_instrt_ETC___d517 ;
  assign WILL_FIRE_RL_rl_mbox = CAN_FIRE_RL_rl_mbox ;

  // rule RL_rl_structural_stalls
  assign CAN_FIRE_RL_rl_structural_stalls =
	     rx_rx_meta_from_stage2_notEmpty_b ;
  assign WILL_FIRE_RL_rl_structural_stalls =
	     rx_rx_meta_from_stage2_notEmpty_b && !WILL_FIRE_RL_rl_fbox &&
	     !WILL_FIRE_RL_rl_mbox &&
	     !WILL_FIRE_RL_rl_exe_base_control &&
	     !WILL_FIRE_RL_rl_exe_base_memory &&
	     !WILL_FIRE_RL_rl_exe_base_arith &&
	     !WILL_FIRE_RL_rl_trap_from_prev &&
	     !WILL_FIRE_RL_rl_system_instr &&
	     !WILL_FIRE_RL_rl_drop_instr ;

  // rule RL_rl_fbox
  assign CAN_FIRE_RL_rl_fbox =
	     rx_rx_instrtype_from_stage2_first_deq_rdy_b &&
	     CAN_FIRE_RL_rl_perform_fwding &&
	     rx_rx_meta_from_stage2_first_deq_rdy_b &&
	     CAN_FIRE_RL_rl_perform_fwding &&
	     CAN_FIRE_RL_rl_perform_fwding &&
	     rx_rx_opmeta_from_stage2_first_deq_rdy_b &&
	     rx_mtval_w_rdy_wget__37_AND_rx_commitlog_w_rdy_ETC___d531 &&
	     rx_rx_instrtype_from_stage2_first_x == 4'd8 &&
	     rg_eEpoch_read__44_CONCAT_rg_wEpoch_6_45_EQ_IF_ETC___d150 &&
	     float_ma_fbox_ready_rdy ;
  assign WILL_FIRE_RL_rl_fbox = CAN_FIRE_RL_rl_fbox ;

  // rule RL_wr_training_data__dreg_update
  assign CAN_FIRE_RL_wr_training_data__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_wr_training_data__dreg_update = 1'd1 ;

  // rule RL_wr_mispredict_ghr__dreg_update
  assign CAN_FIRE_RL_wr_mispredict_ghr__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_wr_mispredict_ghr__dreg_update = 1'd1 ;

  // inputs to muxes for submodule ports
  assign MUX_rx_commitlog_w_ena_wset_1__SEL_1 =
	     WILL_FIRE_RL_rl_system_instr && fn_bypass___d102[64] ;
  assign MUX_rx_commitlog_w_ena_wset_1__PSEL_2 =
	     WILL_FIRE_RL_rl_mbox || WILL_FIRE_RL_rl_exe_base_control ||
	     WILL_FIRE_RL_rl_exe_base_memory ||
	     WILL_FIRE_RL_rl_exe_base_arith ;
  assign MUX_sboard_ma_lock_rd_1__SEL_2 =
	     MUX_rx_commitlog_w_ena_wset_1__PSEL_2 && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] ;
  assign MUX_tx_baseout_w_data_wset_1__SEL_1 =
	     WILL_FIRE_RL_rl_exe_base_arith && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] ;
  assign MUX_tx_baseout_w_data_wset_1__SEL_2 =
	     WILL_FIRE_RL_rl_exe_base_memory && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] &&
	     NOT_IF_rx_meta_w_data_whas__46_THEN_rx_meta_w__ETC___d339 ;
  assign MUX_tx_baseout_w_data_wset_1__SEL_3 =
	     WILL_FIRE_RL_rl_exe_base_control && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] &&
	     NOT_IF_IF_rx_instrtype_w_data_whas__68_THEN_rx_ETC___d403 ;
  assign MUX_tx_commitlog_w_data_wset_1__PSEL_2 =
	     WILL_FIRE_RL_rl_mbox || WILL_FIRE_RL_rl_exe_base_control ||
	     WILL_FIRE_RL_rl_exe_base_arith ;
  assign MUX_tx_commitlog_w_data_wset_1__SEL_2 =
	     MUX_tx_commitlog_w_data_wset_1__PSEL_2 && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] ;
  assign MUX_tx_commitlog_w_data_wset_1__SEL_3 =
	     WILL_FIRE_RL_rl_exe_base_memory && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] ;
  assign MUX_tx_fuid_w_data_wset_1__SEL_4 =
	     WILL_FIRE_RL_rl_exe_base_control && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] ;
  assign MUX_tx_trapout_w_data_wset_1__SEL_1 =
	     WILL_FIRE_RL_rl_exe_base_memory &&
	     wr_op1_avail_wget__80_AND_wr_op2_avail_wget__4_ETC___d335 ;
  assign MUX_tx_trapout_w_data_wset_1__SEL_2 =
	     WILL_FIRE_RL_rl_exe_base_control && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] &&
	     IF_IF_rx_instrtype_w_data_whas__68_THEN_rx_ins_ETC___d415 ;
  assign MUX_sboard_ma_lock_rd_1__VAL_2 =
	     { 4'bxxxx /* unspecified value */ ,
	       rx_rx_meta_from_stage2_first_x[96],
	       rx_rx_meta_from_stage2_first_x[4:0] } ;
  assign MUX_tx_baseout_w_data_wset_1__VAL_1 =
	     { sboard_ma_lock_rd,
	       5'd0,
	       rx_rx_meta_from_stage2_first_x[96],
	       baseoutput_rdvalue__h14506,
	       rx_rx_meta_from_stage2_first_x[4:0],
	       rg_wEpoch } ;
  assign MUX_tx_baseout_w_data_wset_1__VAL_2 =
	     { sboard_ma_lock_rd,
	       6'd0,
	       64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ,
	       5'd0,
	       rg_wEpoch } ;
  assign MUX_tx_baseout_w_data_wset_1__VAL_3 =
	     { sboard_ma_lock_rd,
	       5'd0,
	       rx_rx_meta_from_stage2_first_x[96],
	       nlogical_pc__h17468,
	       rx_rx_meta_from_stage2_first_x[4:0],
	       rg_wEpoch } ;
  assign MUX_tx_commitlog_w_data_wset_1__VAL_3 =
	     { rx_rx_commitlog_first_x[308:211],
	       2'd1,
	       memory_address__h15642,
	       fn_bypass___d116[63:0],
	       rx_rx_commitlog_first_x[80:5],
	       req_atomic_op__h15873 } ;
  assign MUX_tx_fuid_w_data_wset_1__VAL_1 =
	     { sboard_ma_lock_rd,
	       rx_rx_meta_from_stage2_first_x[96],
	       rx_rx_meta_from_stage2_first_x[70:7],
	       rx_rx_meta_from_stage2_first_x[4:0],
	       rx_rx_meta_from_stage2_first_x_BITS_6_TO_5__q2[0],
	       3'd1 } ;
  assign MUX_tx_fuid_w_data_wset_1__VAL_2 =
	     { sboard_ma_lock_rd,
	       rx_rx_meta_from_stage2_first_x[96],
	       rx_rx_meta_from_stage2_first_x[70:7],
	       rx_rx_meta_from_stage2_first_x[4:0],
	       rx_rx_meta_from_stage2_first_x_BITS_6_TO_5__q2[0],
	       3'd0 } ;
  assign MUX_tx_fuid_w_data_wset_1__VAL_3 =
	     { sboard_ma_lock_rd,
	       rx_rx_meta_from_stage2_first_x[96],
	       rx_rx_meta_from_stage2_first_x[70:7],
	       rx_rx_meta_from_stage2_first_x[4:0],
	       rx_rx_meta_from_stage2_first_x_BITS_6_TO_5__q2[0],
	       (x__h12048[1:0] == 2'd1 && memory_address__h15642[0] ||
		x__h12048[1:0] == 2'd2 &&
		memory_address__h15642[1:0] != 2'd0 ||
		x__h12048[1:0] == 2'd3 &&
		memory_address__h15642[2:0] != 3'd0) ?
		 3'd2 :
		 ((rx_rx_meta_from_stage2_first_x[73:71] == 3'd5) ?
		    3'd0 :
		    3'd3) } ;
  assign MUX_tx_fuid_w_data_wset_1__VAL_4 =
	     { sboard_ma_lock_rd,
	       rx_rx_meta_from_stage2_first_x[96],
	       rx_rx_meta_from_stage2_first_x[70:7],
	       rx_rx_meta_from_stage2_first_x[4:0],
	       rx_rx_meta_from_stage2_first_x_BITS_6_TO_5__q2[0],
	       NOT_IF_IF_rx_instrtype_w_data_whas__68_THEN_rx_ETC___d403 ?
		 3'd0 :
		 3'd2 } ;
  assign MUX_tx_fuid_w_data_wset_1__VAL_5 =
	     { sboard_ma_lock_rd,
	       rx_rx_meta_from_stage2_first_x[96],
	       rx_rx_meta_from_stage2_first_x[70:7],
	       rx_rx_meta_from_stage2_first_x[4:0],
	       rx_rx_meta_from_stage2_first_x_BITS_6_TO_5__q2[0],
	       3'd4 } ;
  assign MUX_tx_fuid_w_data_wset_1__VAL_6 =
	     { sboard_ma_lock_rd,
	       rx_rx_meta_from_stage2_first_x[96],
	       rx_rx_meta_from_stage2_first_x[70:7],
	       rx_rx_meta_from_stage2_first_x[4:0],
	       rx_rx_meta_from_stage2_first_x_BITS_6_TO_5__q2[0],
	       3'd5 } ;
  assign MUX_tx_fuid_w_data_wset_1__VAL_7 =
	     { sboard_ma_lock_rd,
	       rx_rx_meta_from_stage2_first_x[96],
	       rx_rx_meta_from_stage2_first_x[70:7],
	       rx_rx_meta_from_stage2_first_x[4:0],
	       rx_rx_meta_from_stage2_first_x_BITS_6_TO_5__q2[0],
	       3'd2 } ;
  assign MUX_tx_trapout_w_data_wset_1__VAL_1 =
	     { 1'd0, memory_cause__h15645, memory_address__h15642 } ;
  assign MUX_tx_trapout_w_data_wset_1__VAL_2 =
	     { 8'd0, rx_rx_meta_from_stage2_first_x[70:7] } ;
  assign MUX_tx_trapout_w_data_wset_1__VAL_3 =
	     { rx_rx_meta_from_stage2_first_x[81:74],
	       rx_rx_mtval_from_stage2_first_x } ;

  // probes
  assign wr_op1_avail_probe_PROBE = fn_bypass___d102[64] ;
  assign wr_op1_avail_probe_PROBE_VALID = CAN_FIRE_RL_rl_perform_fwding ;
  assign wr_op2_avail_probe_PROBE = fn_bypass___d116[64] ;
  assign wr_op2_avail_probe_PROBE_VALID = CAN_FIRE_RL_rl_perform_fwding ;
  assign wr_op3_avail_probe_PROBE = fn_bypass___d132[64] ;
  assign wr_op3_avail_probe_PROBE_VALID = CAN_FIRE_RL_rl_perform_fwding ;

  // inlined wires
  assign rx_meta_w_ena_whas =
	     WILL_FIRE_RL_rl_system_instr && fn_bypass___d102[64] ||
	     _dand2rx_meta_w_ena_EN_wset ||
	     WILL_FIRE_RL_rl_fbox && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] &&
	     wr_op3_avail_wget ||
	     WILL_FIRE_RL_rl_trap_from_prev ||
	     WILL_FIRE_RL_rl_drop_instr ;
  assign rx_mtval_w_ena_whas =
	     WILL_FIRE_RL_rl_system_instr && fn_bypass___d102[64] ||
	     _dand2rx_mtval_w_ena_EN_wset ||
	     WILL_FIRE_RL_rl_fbox && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] &&
	     wr_op3_avail_wget ||
	     WILL_FIRE_RL_rl_trap_from_prev ||
	     WILL_FIRE_RL_rl_drop_instr ;
  assign rx_instrtype_w_ena_whas =
	     WILL_FIRE_RL_rl_system_instr && fn_bypass___d102[64] ||
	     _dand2rx_instrtype_w_ena_EN_wset ||
	     WILL_FIRE_RL_rl_fbox && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] &&
	     wr_op3_avail_wget ||
	     WILL_FIRE_RL_rl_trap_from_prev ||
	     WILL_FIRE_RL_rl_drop_instr ;
  assign rx_opmeta_w_ena_whas =
	     WILL_FIRE_RL_rl_system_instr && fn_bypass___d102[64] ||
	     _dand2rx_opmeta_w_ena_EN_wset ||
	     WILL_FIRE_RL_rl_fbox && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] &&
	     wr_op3_avail_wget ||
	     WILL_FIRE_RL_rl_trap_from_prev ||
	     WILL_FIRE_RL_rl_drop_instr ;
  assign rx_commitlog_w_ena_whas =
	     WILL_FIRE_RL_rl_system_instr && fn_bypass___d102[64] ||
	     _dand2rx_commitlog_w_ena_EN_wset ||
	     WILL_FIRE_RL_rl_fbox && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] &&
	     wr_op3_avail_wget ||
	     WILL_FIRE_RL_rl_trap_from_prev ||
	     WILL_FIRE_RL_rl_drop_instr ;
  assign tx_commitlog_w_ena_whas =
	     WILL_FIRE_RL_rl_system_instr && fn_bypass___d102[64] ||
	     _dand2tx_commitlog_w_ena_EN_wset ||
	     WILL_FIRE_RL_rl_fbox && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] &&
	     wr_op3_avail_wget ||
	     WILL_FIRE_RL_rl_trap_from_prev ;
  assign wr_next_pc_wget = { 1'd1, bpu_ma_next_pc_npc } ;
  assign wr_training_data_1_wget =
	     { 1'd1,
	       rx_rx_meta_from_stage2_first_x[94],
	       rx_rx_meta_from_stage2_first_x[92:85],
	       rx_rx_meta_from_stage2_first_x[70:7],
	       jump_address__h17466,
	       state__h19503,
	       IF_IF_rx_instrtype_w_data_whas__68_THEN_rx_ins_ETC___d488,
	       rx_rx_meta_from_stage2_first_x[82] } ;
  assign wr_mispredict_ghr_1_wget =
	     { 1'd1,
	       rx_rx_meta_from_stage2_first_x[82],
	       rx_rx_meta_from_stage2_first_x[92:85] } ;
  assign wr_mispredict_ghr_1_whas =
	     WILL_FIRE_RL_rl_exe_base_control && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] &&
	     NOT_IF_IF_rx_instrtype_w_data_whas__68_THEN_rx_ETC___d403 &&
	     IF_rx_instrtype_w_data_whas__68_THEN_rx_instrt_ETC___d452 ;
  assign tx_baseout_w_ena_whas =
	     WILL_FIRE_RL_rl_exe_base_arith && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] ||
	     WILL_FIRE_RL_rl_exe_base_memory && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] &&
	     NOT_IF_rx_meta_w_data_whas__46_THEN_rx_meta_w__ETC___d339 ||
	     WILL_FIRE_RL_rl_exe_base_control && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] &&
	     NOT_IF_IF_rx_instrtype_w_data_whas__68_THEN_rx_ETC___d403 ;
  assign tx_trapout_w_ena_whas =
	     WILL_FIRE_RL_rl_exe_base_memory &&
	     wr_op1_avail_wget__80_AND_wr_op2_avail_wget__4_ETC___d335 ||
	     WILL_FIRE_RL_rl_exe_base_control && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] &&
	     IF_IF_rx_instrtype_w_data_whas__68_THEN_rx_ins_ETC___d415 ||
	     WILL_FIRE_RL_rl_trap_from_prev ;
  assign tx_memoryout_w_ena_whas =
	     WILL_FIRE_RL_rl_exe_base_memory && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] &&
	     (x__h12048[1:0] != 2'd1 || !memory_address__h15642[0]) &&
	     (x__h12048[1:0] != 2'd2 ||
	      memory_address__h15642[1:0] == 2'd0) &&
	     (x__h12048[1:0] != 2'd3 ||
	      memory_address__h15642[2:0] == 3'd0) &&
	     rx_rx_meta_from_stage2_first_x[73:71] != 3'd5 ;
  assign tx_fuid_w_ena_whas =
	     WILL_FIRE_RL_rl_system_instr && fn_bypass___d102[64] ||
	     _dand2tx_fuid_w_ena_EN_wset ||
	     WILL_FIRE_RL_rl_fbox && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] &&
	     wr_op3_avail_wget ||
	     WILL_FIRE_RL_rl_trap_from_prev ;
  assign wr_op3_avail_wget =
	     !rx_rx_opmeta_from_stage2_first_x[20] || fn_bypass___d132[64] ;
  assign wr_flush_from_exe_wget =
	     IF_rx_instrtype_w_data_whas__68_THEN_rx_instrt_ETC___d452 &&
	     NOT_IF_IF_rx_instrtype_w_data_whas__68_THEN_rx_ETC___d403 ;
  assign wr_count_branches_whas =
	     WILL_FIRE_RL_rl_exe_base_control && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] &&
	     rx_rx_instrtype_from_stage2_first_x == 4'd2 ;
  assign wr_count_jumps_whas =
	     WILL_FIRE_RL_rl_exe_base_control && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] &&
	     rx_rx_instrtype_from_stage2_first_x != 4'd2 ;
  assign wr_count_rawstalls_whas =
	     WILL_FIRE_RL_rl_system_instr && !fn_bypass___d102[64] ||
	     _dand2wr_count_rawstalls_EN_wset ||
	     WILL_FIRE_RL_rl_fbox &&
	     (!fn_bypass___d102[64] || !fn_bypass___d116[64] ||
	      !wr_op3_avail_wget) ;

  // register rg_eEpoch
  assign rg_eEpoch_D_IN =
	     (IF_rx_instrtype_w_data_whas__68_THEN_rx_instrt_ETC___d452 &&
	      NOT_IF_IF_rx_instrtype_w_data_whas__68_THEN_rx_ETC___d403) ^
	     rg_eEpoch ;
  assign rg_eEpoch_EN = MUX_tx_fuid_w_data_wset_1__SEL_4 ;

  // register rg_wEpoch
  assign rg_wEpoch_D_IN = ~rg_wEpoch ;
  assign rg_wEpoch_EN = EN_common_ma_update_wEpoch ;

  // register wr_mispredict_ghr
  assign wr_mispredict_ghr_D_IN =
	     wr_mispredict_ghr_1_whas ?
	       wr_mispredict_ghr_1_wget :
	       { 1'd0, 9'bxxxxxxxxx /* unspecified value */  } ;
  assign wr_mispredict_ghr_EN = 1'd1 ;

  // register wr_training_data
  assign wr_training_data_D_IN =
	     MUX_tx_fuid_w_data_wset_1__SEL_4 ?
	       wr_training_data_1_wget :
	       { 1'd0,
		 142'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign wr_training_data_EN = 1'd1 ;

  // submodule sboard
  always@(MUX_rx_commitlog_w_ena_wset_1__SEL_1 or
	  MUX_sboard_ma_lock_rd_1__VAL_2 or
	  MUX_sboard_ma_lock_rd_1__SEL_2 or
	  RDY_float_mv_fbox_inputs or WILL_FIRE_RL_rl_trap_from_prev)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rx_commitlog_w_ena_wset_1__SEL_1:
	  sboard_ma_lock_rd_lock = MUX_sboard_ma_lock_rd_1__VAL_2;
      MUX_sboard_ma_lock_rd_1__SEL_2:
	  sboard_ma_lock_rd_lock = MUX_sboard_ma_lock_rd_1__VAL_2;
      RDY_float_mv_fbox_inputs:
	  sboard_ma_lock_rd_lock = MUX_sboard_ma_lock_rd_1__VAL_2;
      WILL_FIRE_RL_rl_trap_from_prev:
	  sboard_ma_lock_rd_lock = MUX_sboard_ma_lock_rd_1__VAL_2;
      default: sboard_ma_lock_rd_lock =
		   10'bxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign sboard_ma_release_rd_rls =
	     { common_ma_sb_release_commit[74:70],
	       common_ma_sb_release_commit[68:64] } ;
  assign sboard_EN_ma_lock_rd =
	     WILL_FIRE_RL_rl_system_instr && fn_bypass___d102[64] ||
	     _dand2sboard_EN_ma_lock_rd ||
	     WILL_FIRE_RL_rl_fbox && fn_bypass___d102[64] &&
	     fn_bypass___d116[64] &&
	     wr_op3_avail_wget ||
	     WILL_FIRE_RL_rl_trap_from_prev ;
  assign sboard_EN_ma_release_rd = EN_common_ma_sb_release ;

  // remaining internal signals
  module_fn_bypass instance_fn_bypass_2(.fn_bypass_req({ sb_rs2id__h6271,
							 rx_rx_opmeta_from_stage2_first_x[12:10] ==
							 3'd4,
							 { x_wget_rs2addr__h6348,
							   x__h10136,
							   baseoutput_epochs__h18186 } }),
					.fn_bypass_fwd({ rf_ma_op2_i,
							 bypass_ma_bypass_fwd }),
					.fn_bypass(fn_bypass___d116));
  module_fn_bypass instance_fn_bypass_3(.fn_bypass_req({ sb_rs1id__h6270,
							 rx_rx_opmeta_from_stage2_first_x[14:13] ==
							 2'd2,
							 { x_wget_rs1addr__h6347,
							   x__h9244,
							   baseoutput_epochs__h18186 } }),
					.fn_bypass_fwd({ rf_ma_op1_i,
							 bypass_ma_bypass_fwd }),
					.fn_bypass(fn_bypass___d102));
  module_fn_bru instance_fn_bru_0(.fn_bru_op1(x__read__h4398),
				  .fn_bru_op2(x_wget__h4456),
				  .fn_bru_fn(x__h12048[6:3]),
				  .fn_bru(btaken__h17469));
  module_fn_base_alu instance_fn_base_alu_1(.fn_base_alu_op1(x__read__h4398),
					    .fn_base_alu_op2(x_wget__h4456),
					    .fn_base_alu_fn(x__h12048[6:3]),
					    .fn_base_alu_pc(x__h12037),
					    .fn_base_alu_op1pc(rx_rx_opmeta_from_stage2_first_x[14:13] ==
							       2'd1),
					    .fn_base_alu_wordop(rx_rx_meta_from_stage2_first_x[95]),
					    .fn_base_alu(alu_result__h14330));
  module_fn_bypass instance_fn_bypass_4(.fn_bypass_req({ sb_rs3id__h10729,
							 rx_rx_opmeta_from_stage2_first_x[20:15],
							 { x__h10945,
							   baseoutput_epochs__h18186 } }),
					.fn_bypass_fwd({ rf_ma_op3_i,
							 bypass_ma_bypass_fwd }),
					.fn_bypass(fn_bypass___d132));
  assign IF_IF_rx_instrtype_w_data_whas__68_THEN_rx_ins_ETC___d415 =
	     jump_address__h17466[1] && !common_ma_csr_misa_c_m &&
	     (rx_rx_instrtype_from_stage2_first_x == 4'd4 ||
	      rx_rx_instrtype_from_stage2_first_x == 4'd3 ||
	      rx_rx_instrtype_from_stage2_first_x == 4'd2 && btaken__h17469) ;
  assign IF_IF_rx_instrtype_w_data_whas__68_THEN_rx_ins_ETC___d488 =
	     ((rx_rx_instrtype_from_stage2_first_x == 4'd3 ||
	       rx_rx_instrtype_from_stage2_first_x == 4'd4) &&
	      rx_rx_meta_from_stage2_first_x[4:0] == 5'd1) ?
	       2'd2 :
	       ((rx_rx_instrtype_from_stage2_first_x == 4'd4 &&
		 x_wget_rs1addr__h6347[4:3] == 2'b0 &&
		 x_wget_rs1addr__h6347[1:0] == 2'b01) ?
		  2'd3 :
		  CASE_rx_rx_instrtype_from_stage2_first_x_3_1_4_ETC__q7) ;
  assign IF_rx_instrtype_w_data_whas__68_THEN_rx_instrt_ETC___d452 =
	     rx_rx_instrtype_from_stage2_first_x == 4'd2 &&
	     btaken__h17469 !=
	     rx_rx_meta_from_stage2_first_x_BITS_84_TO_83__q8[1] ||
	     (rx_rx_instrtype_from_stage2_first_x == 4'd4 ||
	      rx_rx_instrtype_from_stage2_first_x == 4'd3) &&
	     _theResult_____5__h17475 != base__h17436 ;
  assign IF_rx_instrtype_w_data_whas__68_THEN_rx_instrt_ETC___d517 =
	     rx_rx_instrtype_from_stage2_first_x == 4'd9 &&
	     rg_eEpoch_read__44_CONCAT_rg_wEpoch_6_45_EQ_IF_ETC___d150 &&
	     (!x__h12048[2] && muldiv_ma_mbox_ready_rdy[1] ||
	      x__h12048[2] && muldiv_ma_mbox_ready_rdy[0]) ;
  assign NOT_IF_IF_rx_instrtype_w_data_whas__68_THEN_rx_ETC___d403 =
	     !jump_address__h17466[1] || common_ma_csr_misa_c_m ||
	     rx_rx_instrtype_from_stage2_first_x != 4'd4 &&
	     rx_rx_instrtype_from_stage2_first_x != 4'd3 &&
	     (rx_rx_instrtype_from_stage2_first_x != 4'd2 ||
	      !btaken__h17469) ;
  assign NOT_IF_rx_meta_w_data_whas__46_THEN_rx_meta_w__ETC___d339 =
	     (x__h12048[1:0] != 2'd1 || !memory_address__h15642[0]) &&
	     (x__h12048[1:0] != 2'd2 ||
	      memory_address__h15642[1:0] == 2'd0) &&
	     (x__h12048[1:0] != 2'd3 ||
	      memory_address__h15642[2:0] == 3'd0) &&
	     rx_rx_meta_from_stage2_first_x[73:71] == 3'd5 ;
  assign _dand2rx_commitlog_w_ena_EN_wset =
	     (WILL_FIRE_RL_rl_mbox || WILL_FIRE_RL_rl_exe_base_control ||
	      WILL_FIRE_RL_rl_exe_base_memory ||
	      WILL_FIRE_RL_rl_exe_base_arith) &&
	     fn_bypass___d102[64] &&
	     fn_bypass___d116[64] ;
  assign _dand2rx_instrtype_w_ena_EN_wset =
	     (WILL_FIRE_RL_rl_mbox || WILL_FIRE_RL_rl_exe_base_control ||
	      WILL_FIRE_RL_rl_exe_base_memory ||
	      WILL_FIRE_RL_rl_exe_base_arith) &&
	     fn_bypass___d102[64] &&
	     fn_bypass___d116[64] ;
  assign _dand2rx_meta_w_ena_EN_wset =
	     (WILL_FIRE_RL_rl_mbox || WILL_FIRE_RL_rl_exe_base_control ||
	      WILL_FIRE_RL_rl_exe_base_memory ||
	      WILL_FIRE_RL_rl_exe_base_arith) &&
	     fn_bypass___d102[64] &&
	     fn_bypass___d116[64] ;
  assign _dand2rx_mtval_w_ena_EN_wset =
	     (WILL_FIRE_RL_rl_mbox || WILL_FIRE_RL_rl_exe_base_control ||
	      WILL_FIRE_RL_rl_exe_base_memory ||
	      WILL_FIRE_RL_rl_exe_base_arith) &&
	     fn_bypass___d102[64] &&
	     fn_bypass___d116[64] ;
  assign _dand2rx_opmeta_w_ena_EN_wset =
	     (WILL_FIRE_RL_rl_mbox || WILL_FIRE_RL_rl_exe_base_control ||
	      WILL_FIRE_RL_rl_exe_base_memory ||
	      WILL_FIRE_RL_rl_exe_base_arith) &&
	     fn_bypass___d102[64] &&
	     fn_bypass___d116[64] ;
  assign _dand2sboard_EN_ma_lock_rd =
	     (WILL_FIRE_RL_rl_mbox || WILL_FIRE_RL_rl_exe_base_control ||
	      WILL_FIRE_RL_rl_exe_base_memory ||
	      WILL_FIRE_RL_rl_exe_base_arith) &&
	     fn_bypass___d102[64] &&
	     fn_bypass___d116[64] ;
  assign _dand2tx_commitlog_w_ena_EN_wset =
	     (WILL_FIRE_RL_rl_mbox || WILL_FIRE_RL_rl_exe_base_control ||
	      WILL_FIRE_RL_rl_exe_base_memory ||
	      WILL_FIRE_RL_rl_exe_base_arith) &&
	     fn_bypass___d102[64] &&
	     fn_bypass___d116[64] ;
  assign _dand2tx_fuid_w_ena_EN_wset =
	     (WILL_FIRE_RL_rl_mbox || WILL_FIRE_RL_rl_exe_base_control ||
	      WILL_FIRE_RL_rl_exe_base_memory ||
	      WILL_FIRE_RL_rl_exe_base_arith) &&
	     fn_bypass___d102[64] &&
	     fn_bypass___d116[64] ;
  assign _dand2wr_count_rawstalls_EN_wset =
	     (WILL_FIRE_RL_rl_mbox || WILL_FIRE_RL_rl_exe_base_control ||
	      WILL_FIRE_RL_rl_exe_base_arith) &&
	     (!fn_bypass___d102[64] || !fn_bypass___d116[64]) ;
  assign _theResult_____2__h19490 =
	     btaken__h17469 ?
	       CASE_rx_rx_meta_from_stage2_first_x_BITS_84_TO_ETC__q5 :
	       CASE_rx_rx_meta_from_stage2_first_x_BITS_84_TO_ETC__q6 ;
  assign alu_result4330_BITS_31_TO_0__q4 = alu_result__h14330[31:0] ;
  assign base__h17436 =
	     (rx_rx_instrtype_from_stage2_first_x == 4'd4) ?
	       fn_bypass___d102[63:0] :
	       rx_rx_meta_from_stage2_first_x[70:7] ;
  assign baseoutput_epochs__h18186 = rg_wEpoch ;
  assign baseoutput_rdvalue__h14506 =
	     rx_rx_meta_from_stage2_first_x[95] ?
	       { {32{alu_result4330_BITS_31_TO_0__q4[31]}},
		 alu_result4330_BITS_31_TO_0__q4 } :
	       alu_result__h14330 ;
  assign curr_epochs__h5467 = { rg_eEpoch, rg_wEpoch } ;
  assign i__h10946 = { 1'b1, rx_rx_opmeta_from_stage2_first_x[19:15] } ;
  assign i__h9245 =
	     { rx_rx_opmeta_from_stage2_first_x[14:13] == 2'd2,
	       rx_rx_opmeta_from_stage2_first_x[9:5] } ;
  assign incr__h17467 = rx_rx_meta_from_stage2_first_x[94] ? 64'd2 : 64'd4 ;
  assign jump_address__h17466 =
	     base__h17436 + rf_ma_op3_i[64:1] &
	     { 63'h7FFFFFFFFFFFFFFF,
	       ~(rx_rx_instrtype_from_stage2_first_x == 4'd4) } ;
  assign memory_address__h15642 = fn_bypass___d102[63:0] + rf_ma_op3_i[64:1] ;
  assign memory_cause__h15645 =
	     (rx_rx_meta_from_stage2_first_x[73:71] == 3'd0) ? 7'd4 : 7'd6 ;
  assign nanboxing__h15646 =
	     x__h12048[1:0] == 2'd2 && rx_rx_meta_from_stage2_first_x[96] ;
  assign nextpc__h17670 = wr_next_pc_wget[63:0] - rf_ma_op3_i[64:1] ;
  assign nextpc__h17738 =
	     (wr_next_pc_wget[63:0] |
	      { 63'd0, rx_rx_instrtype_from_stage2_first_x == 4'd4 }) -
	     rf_ma_op3_i[64:1] ;
  assign nextpc__h17799 =
	     wr_next_pc_wget[63:0] -
	     (rf_ma_op3_i[64:1] &
	      { 63'h7FFFFFFFFFFFFFFF,
		~(rx_rx_instrtype_from_stage2_first_x == 4'd4) }) ;
  assign nlogical_pc__h17468 =
	     rx_rx_meta_from_stage2_first_x[70:7] + incr__h17467 ;
  assign req_atomic_op__h15873 = { x__h12048[0], x__h12048[6:3] } ;
  assign rg_eEpoch_read__44_CONCAT_rg_wEpoch_6_45_EQ_IF_ETC___d150 =
	     curr_epochs__h5467 == rx_rx_meta_from_stage2_first_x[6:5] ;
  assign rx_commitlog_w_rdy_wget__39_AND_tx_fuid_w_rdy__ETC___d365 =
	     rx_rx_commitlog_first_deq_rdy_b &&
	     tx_tx_fuid_to_stage4_enq_rdy_b &&
	     tx_tx_commitlog_enq_rdy_b &&
	     CAN_FIRE_RL_rl_perform_fwding &&
	     CAN_FIRE_RL_rl_perform_fwding &&
	     tx_tx_baseout_to_stage4_enq_rdy_b &&
	     tx_tx_trapout_to_stage4_enq_rdy_b ;
  assign rx_mtval_w_rdy_wget__37_AND_rx_commitlog_w_rdy_ETC___d230 =
	     rx_rx_mtval_from_stage2_first_deq_rdy_b &&
	     rx_rx_commitlog_first_deq_rdy_b &&
	     CAN_FIRE_RL_rl_perform_fwding &&
	     tx_tx_fuid_to_stage4_enq_rdy_b &&
	     tx_tx_commitlog_enq_rdy_b &&
	     tx_tx_baseout_to_stage4_enq_rdy_b &&
	     CAN_FIRE_RL_rl_perform_fwding ;
  assign rx_mtval_w_rdy_wget__37_AND_rx_commitlog_w_rdy_ETC___d531 =
	     rx_rx_mtval_from_stage2_first_deq_rdy_b &&
	     rx_rx_commitlog_first_deq_rdy_b &&
	     CAN_FIRE_RL_rl_perform_fwding &&
	     tx_tx_fuid_to_stage4_enq_rdy_b &&
	     tx_tx_commitlog_enq_rdy_b &&
	     CAN_FIRE_RL_rl_perform_fwding &&
	     CAN_FIRE_RL_rl_perform_fwding ;
  assign rx_opmeta_w_rdy_wget__0_AND_rx_mtval_w_rdy_wge_ETC___d212 =
	     rx_rx_opmeta_from_stage2_first_deq_rdy_b &&
	     rx_rx_mtval_from_stage2_first_deq_rdy_b &&
	     rx_rx_instrtype_from_stage2_first_deq_rdy_b &&
	     rx_rx_commitlog_first_deq_rdy_b &&
	     tx_tx_fuid_to_stage4_enq_rdy_b &&
	     tx_tx_commitlog_enq_rdy_b &&
	     tx_tx_trapout_to_stage4_enq_rdy_b ;
  assign rx_opmeta_w_rdy_wget__0_AND_rx_mtval_w_rdy_wge_ETC___d502 =
	     rx_rx_opmeta_from_stage2_first_deq_rdy_b &&
	     rx_rx_mtval_from_stage2_first_deq_rdy_b &&
	     rx_rx_commitlog_first_deq_rdy_b &&
	     CAN_FIRE_RL_rl_perform_fwding &&
	     tx_tx_fuid_to_stage4_enq_rdy_b &&
	     tx_tx_commitlog_enq_rdy_b &&
	     CAN_FIRE_RL_rl_perform_fwding ;
  assign rx_rx_meta_from_stage2_first_x_BITS_6_TO_5__q2 =
	     rx_rx_meta_from_stage2_first_x[6:5] ;
  assign rx_rx_meta_from_stage2_first_x_BITS_73_TO_71__q3 =
	     rx_rx_meta_from_stage2_first_x[73:71] ;
  assign rx_rx_meta_from_stage2_first_x_BITS_84_TO_83__q8 =
	     rx_rx_meta_from_stage2_first_x[84:83] ;
  assign sboardmv_board_BITS_319_TO_256__q1 = sboard_mv_board[319:256] ;
  assign state__h19503 =
	     (rx_rx_instrtype_from_stage2_first_x == 4'd2 &&
	      (!jump_address__h17466[1] || common_ma_csr_misa_c_m ||
	       !btaken__h17469)) ?
	       _theResult_____2__h19490 :
	       2'd3 ;
  assign systemout_rs1_imm__h11975 =
	     x__h12048[2] ?
	       { 59'd0, rf_ma_op3_i[20:16] } :
	       fn_bypass___d102[63:0] ;
  assign tx_fuid_w_rdy_wget__55_AND_tx_commitlog_w_rdy__ETC___d269 =
	     tx_tx_fuid_to_stage4_enq_rdy_b && tx_tx_commitlog_enq_rdy_b &&
	     CAN_FIRE_RL_rl_perform_fwding &&
	     tx_tx_trapout_to_stage4_enq_rdy_b &&
	     tx_tx_baseout_to_stage4_enq_rdy_b &&
	     tx_tx_memoryout_to_stage4_enq_rdy_b ;
  assign wr_op1_avail_wget__80_AND_wr_op2_avail_wget__4_ETC___d306 =
	     fn_bypass___d102[64] && fn_bypass___d116[64] &&
	     (x__h12048[1:0] != 2'd1 || !memory_address__h15642[0]) &&
	     (x__h12048[1:0] != 2'd2 ||
	      memory_address__h15642[1:0] == 2'd0) &&
	     (x__h12048[1:0] != 2'd3 || memory_address__h15642[2:0] == 3'd0) ;
  assign wr_op1_avail_wget__80_AND_wr_op2_avail_wget__4_ETC___d335 =
	     fn_bypass___d102[64] && fn_bypass___d116[64] &&
	     (x__h12048[1:0] == 2'd1 && memory_address__h15642[0] ||
	      x__h12048[1:0] == 2'd2 && memory_address__h15642[1:0] != 2'd0 ||
	      x__h12048[1:0] == 2'd3 && memory_address__h15642[2:0] != 3'd0) ;
  assign wr_op1_avail_whas__53_AND_rx_instrtype_w_rdy_w_ETC___d371 =
	     CAN_FIRE_RL_rl_perform_fwding &&
	     rx_rx_instrtype_from_stage2_first_deq_rdy_b &&
	     CAN_FIRE_RL_rl_perform_fwding &&
	     rx_rx_opmeta_from_stage2_first_deq_rdy_b &&
	     rx_rx_mtval_from_stage2_first_deq_rdy_b &&
	     rx_commitlog_w_rdy_wget__39_AND_tx_fuid_w_rdy__ETC___d365 ;
  assign wr_op2_avail_whas__22_AND_rx_opmeta_w_rdy_wget_ETC___d275 =
	     CAN_FIRE_RL_rl_perform_fwding &&
	     rx_rx_opmeta_from_stage2_first_deq_rdy_b &&
	     rx_rx_mtval_from_stage2_first_deq_rdy_b &&
	     rx_rx_commitlog_first_deq_rdy_b &&
	     CAN_FIRE_RL_rl_perform_fwding &&
	     tx_fuid_w_rdy_wget__55_AND_tx_commitlog_w_rdy__ETC___d269 ;
  assign wr_op3_whas__4_AND_rx_mtval_w_rdy_wget__37_AND_ETC___d163 =
	     rx_rx_mtval_from_stage2_first_deq_rdy_b &&
	     rx_rx_commitlog_first_deq_rdy_b &&
	     tx_tx_systemout_to_stage4_enq_rdy_b &&
	     tx_tx_fuid_to_stage4_enq_rdy_b &&
	     tx_tx_commitlog_enq_rdy_b &&
	     CAN_FIRE_RL_rl_perform_fwding ;
  assign x__h10027 =
	     { rx_rx_opmeta_from_stage2_first_x[12:10] == 3'd4,
	       rx_rx_opmeta_from_stage2_first_x[4:0] } ;
  assign x__h10136 = sboardmv_board_BITS_319_TO_256__q1[x__h10027] ;
  assign x__h10945 = sboardmv_board_BITS_319_TO_256__q1[i__h10946] ;
  assign x__h12037 = rx_rx_meta_from_stage2_first_x[70:7] ;
  assign x__h12048 = rx_rx_meta_from_stage2_first_x[80:74] ;
  assign x__h15946 =
	     common_ma_mstatus_mstatus[17] ?
	       common_ma_mstatus_mstatus[12:11] :
	       common_ma_priv_priv ;
  assign x__h17607 = { base__h17436[0], rf_ma_op3_i[1] } ;
  assign x__h9244 = sboardmv_board_BITS_319_TO_256__q1[i__h9245] ;
  assign x__read__h4398 = fn_bypass___d102[63:0] ;
  assign x_wget__h4456 = fn_bypass___d116[63:0] ;
  assign x_wget__h5177 =
	     (rx_rx_instrtype_from_stage2_first_x == 4'd2 &&
	      !btaken__h17469) ?
	       nlogical_pc__h17468 :
	       jump_address__h17466 ;
  assign x_wget__h5806 = 1'd1 ;
  assign x_wget_rs1addr__h6347 = rx_rx_opmeta_from_stage2_first_x[9:5] ;
  assign x_wget_rs2addr__h6348 = rx_rx_opmeta_from_stage2_first_x[4:0] ;
  always@(rx_rx_opmeta_from_stage2_first_x or sboard_mv_board)
  begin
    case (rx_rx_opmeta_from_stage2_first_x[20:15])
      6'd0: sb_rs3id__h10729 = sboard_mv_board[3:0];
      6'd1: sb_rs3id__h10729 = sboard_mv_board[7:4];
      6'd2: sb_rs3id__h10729 = sboard_mv_board[11:8];
      6'd3: sb_rs3id__h10729 = sboard_mv_board[15:12];
      6'd4: sb_rs3id__h10729 = sboard_mv_board[19:16];
      6'd5: sb_rs3id__h10729 = sboard_mv_board[23:20];
      6'd6: sb_rs3id__h10729 = sboard_mv_board[27:24];
      6'd7: sb_rs3id__h10729 = sboard_mv_board[31:28];
      6'd8: sb_rs3id__h10729 = sboard_mv_board[35:32];
      6'd9: sb_rs3id__h10729 = sboard_mv_board[39:36];
      6'd10: sb_rs3id__h10729 = sboard_mv_board[43:40];
      6'd11: sb_rs3id__h10729 = sboard_mv_board[47:44];
      6'd12: sb_rs3id__h10729 = sboard_mv_board[51:48];
      6'd13: sb_rs3id__h10729 = sboard_mv_board[55:52];
      6'd14: sb_rs3id__h10729 = sboard_mv_board[59:56];
      6'd15: sb_rs3id__h10729 = sboard_mv_board[63:60];
      6'd16: sb_rs3id__h10729 = sboard_mv_board[67:64];
      6'd17: sb_rs3id__h10729 = sboard_mv_board[71:68];
      6'd18: sb_rs3id__h10729 = sboard_mv_board[75:72];
      6'd19: sb_rs3id__h10729 = sboard_mv_board[79:76];
      6'd20: sb_rs3id__h10729 = sboard_mv_board[83:80];
      6'd21: sb_rs3id__h10729 = sboard_mv_board[87:84];
      6'd22: sb_rs3id__h10729 = sboard_mv_board[91:88];
      6'd23: sb_rs3id__h10729 = sboard_mv_board[95:92];
      6'd24: sb_rs3id__h10729 = sboard_mv_board[99:96];
      6'd25: sb_rs3id__h10729 = sboard_mv_board[103:100];
      6'd26: sb_rs3id__h10729 = sboard_mv_board[107:104];
      6'd27: sb_rs3id__h10729 = sboard_mv_board[111:108];
      6'd28: sb_rs3id__h10729 = sboard_mv_board[115:112];
      6'd29: sb_rs3id__h10729 = sboard_mv_board[119:116];
      6'd30: sb_rs3id__h10729 = sboard_mv_board[123:120];
      6'd31: sb_rs3id__h10729 = sboard_mv_board[127:124];
      6'd32: sb_rs3id__h10729 = sboard_mv_board[131:128];
      6'd33: sb_rs3id__h10729 = sboard_mv_board[135:132];
      6'd34: sb_rs3id__h10729 = sboard_mv_board[139:136];
      6'd35: sb_rs3id__h10729 = sboard_mv_board[143:140];
      6'd36: sb_rs3id__h10729 = sboard_mv_board[147:144];
      6'd37: sb_rs3id__h10729 = sboard_mv_board[151:148];
      6'd38: sb_rs3id__h10729 = sboard_mv_board[155:152];
      6'd39: sb_rs3id__h10729 = sboard_mv_board[159:156];
      6'd40: sb_rs3id__h10729 = sboard_mv_board[163:160];
      6'd41: sb_rs3id__h10729 = sboard_mv_board[167:164];
      6'd42: sb_rs3id__h10729 = sboard_mv_board[171:168];
      6'd43: sb_rs3id__h10729 = sboard_mv_board[175:172];
      6'd44: sb_rs3id__h10729 = sboard_mv_board[179:176];
      6'd45: sb_rs3id__h10729 = sboard_mv_board[183:180];
      6'd46: sb_rs3id__h10729 = sboard_mv_board[187:184];
      6'd47: sb_rs3id__h10729 = sboard_mv_board[191:188];
      6'd48: sb_rs3id__h10729 = sboard_mv_board[195:192];
      6'd49: sb_rs3id__h10729 = sboard_mv_board[199:196];
      6'd50: sb_rs3id__h10729 = sboard_mv_board[203:200];
      6'd51: sb_rs3id__h10729 = sboard_mv_board[207:204];
      6'd52: sb_rs3id__h10729 = sboard_mv_board[211:208];
      6'd53: sb_rs3id__h10729 = sboard_mv_board[215:212];
      6'd54: sb_rs3id__h10729 = sboard_mv_board[219:216];
      6'd55: sb_rs3id__h10729 = sboard_mv_board[223:220];
      6'd56: sb_rs3id__h10729 = sboard_mv_board[227:224];
      6'd57: sb_rs3id__h10729 = sboard_mv_board[231:228];
      6'd58: sb_rs3id__h10729 = sboard_mv_board[235:232];
      6'd59: sb_rs3id__h10729 = sboard_mv_board[239:236];
      6'd60: sb_rs3id__h10729 = sboard_mv_board[243:240];
      6'd61: sb_rs3id__h10729 = sboard_mv_board[247:244];
      6'd62: sb_rs3id__h10729 = sboard_mv_board[251:248];
      6'd63: sb_rs3id__h10729 = sboard_mv_board[255:252];
    endcase
  end
  always@(i__h9245 or sboard_mv_board)
  begin
    case (i__h9245)
      6'd0: sb_rs1id__h6270 = sboard_mv_board[3:0];
      6'd1: sb_rs1id__h6270 = sboard_mv_board[7:4];
      6'd2: sb_rs1id__h6270 = sboard_mv_board[11:8];
      6'd3: sb_rs1id__h6270 = sboard_mv_board[15:12];
      6'd4: sb_rs1id__h6270 = sboard_mv_board[19:16];
      6'd5: sb_rs1id__h6270 = sboard_mv_board[23:20];
      6'd6: sb_rs1id__h6270 = sboard_mv_board[27:24];
      6'd7: sb_rs1id__h6270 = sboard_mv_board[31:28];
      6'd8: sb_rs1id__h6270 = sboard_mv_board[35:32];
      6'd9: sb_rs1id__h6270 = sboard_mv_board[39:36];
      6'd10: sb_rs1id__h6270 = sboard_mv_board[43:40];
      6'd11: sb_rs1id__h6270 = sboard_mv_board[47:44];
      6'd12: sb_rs1id__h6270 = sboard_mv_board[51:48];
      6'd13: sb_rs1id__h6270 = sboard_mv_board[55:52];
      6'd14: sb_rs1id__h6270 = sboard_mv_board[59:56];
      6'd15: sb_rs1id__h6270 = sboard_mv_board[63:60];
      6'd16: sb_rs1id__h6270 = sboard_mv_board[67:64];
      6'd17: sb_rs1id__h6270 = sboard_mv_board[71:68];
      6'd18: sb_rs1id__h6270 = sboard_mv_board[75:72];
      6'd19: sb_rs1id__h6270 = sboard_mv_board[79:76];
      6'd20: sb_rs1id__h6270 = sboard_mv_board[83:80];
      6'd21: sb_rs1id__h6270 = sboard_mv_board[87:84];
      6'd22: sb_rs1id__h6270 = sboard_mv_board[91:88];
      6'd23: sb_rs1id__h6270 = sboard_mv_board[95:92];
      6'd24: sb_rs1id__h6270 = sboard_mv_board[99:96];
      6'd25: sb_rs1id__h6270 = sboard_mv_board[103:100];
      6'd26: sb_rs1id__h6270 = sboard_mv_board[107:104];
      6'd27: sb_rs1id__h6270 = sboard_mv_board[111:108];
      6'd28: sb_rs1id__h6270 = sboard_mv_board[115:112];
      6'd29: sb_rs1id__h6270 = sboard_mv_board[119:116];
      6'd30: sb_rs1id__h6270 = sboard_mv_board[123:120];
      6'd31: sb_rs1id__h6270 = sboard_mv_board[127:124];
      6'd32: sb_rs1id__h6270 = sboard_mv_board[131:128];
      6'd33: sb_rs1id__h6270 = sboard_mv_board[135:132];
      6'd34: sb_rs1id__h6270 = sboard_mv_board[139:136];
      6'd35: sb_rs1id__h6270 = sboard_mv_board[143:140];
      6'd36: sb_rs1id__h6270 = sboard_mv_board[147:144];
      6'd37: sb_rs1id__h6270 = sboard_mv_board[151:148];
      6'd38: sb_rs1id__h6270 = sboard_mv_board[155:152];
      6'd39: sb_rs1id__h6270 = sboard_mv_board[159:156];
      6'd40: sb_rs1id__h6270 = sboard_mv_board[163:160];
      6'd41: sb_rs1id__h6270 = sboard_mv_board[167:164];
      6'd42: sb_rs1id__h6270 = sboard_mv_board[171:168];
      6'd43: sb_rs1id__h6270 = sboard_mv_board[175:172];
      6'd44: sb_rs1id__h6270 = sboard_mv_board[179:176];
      6'd45: sb_rs1id__h6270 = sboard_mv_board[183:180];
      6'd46: sb_rs1id__h6270 = sboard_mv_board[187:184];
      6'd47: sb_rs1id__h6270 = sboard_mv_board[191:188];
      6'd48: sb_rs1id__h6270 = sboard_mv_board[195:192];
      6'd49: sb_rs1id__h6270 = sboard_mv_board[199:196];
      6'd50: sb_rs1id__h6270 = sboard_mv_board[203:200];
      6'd51: sb_rs1id__h6270 = sboard_mv_board[207:204];
      6'd52: sb_rs1id__h6270 = sboard_mv_board[211:208];
      6'd53: sb_rs1id__h6270 = sboard_mv_board[215:212];
      6'd54: sb_rs1id__h6270 = sboard_mv_board[219:216];
      6'd55: sb_rs1id__h6270 = sboard_mv_board[223:220];
      6'd56: sb_rs1id__h6270 = sboard_mv_board[227:224];
      6'd57: sb_rs1id__h6270 = sboard_mv_board[231:228];
      6'd58: sb_rs1id__h6270 = sboard_mv_board[235:232];
      6'd59: sb_rs1id__h6270 = sboard_mv_board[239:236];
      6'd60: sb_rs1id__h6270 = sboard_mv_board[243:240];
      6'd61: sb_rs1id__h6270 = sboard_mv_board[247:244];
      6'd62: sb_rs1id__h6270 = sboard_mv_board[251:248];
      6'd63: sb_rs1id__h6270 = sboard_mv_board[255:252];
    endcase
  end
  always@(x__h10027 or sboard_mv_board)
  begin
    case (x__h10027)
      6'd0: sb_rs2id__h6271 = sboard_mv_board[3:0];
      6'd1: sb_rs2id__h6271 = sboard_mv_board[7:4];
      6'd2: sb_rs2id__h6271 = sboard_mv_board[11:8];
      6'd3: sb_rs2id__h6271 = sboard_mv_board[15:12];
      6'd4: sb_rs2id__h6271 = sboard_mv_board[19:16];
      6'd5: sb_rs2id__h6271 = sboard_mv_board[23:20];
      6'd6: sb_rs2id__h6271 = sboard_mv_board[27:24];
      6'd7: sb_rs2id__h6271 = sboard_mv_board[31:28];
      6'd8: sb_rs2id__h6271 = sboard_mv_board[35:32];
      6'd9: sb_rs2id__h6271 = sboard_mv_board[39:36];
      6'd10: sb_rs2id__h6271 = sboard_mv_board[43:40];
      6'd11: sb_rs2id__h6271 = sboard_mv_board[47:44];
      6'd12: sb_rs2id__h6271 = sboard_mv_board[51:48];
      6'd13: sb_rs2id__h6271 = sboard_mv_board[55:52];
      6'd14: sb_rs2id__h6271 = sboard_mv_board[59:56];
      6'd15: sb_rs2id__h6271 = sboard_mv_board[63:60];
      6'd16: sb_rs2id__h6271 = sboard_mv_board[67:64];
      6'd17: sb_rs2id__h6271 = sboard_mv_board[71:68];
      6'd18: sb_rs2id__h6271 = sboard_mv_board[75:72];
      6'd19: sb_rs2id__h6271 = sboard_mv_board[79:76];
      6'd20: sb_rs2id__h6271 = sboard_mv_board[83:80];
      6'd21: sb_rs2id__h6271 = sboard_mv_board[87:84];
      6'd22: sb_rs2id__h6271 = sboard_mv_board[91:88];
      6'd23: sb_rs2id__h6271 = sboard_mv_board[95:92];
      6'd24: sb_rs2id__h6271 = sboard_mv_board[99:96];
      6'd25: sb_rs2id__h6271 = sboard_mv_board[103:100];
      6'd26: sb_rs2id__h6271 = sboard_mv_board[107:104];
      6'd27: sb_rs2id__h6271 = sboard_mv_board[111:108];
      6'd28: sb_rs2id__h6271 = sboard_mv_board[115:112];
      6'd29: sb_rs2id__h6271 = sboard_mv_board[119:116];
      6'd30: sb_rs2id__h6271 = sboard_mv_board[123:120];
      6'd31: sb_rs2id__h6271 = sboard_mv_board[127:124];
      6'd32: sb_rs2id__h6271 = sboard_mv_board[131:128];
      6'd33: sb_rs2id__h6271 = sboard_mv_board[135:132];
      6'd34: sb_rs2id__h6271 = sboard_mv_board[139:136];
      6'd35: sb_rs2id__h6271 = sboard_mv_board[143:140];
      6'd36: sb_rs2id__h6271 = sboard_mv_board[147:144];
      6'd37: sb_rs2id__h6271 = sboard_mv_board[151:148];
      6'd38: sb_rs2id__h6271 = sboard_mv_board[155:152];
      6'd39: sb_rs2id__h6271 = sboard_mv_board[159:156];
      6'd40: sb_rs2id__h6271 = sboard_mv_board[163:160];
      6'd41: sb_rs2id__h6271 = sboard_mv_board[167:164];
      6'd42: sb_rs2id__h6271 = sboard_mv_board[171:168];
      6'd43: sb_rs2id__h6271 = sboard_mv_board[175:172];
      6'd44: sb_rs2id__h6271 = sboard_mv_board[179:176];
      6'd45: sb_rs2id__h6271 = sboard_mv_board[183:180];
      6'd46: sb_rs2id__h6271 = sboard_mv_board[187:184];
      6'd47: sb_rs2id__h6271 = sboard_mv_board[191:188];
      6'd48: sb_rs2id__h6271 = sboard_mv_board[195:192];
      6'd49: sb_rs2id__h6271 = sboard_mv_board[199:196];
      6'd50: sb_rs2id__h6271 = sboard_mv_board[203:200];
      6'd51: sb_rs2id__h6271 = sboard_mv_board[207:204];
      6'd52: sb_rs2id__h6271 = sboard_mv_board[211:208];
      6'd53: sb_rs2id__h6271 = sboard_mv_board[215:212];
      6'd54: sb_rs2id__h6271 = sboard_mv_board[219:216];
      6'd55: sb_rs2id__h6271 = sboard_mv_board[223:220];
      6'd56: sb_rs2id__h6271 = sboard_mv_board[227:224];
      6'd57: sb_rs2id__h6271 = sboard_mv_board[231:228];
      6'd58: sb_rs2id__h6271 = sboard_mv_board[235:232];
      6'd59: sb_rs2id__h6271 = sboard_mv_board[239:236];
      6'd60: sb_rs2id__h6271 = sboard_mv_board[243:240];
      6'd61: sb_rs2id__h6271 = sboard_mv_board[247:244];
      6'd62: sb_rs2id__h6271 = sboard_mv_board[251:248];
      6'd63: sb_rs2id__h6271 = sboard_mv_board[255:252];
    endcase
  end
  always@(rx_rx_meta_from_stage2_first_x)
  begin
    case (rx_rx_meta_from_stage2_first_x[84:83])
      2'b0: CASE_rx_rx_meta_from_stage2_first_x_BITS_84_TO_ETC__q5 = 2'b01;
      2'b01, 2'b10:
	  CASE_rx_rx_meta_from_stage2_first_x_BITS_84_TO_ETC__q5 = 2'b11;
      2'd3:
	  CASE_rx_rx_meta_from_stage2_first_x_BITS_84_TO_ETC__q5 =
	      rx_rx_meta_from_stage2_first_x[84:83];
    endcase
  end
  always@(rx_rx_meta_from_stage2_first_x)
  begin
    case (rx_rx_meta_from_stage2_first_x[84:83])
      2'd0:
	  CASE_rx_rx_meta_from_stage2_first_x_BITS_84_TO_ETC__q6 =
	      rx_rx_meta_from_stage2_first_x[84:83];
      2'b01, 2'b10:
	  CASE_rx_rx_meta_from_stage2_first_x_BITS_84_TO_ETC__q6 = 2'b0;
      2'b11: CASE_rx_rx_meta_from_stage2_first_x_BITS_84_TO_ETC__q6 = 2'b10;
    endcase
  end
  always@(rx_rx_instrtype_from_stage2_first_x)
  begin
    case (rx_rx_instrtype_from_stage2_first_x)
      4'd3, 4'd4:
	  CASE_rx_rx_instrtype_from_stage2_first_x_3_1_4_ETC__q7 = 2'd1;
      default: CASE_rx_rx_instrtype_from_stage2_first_x_3_1_4_ETC__q7 = 2'd0;
    endcase
  end
  always@(x__h17607 or
	  wr_next_pc_wget or
	  nextpc__h17670 or nextpc__h17738 or nextpc__h17799)
  begin
    case (x__h17607)
      2'b0, 2'b11: _theResult_____5__h17475 = nextpc__h17670;
      2'b01: _theResult_____5__h17475 = nextpc__h17738;
      2'b10: _theResult_____5__h17475 = nextpc__h17799;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        rg_eEpoch <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_wEpoch <= `BSV_ASSIGNMENT_DELAY 1'd0;
	wr_mispredict_ghr <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 9'bxxxxxxxxx /* unspecified value */  };
	wr_training_data <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      142'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
      end
    else
      begin
        if (rg_eEpoch_EN) rg_eEpoch <= `BSV_ASSIGNMENT_DELAY rg_eEpoch_D_IN;
	if (rg_wEpoch_EN) rg_wEpoch <= `BSV_ASSIGNMENT_DELAY rg_wEpoch_D_IN;
	if (wr_mispredict_ghr_EN)
	  wr_mispredict_ghr <= `BSV_ASSIGNMENT_DELAY wr_mispredict_ghr_D_IN;
	if (wr_training_data_EN)
	  wr_training_data <= `BSV_ASSIGNMENT_DELAY wr_training_data_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    rg_eEpoch = 1'h0;
    rg_wEpoch = 1'h0;
    wr_mispredict_ghr = 10'h2AA;
    wr_training_data = 143'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkstage3

