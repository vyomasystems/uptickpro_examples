//
// Generated by Bluespec Compiler, version 2023.07 (build 0eb551dc)
//
// On Tue Jul 29 14:28:13 +04 2025
//
//
// Ports:
// Name                         I/O  size props
// rx_rx_baseout_from_stage3_deq_ena  O     1
// rx_rx_trapout_from_stage3_deq_ena  O     1
// rx_rx_systemout_from_stage3_deq_ena  O     1
// rx_rx_memoryout_from_stage3_deq_ena  O     1
// rx_rx_fuid_from_stage3_deq_ena  O     1
// rx_rx_commitlog_deq_ena        O     1
// tx_tx_systemout_to_stage5_enq_ena  O     1
// tx_tx_systemout_to_stage5_enq_data  O    81
// tx_tx_trapout_to_stage5_enq_ena  O     1
// tx_tx_trapout_to_stage5_enq_data  O    72
// tx_tx_baseout_to_stage5_enq_ena  O     1
// tx_tx_baseout_to_stage5_enq_data  O    80
// tx_tx_memio_to_stage5_enq_ena  O     1
// tx_tx_memio_to_stage5_enq_data  O    70
// tx_tx_fuid_to_stage5_enq_ena   O     1
// tx_tx_fuid_to_stage5_enq_data  O    77
// tx_tx_commitlog_enq_ena        O     1
// tx_tx_commitlog_enq_data       O   309
// RDY_cache_memory_response_put  O     1
// s4_mbox_rx_mbox_output_deq_ena  O     1
// s4_fbox_rx_fbox_output_deq_ena  O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// rx_rx_baseout_from_stage3_notEmpty_b  I     1 unused
// rx_rx_baseout_from_stage3_first_deq_rdy_b  I     1
// rx_rx_baseout_from_stage3_first_x  I    80
// rx_rx_trapout_from_stage3_notEmpty_b  I     1 unused
// rx_rx_trapout_from_stage3_first_deq_rdy_b  I     1
// rx_rx_trapout_from_stage3_first_x  I    72
// rx_rx_systemout_from_stage3_notEmpty_b  I     1 unused
// rx_rx_systemout_from_stage3_first_deq_rdy_b  I     1
// rx_rx_systemout_from_stage3_first_x  I    81
// rx_rx_memoryout_from_stage3_notEmpty_b  I     1 unused
// rx_rx_memoryout_from_stage3_first_deq_rdy_b  I     1
// rx_rx_memoryout_from_stage3_first_x  I     9
// rx_rx_fuid_from_stage3_notEmpty_b  I     1 unused
// rx_rx_fuid_from_stage3_first_deq_rdy_b  I     1
// rx_rx_fuid_from_stage3_first_x  I    78
// rx_rx_commitlog_notEmpty_b     I     1 unused
// rx_rx_commitlog_first_deq_rdy_b  I     1
// rx_rx_commitlog_first_x        I   309
// tx_tx_systemout_to_stage5_notFull_b  I     1 unused
// tx_tx_systemout_to_stage5_enq_rdy_b  I     1
// tx_tx_trapout_to_stage5_notFull_b  I     1 unused
// tx_tx_trapout_to_stage5_enq_rdy_b  I     1
// tx_tx_baseout_to_stage5_notFull_b  I     1 unused
// tx_tx_baseout_to_stage5_enq_rdy_b  I     1
// tx_tx_memio_to_stage5_notFull_b  I     1 unused
// tx_tx_memio_to_stage5_enq_rdy_b  I     1
// tx_tx_fuid_to_stage5_notFull_b  I     1 unused
// tx_tx_fuid_to_stage5_enq_rdy_b  I     1
// tx_tx_commitlog_notFull_b      I     1 unused
// tx_tx_commitlog_enq_rdy_b      I     1
// cache_memory_response_put      I   132
// s4_mbox_rx_mbox_output_notEmpty_b  I     1
// s4_mbox_rx_mbox_output_first_deq_rdy_b  I     1
// s4_mbox_rx_mbox_output_first_x  I    64
// s4_fbox_rx_fbox_output_notEmpty_b  I     1
// s4_fbox_rx_fbox_output_first_deq_rdy_b  I     1
// s4_fbox_rx_fbox_output_first_x  I    70
// EN_cache_memory_response_put   I     1
//
// Combinational paths from inputs to outputs:
//   (rx_rx_baseout_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage5_enq_rdy_b,
//    tx_tx_fuid_to_stage5_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b) -> rx_rx_baseout_from_stage3_deq_ena
//   (rx_rx_baseout_from_stage3_first_deq_rdy_b,
//    rx_rx_trapout_from_stage3_first_deq_rdy_b,
//    rx_rx_systemout_from_stage3_first_deq_rdy_b,
//    rx_rx_memoryout_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_systemout_to_stage5_enq_rdy_b,
//    tx_tx_trapout_to_stage5_enq_rdy_b,
//    tx_tx_baseout_to_stage5_enq_rdy_b,
//    tx_tx_memio_to_stage5_enq_rdy_b,
//    tx_tx_fuid_to_stage5_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    cache_memory_response_put,
//    s4_mbox_rx_mbox_output_notEmpty_b,
//    s4_mbox_rx_mbox_output_first_deq_rdy_b,
//    s4_fbox_rx_fbox_output_notEmpty_b,
//    s4_fbox_rx_fbox_output_first_deq_rdy_b,
//    EN_cache_memory_response_put) -> rx_rx_fuid_from_stage3_deq_ena
//   (rx_rx_baseout_from_stage3_first_deq_rdy_b,
//    rx_rx_trapout_from_stage3_first_deq_rdy_b,
//    rx_rx_systemout_from_stage3_first_deq_rdy_b,
//    rx_rx_memoryout_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_systemout_to_stage5_enq_rdy_b,
//    tx_tx_trapout_to_stage5_enq_rdy_b,
//    tx_tx_baseout_to_stage5_enq_rdy_b,
//    tx_tx_memio_to_stage5_enq_rdy_b,
//    tx_tx_fuid_to_stage5_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    cache_memory_response_put,
//    s4_mbox_rx_mbox_output_notEmpty_b,
//    s4_mbox_rx_mbox_output_first_deq_rdy_b,
//    s4_fbox_rx_fbox_output_notEmpty_b,
//    s4_fbox_rx_fbox_output_first_deq_rdy_b,
//    EN_cache_memory_response_put) -> rx_rx_commitlog_deq_ena
//   (rx_rx_baseout_from_stage3_first_deq_rdy_b,
//    rx_rx_memoryout_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_trapout_to_stage5_enq_rdy_b,
//    tx_tx_baseout_to_stage5_enq_rdy_b,
//    tx_tx_memio_to_stage5_enq_rdy_b,
//    tx_tx_fuid_to_stage5_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    cache_memory_response_put,
//    s4_mbox_rx_mbox_output_notEmpty_b,
//    s4_mbox_rx_mbox_output_first_deq_rdy_b,
//    s4_fbox_rx_fbox_output_notEmpty_b,
//    s4_fbox_rx_fbox_output_first_deq_rdy_b,
//    EN_cache_memory_response_put) -> tx_tx_baseout_to_stage5_enq_ena
//   (rx_rx_baseout_from_stage3_first_deq_rdy_b,
//    rx_rx_baseout_from_stage3_first_x,
//    rx_rx_memoryout_from_stage3_first_deq_rdy_b,
//    rx_rx_memoryout_from_stage3_first_x,
//    rx_rx_fuid_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_trapout_to_stage5_enq_rdy_b,
//    tx_tx_baseout_to_stage5_enq_rdy_b,
//    tx_tx_memio_to_stage5_enq_rdy_b,
//    tx_tx_fuid_to_stage5_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    cache_memory_response_put,
//    s4_mbox_rx_mbox_output_notEmpty_b,
//    s4_mbox_rx_mbox_output_first_deq_rdy_b,
//    s4_mbox_rx_mbox_output_first_x,
//    s4_fbox_rx_fbox_output_notEmpty_b,
//    s4_fbox_rx_fbox_output_first_deq_rdy_b,
//    s4_fbox_rx_fbox_output_first_x,
//    EN_cache_memory_response_put) -> tx_tx_baseout_to_stage5_enq_data
//   (rx_rx_baseout_from_stage3_first_deq_rdy_b,
//    rx_rx_trapout_from_stage3_first_deq_rdy_b,
//    rx_rx_systemout_from_stage3_first_deq_rdy_b,
//    rx_rx_memoryout_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_systemout_to_stage5_enq_rdy_b,
//    tx_tx_trapout_to_stage5_enq_rdy_b,
//    tx_tx_baseout_to_stage5_enq_rdy_b,
//    tx_tx_memio_to_stage5_enq_rdy_b,
//    tx_tx_fuid_to_stage5_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    cache_memory_response_put,
//    s4_mbox_rx_mbox_output_notEmpty_b,
//    s4_mbox_rx_mbox_output_first_deq_rdy_b,
//    s4_fbox_rx_fbox_output_notEmpty_b,
//    s4_fbox_rx_fbox_output_first_deq_rdy_b,
//    EN_cache_memory_response_put) -> tx_tx_fuid_to_stage5_enq_ena
//   (rx_rx_baseout_from_stage3_first_deq_rdy_b,
//    rx_rx_trapout_from_stage3_first_deq_rdy_b,
//    rx_rx_systemout_from_stage3_first_deq_rdy_b,
//    rx_rx_memoryout_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_systemout_to_stage5_enq_rdy_b,
//    tx_tx_trapout_to_stage5_enq_rdy_b,
//    tx_tx_baseout_to_stage5_enq_rdy_b,
//    tx_tx_memio_to_stage5_enq_rdy_b,
//    tx_tx_fuid_to_stage5_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    cache_memory_response_put,
//    s4_mbox_rx_mbox_output_notEmpty_b,
//    s4_mbox_rx_mbox_output_first_deq_rdy_b,
//    s4_fbox_rx_fbox_output_notEmpty_b,
//    s4_fbox_rx_fbox_output_first_deq_rdy_b,
//    EN_cache_memory_response_put) -> tx_tx_fuid_to_stage5_enq_data
//   (rx_rx_baseout_from_stage3_first_deq_rdy_b,
//    rx_rx_trapout_from_stage3_first_deq_rdy_b,
//    rx_rx_systemout_from_stage3_first_deq_rdy_b,
//    rx_rx_memoryout_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_systemout_to_stage5_enq_rdy_b,
//    tx_tx_trapout_to_stage5_enq_rdy_b,
//    tx_tx_baseout_to_stage5_enq_rdy_b,
//    tx_tx_memio_to_stage5_enq_rdy_b,
//    tx_tx_fuid_to_stage5_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    cache_memory_response_put,
//    s4_mbox_rx_mbox_output_notEmpty_b,
//    s4_mbox_rx_mbox_output_first_deq_rdy_b,
//    s4_fbox_rx_fbox_output_notEmpty_b,
//    s4_fbox_rx_fbox_output_first_deq_rdy_b,
//    EN_cache_memory_response_put) -> tx_tx_commitlog_enq_ena
//   (rx_rx_baseout_from_stage3_first_deq_rdy_b,
//    rx_rx_baseout_from_stage3_first_x,
//    rx_rx_trapout_from_stage3_first_deq_rdy_b,
//    rx_rx_systemout_from_stage3_first_deq_rdy_b,
//    rx_rx_memoryout_from_stage3_first_deq_rdy_b,
//    rx_rx_memoryout_from_stage3_first_x,
//    rx_rx_fuid_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    rx_rx_commitlog_first_x,
//    tx_tx_systemout_to_stage5_enq_rdy_b,
//    tx_tx_trapout_to_stage5_enq_rdy_b,
//    tx_tx_baseout_to_stage5_enq_rdy_b,
//    tx_tx_memio_to_stage5_enq_rdy_b,
//    tx_tx_fuid_to_stage5_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    cache_memory_response_put,
//    s4_mbox_rx_mbox_output_notEmpty_b,
//    s4_mbox_rx_mbox_output_first_deq_rdy_b,
//    s4_mbox_rx_mbox_output_first_x,
//    s4_fbox_rx_fbox_output_notEmpty_b,
//    s4_fbox_rx_fbox_output_first_deq_rdy_b,
//    s4_fbox_rx_fbox_output_first_x,
//    EN_cache_memory_response_put) -> tx_tx_commitlog_enq_data
//   (rx_rx_trapout_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_trapout_to_stage5_enq_rdy_b,
//    tx_tx_fuid_to_stage5_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b) -> rx_rx_trapout_from_stage3_deq_ena
//   (rx_rx_trapout_from_stage3_first_deq_rdy_b,
//    rx_rx_memoryout_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_trapout_to_stage5_enq_rdy_b,
//    tx_tx_baseout_to_stage5_enq_rdy_b,
//    tx_tx_memio_to_stage5_enq_rdy_b,
//    tx_tx_fuid_to_stage5_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    cache_memory_response_put,
//    EN_cache_memory_response_put) -> tx_tx_trapout_to_stage5_enq_ena
//   (rx_rx_trapout_from_stage3_first_deq_rdy_b,
//    rx_rx_trapout_from_stage3_first_x,
//    rx_rx_memoryout_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_trapout_to_stage5_enq_rdy_b,
//    tx_tx_baseout_to_stage5_enq_rdy_b,
//    tx_tx_memio_to_stage5_enq_rdy_b,
//    tx_tx_fuid_to_stage5_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    cache_memory_response_put,
//    EN_cache_memory_response_put) -> tx_tx_trapout_to_stage5_enq_data
//   (rx_rx_systemout_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_systemout_to_stage5_enq_rdy_b,
//    tx_tx_fuid_to_stage5_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b) -> rx_rx_systemout_from_stage3_deq_ena
//   (rx_rx_systemout_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_systemout_to_stage5_enq_rdy_b,
//    tx_tx_fuid_to_stage5_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b) -> tx_tx_systemout_to_stage5_enq_ena
//   (rx_rx_systemout_from_stage3_first_deq_rdy_b,
//    rx_rx_systemout_from_stage3_first_x,
//    rx_rx_fuid_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_systemout_to_stage5_enq_rdy_b,
//    tx_tx_fuid_to_stage5_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b) -> tx_tx_systemout_to_stage5_enq_data
//   (rx_rx_memoryout_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_trapout_to_stage5_enq_rdy_b,
//    tx_tx_baseout_to_stage5_enq_rdy_b,
//    tx_tx_memio_to_stage5_enq_rdy_b,
//    tx_tx_fuid_to_stage5_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    cache_memory_response_put,
//    EN_cache_memory_response_put) -> rx_rx_memoryout_from_stage3_deq_ena
//   (rx_rx_memoryout_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_trapout_to_stage5_enq_rdy_b,
//    tx_tx_baseout_to_stage5_enq_rdy_b,
//    tx_tx_memio_to_stage5_enq_rdy_b,
//    tx_tx_fuid_to_stage5_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    cache_memory_response_put,
//    EN_cache_memory_response_put) -> tx_tx_memio_to_stage5_enq_ena
//   (rx_rx_memoryout_from_stage3_first_deq_rdy_b,
//    rx_rx_memoryout_from_stage3_first_x,
//    rx_rx_fuid_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_trapout_to_stage5_enq_rdy_b,
//    tx_tx_baseout_to_stage5_enq_rdy_b,
//    tx_tx_memio_to_stage5_enq_rdy_b,
//    tx_tx_fuid_to_stage5_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    cache_memory_response_put,
//    EN_cache_memory_response_put) -> tx_tx_memio_to_stage5_enq_data
//   (rx_rx_fuid_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage5_enq_rdy_b,
//    tx_tx_fuid_to_stage5_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    s4_mbox_rx_mbox_output_notEmpty_b,
//    s4_mbox_rx_mbox_output_first_deq_rdy_b) -> s4_mbox_rx_mbox_output_deq_ena
//   (rx_rx_fuid_from_stage3_first_deq_rdy_b,
//    rx_rx_fuid_from_stage3_first_x,
//    rx_rx_commitlog_first_deq_rdy_b,
//    tx_tx_baseout_to_stage5_enq_rdy_b,
//    tx_tx_fuid_to_stage5_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    s4_fbox_rx_fbox_output_notEmpty_b,
//    s4_fbox_rx_fbox_output_first_deq_rdy_b) -> s4_fbox_rx_fbox_output_deq_ena
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkstage4(CLK,
		RST_N,

		rx_rx_baseout_from_stage3_notEmpty_b,

		rx_rx_baseout_from_stage3_first_deq_rdy_b,

		rx_rx_baseout_from_stage3_first_x,

		rx_rx_baseout_from_stage3_deq_ena,

		rx_rx_trapout_from_stage3_notEmpty_b,

		rx_rx_trapout_from_stage3_first_deq_rdy_b,

		rx_rx_trapout_from_stage3_first_x,

		rx_rx_trapout_from_stage3_deq_ena,

		rx_rx_systemout_from_stage3_notEmpty_b,

		rx_rx_systemout_from_stage3_first_deq_rdy_b,

		rx_rx_systemout_from_stage3_first_x,

		rx_rx_systemout_from_stage3_deq_ena,

		rx_rx_memoryout_from_stage3_notEmpty_b,

		rx_rx_memoryout_from_stage3_first_deq_rdy_b,

		rx_rx_memoryout_from_stage3_first_x,

		rx_rx_memoryout_from_stage3_deq_ena,

		rx_rx_fuid_from_stage3_notEmpty_b,

		rx_rx_fuid_from_stage3_first_deq_rdy_b,

		rx_rx_fuid_from_stage3_first_x,

		rx_rx_fuid_from_stage3_deq_ena,

		rx_rx_commitlog_notEmpty_b,

		rx_rx_commitlog_first_deq_rdy_b,

		rx_rx_commitlog_first_x,

		rx_rx_commitlog_deq_ena,

		tx_tx_systemout_to_stage5_notFull_b,

		tx_tx_systemout_to_stage5_enq_rdy_b,

		tx_tx_systemout_to_stage5_enq_ena,

		tx_tx_systemout_to_stage5_enq_data,

		tx_tx_trapout_to_stage5_notFull_b,

		tx_tx_trapout_to_stage5_enq_rdy_b,

		tx_tx_trapout_to_stage5_enq_ena,

		tx_tx_trapout_to_stage5_enq_data,

		tx_tx_baseout_to_stage5_notFull_b,

		tx_tx_baseout_to_stage5_enq_rdy_b,

		tx_tx_baseout_to_stage5_enq_ena,

		tx_tx_baseout_to_stage5_enq_data,

		tx_tx_memio_to_stage5_notFull_b,

		tx_tx_memio_to_stage5_enq_rdy_b,

		tx_tx_memio_to_stage5_enq_ena,

		tx_tx_memio_to_stage5_enq_data,

		tx_tx_fuid_to_stage5_notFull_b,

		tx_tx_fuid_to_stage5_enq_rdy_b,

		tx_tx_fuid_to_stage5_enq_ena,

		tx_tx_fuid_to_stage5_enq_data,

		tx_tx_commitlog_notFull_b,

		tx_tx_commitlog_enq_rdy_b,

		tx_tx_commitlog_enq_ena,

		tx_tx_commitlog_enq_data,

		cache_memory_response_put,
		EN_cache_memory_response_put,
		RDY_cache_memory_response_put,

		s4_mbox_rx_mbox_output_notEmpty_b,

		s4_mbox_rx_mbox_output_first_deq_rdy_b,

		s4_mbox_rx_mbox_output_first_x,

		s4_mbox_rx_mbox_output_deq_ena,

		s4_fbox_rx_fbox_output_notEmpty_b,

		s4_fbox_rx_fbox_output_first_deq_rdy_b,

		s4_fbox_rx_fbox_output_first_x,

		s4_fbox_rx_fbox_output_deq_ena);
  parameter [63 : 0] hartid = 64'b0;
  input  CLK;
  input  RST_N;

  // action method rx_rx_baseout_from_stage3_notEmpty
  input  rx_rx_baseout_from_stage3_notEmpty_b;

  // action method rx_rx_baseout_from_stage3_first_deq_rdy
  input  rx_rx_baseout_from_stage3_first_deq_rdy_b;

  // action method rx_rx_baseout_from_stage3_first
  input  [79 : 0] rx_rx_baseout_from_stage3_first_x;

  // value method rx_rx_baseout_from_stage3_deq_ena
  output rx_rx_baseout_from_stage3_deq_ena;

  // action method rx_rx_trapout_from_stage3_notEmpty
  input  rx_rx_trapout_from_stage3_notEmpty_b;

  // action method rx_rx_trapout_from_stage3_first_deq_rdy
  input  rx_rx_trapout_from_stage3_first_deq_rdy_b;

  // action method rx_rx_trapout_from_stage3_first
  input  [71 : 0] rx_rx_trapout_from_stage3_first_x;

  // value method rx_rx_trapout_from_stage3_deq_ena
  output rx_rx_trapout_from_stage3_deq_ena;

  // action method rx_rx_systemout_from_stage3_notEmpty
  input  rx_rx_systemout_from_stage3_notEmpty_b;

  // action method rx_rx_systemout_from_stage3_first_deq_rdy
  input  rx_rx_systemout_from_stage3_first_deq_rdy_b;

  // action method rx_rx_systemout_from_stage3_first
  input  [80 : 0] rx_rx_systemout_from_stage3_first_x;

  // value method rx_rx_systemout_from_stage3_deq_ena
  output rx_rx_systemout_from_stage3_deq_ena;

  // action method rx_rx_memoryout_from_stage3_notEmpty
  input  rx_rx_memoryout_from_stage3_notEmpty_b;

  // action method rx_rx_memoryout_from_stage3_first_deq_rdy
  input  rx_rx_memoryout_from_stage3_first_deq_rdy_b;

  // action method rx_rx_memoryout_from_stage3_first
  input  [8 : 0] rx_rx_memoryout_from_stage3_first_x;

  // value method rx_rx_memoryout_from_stage3_deq_ena
  output rx_rx_memoryout_from_stage3_deq_ena;

  // action method rx_rx_fuid_from_stage3_notEmpty
  input  rx_rx_fuid_from_stage3_notEmpty_b;

  // action method rx_rx_fuid_from_stage3_first_deq_rdy
  input  rx_rx_fuid_from_stage3_first_deq_rdy_b;

  // action method rx_rx_fuid_from_stage3_first
  input  [77 : 0] rx_rx_fuid_from_stage3_first_x;

  // value method rx_rx_fuid_from_stage3_deq_ena
  output rx_rx_fuid_from_stage3_deq_ena;

  // action method rx_rx_commitlog_notEmpty
  input  rx_rx_commitlog_notEmpty_b;

  // action method rx_rx_commitlog_first_deq_rdy
  input  rx_rx_commitlog_first_deq_rdy_b;

  // action method rx_rx_commitlog_first
  input  [308 : 0] rx_rx_commitlog_first_x;

  // value method rx_rx_commitlog_deq_ena
  output rx_rx_commitlog_deq_ena;

  // action method tx_tx_systemout_to_stage5_notFull
  input  tx_tx_systemout_to_stage5_notFull_b;

  // action method tx_tx_systemout_to_stage5_enq_rdy
  input  tx_tx_systemout_to_stage5_enq_rdy_b;

  // value method tx_tx_systemout_to_stage5_enq_ena
  output tx_tx_systemout_to_stage5_enq_ena;

  // value method tx_tx_systemout_to_stage5_enq_data
  output [80 : 0] tx_tx_systemout_to_stage5_enq_data;

  // action method tx_tx_trapout_to_stage5_notFull
  input  tx_tx_trapout_to_stage5_notFull_b;

  // action method tx_tx_trapout_to_stage5_enq_rdy
  input  tx_tx_trapout_to_stage5_enq_rdy_b;

  // value method tx_tx_trapout_to_stage5_enq_ena
  output tx_tx_trapout_to_stage5_enq_ena;

  // value method tx_tx_trapout_to_stage5_enq_data
  output [71 : 0] tx_tx_trapout_to_stage5_enq_data;

  // action method tx_tx_baseout_to_stage5_notFull
  input  tx_tx_baseout_to_stage5_notFull_b;

  // action method tx_tx_baseout_to_stage5_enq_rdy
  input  tx_tx_baseout_to_stage5_enq_rdy_b;

  // value method tx_tx_baseout_to_stage5_enq_ena
  output tx_tx_baseout_to_stage5_enq_ena;

  // value method tx_tx_baseout_to_stage5_enq_data
  output [79 : 0] tx_tx_baseout_to_stage5_enq_data;

  // action method tx_tx_memio_to_stage5_notFull
  input  tx_tx_memio_to_stage5_notFull_b;

  // action method tx_tx_memio_to_stage5_enq_rdy
  input  tx_tx_memio_to_stage5_enq_rdy_b;

  // value method tx_tx_memio_to_stage5_enq_ena
  output tx_tx_memio_to_stage5_enq_ena;

  // value method tx_tx_memio_to_stage5_enq_data
  output [69 : 0] tx_tx_memio_to_stage5_enq_data;

  // action method tx_tx_fuid_to_stage5_notFull
  input  tx_tx_fuid_to_stage5_notFull_b;

  // action method tx_tx_fuid_to_stage5_enq_rdy
  input  tx_tx_fuid_to_stage5_enq_rdy_b;

  // value method tx_tx_fuid_to_stage5_enq_ena
  output tx_tx_fuid_to_stage5_enq_ena;

  // value method tx_tx_fuid_to_stage5_enq_data
  output [76 : 0] tx_tx_fuid_to_stage5_enq_data;

  // action method tx_tx_commitlog_notFull
  input  tx_tx_commitlog_notFull_b;

  // action method tx_tx_commitlog_enq_rdy
  input  tx_tx_commitlog_enq_rdy_b;

  // value method tx_tx_commitlog_enq_ena
  output tx_tx_commitlog_enq_ena;

  // value method tx_tx_commitlog_enq_data
  output [308 : 0] tx_tx_commitlog_enq_data;

  // action method cache_memory_response_put
  input  [131 : 0] cache_memory_response_put;
  input  EN_cache_memory_response_put;
  output RDY_cache_memory_response_put;

  // action method s4_mbox_rx_mbox_output_notEmpty
  input  s4_mbox_rx_mbox_output_notEmpty_b;

  // action method s4_mbox_rx_mbox_output_first_deq_rdy
  input  s4_mbox_rx_mbox_output_first_deq_rdy_b;

  // action method s4_mbox_rx_mbox_output_first
  input  [63 : 0] s4_mbox_rx_mbox_output_first_x;

  // value method s4_mbox_rx_mbox_output_deq_ena
  output s4_mbox_rx_mbox_output_deq_ena;

  // action method s4_fbox_rx_fbox_output_notEmpty
  input  s4_fbox_rx_fbox_output_notEmpty_b;

  // action method s4_fbox_rx_fbox_output_first_deq_rdy
  input  s4_fbox_rx_fbox_output_first_deq_rdy_b;

  // action method s4_fbox_rx_fbox_output_first
  input  [69 : 0] s4_fbox_rx_fbox_output_first_x;

  // value method s4_fbox_rx_fbox_output_deq_ena
  output s4_fbox_rx_fbox_output_deq_ena;

  // signals for module outputs
  reg [308 : 0] tx_tx_commitlog_enq_data;
  reg [79 : 0] tx_tx_baseout_to_stage5_enq_data;
  reg [76 : 0] tx_tx_fuid_to_stage5_enq_data;
  wire [80 : 0] tx_tx_systemout_to_stage5_enq_data;
  wire [71 : 0] tx_tx_trapout_to_stage5_enq_data;
  wire [69 : 0] tx_tx_memio_to_stage5_enq_data;
  wire RDY_cache_memory_response_put,
       rx_rx_baseout_from_stage3_deq_ena,
       rx_rx_commitlog_deq_ena,
       rx_rx_fuid_from_stage3_deq_ena,
       rx_rx_memoryout_from_stage3_deq_ena,
       rx_rx_systemout_from_stage3_deq_ena,
       rx_rx_trapout_from_stage3_deq_ena,
       s4_fbox_rx_fbox_output_deq_ena,
       s4_mbox_rx_mbox_output_deq_ena,
       tx_tx_baseout_to_stage5_enq_ena,
       tx_tx_commitlog_enq_ena,
       tx_tx_fuid_to_stage5_enq_ena,
       tx_tx_memio_to_stage5_enq_ena,
       tx_tx_systemout_to_stage5_enq_ena,
       tx_tx_trapout_to_stage5_enq_ena;

  // inlined wires
  wire [132 : 0] ff_memory_response_rv_port0__write_1,
		 ff_memory_response_rv_port1__read,
		 ff_memory_response_rv_port1__write_1,
		 ff_memory_response_rv_port2__read;
  wire rx_fuid_w_ena_whas,
       tx_baseout_w_ena_whas,
       tx_memio_w_ena_whas,
       tx_trapout_w_ena_whas;

  // register ff_memory_response_rv
  reg [132 : 0] ff_memory_response_rv;
  wire [132 : 0] ff_memory_response_rv_D_IN;
  wire ff_memory_response_rv_EN;

  // rule scheduling signals
  wire CAN_FIRE_RL_rl_capture_float,
       CAN_FIRE_RL_rl_capture_muldiv,
       CAN_FIRE_RL_rl_fwd_baseout,
       CAN_FIRE_RL_rl_fwd_systemout,
       CAN_FIRE_RL_rl_fwd_trapout,
       CAN_FIRE_RL_rl_handle_memory,
       CAN_FIRE_cache_memory_response_put,
       CAN_FIRE_rx_rx_baseout_from_stage3_first,
       CAN_FIRE_rx_rx_baseout_from_stage3_first_deq_rdy,
       CAN_FIRE_rx_rx_baseout_from_stage3_notEmpty,
       CAN_FIRE_rx_rx_commitlog_first,
       CAN_FIRE_rx_rx_commitlog_first_deq_rdy,
       CAN_FIRE_rx_rx_commitlog_notEmpty,
       CAN_FIRE_rx_rx_fuid_from_stage3_first,
       CAN_FIRE_rx_rx_fuid_from_stage3_first_deq_rdy,
       CAN_FIRE_rx_rx_fuid_from_stage3_notEmpty,
       CAN_FIRE_rx_rx_memoryout_from_stage3_first,
       CAN_FIRE_rx_rx_memoryout_from_stage3_first_deq_rdy,
       CAN_FIRE_rx_rx_memoryout_from_stage3_notEmpty,
       CAN_FIRE_rx_rx_systemout_from_stage3_first,
       CAN_FIRE_rx_rx_systemout_from_stage3_first_deq_rdy,
       CAN_FIRE_rx_rx_systemout_from_stage3_notEmpty,
       CAN_FIRE_rx_rx_trapout_from_stage3_first,
       CAN_FIRE_rx_rx_trapout_from_stage3_first_deq_rdy,
       CAN_FIRE_rx_rx_trapout_from_stage3_notEmpty,
       CAN_FIRE_s4_fbox_rx_fbox_output_first,
       CAN_FIRE_s4_fbox_rx_fbox_output_first_deq_rdy,
       CAN_FIRE_s4_fbox_rx_fbox_output_notEmpty,
       CAN_FIRE_s4_mbox_rx_mbox_output_first,
       CAN_FIRE_s4_mbox_rx_mbox_output_first_deq_rdy,
       CAN_FIRE_s4_mbox_rx_mbox_output_notEmpty,
       CAN_FIRE_tx_tx_baseout_to_stage5_enq_rdy,
       CAN_FIRE_tx_tx_baseout_to_stage5_notFull,
       CAN_FIRE_tx_tx_commitlog_enq_rdy,
       CAN_FIRE_tx_tx_commitlog_notFull,
       CAN_FIRE_tx_tx_fuid_to_stage5_enq_rdy,
       CAN_FIRE_tx_tx_fuid_to_stage5_notFull,
       CAN_FIRE_tx_tx_memio_to_stage5_enq_rdy,
       CAN_FIRE_tx_tx_memio_to_stage5_notFull,
       CAN_FIRE_tx_tx_systemout_to_stage5_enq_rdy,
       CAN_FIRE_tx_tx_systemout_to_stage5_notFull,
       CAN_FIRE_tx_tx_trapout_to_stage5_enq_rdy,
       CAN_FIRE_tx_tx_trapout_to_stage5_notFull,
       WILL_FIRE_RL_rl_capture_float,
       WILL_FIRE_RL_rl_capture_muldiv,
       WILL_FIRE_RL_rl_fwd_baseout,
       WILL_FIRE_RL_rl_fwd_systemout,
       WILL_FIRE_RL_rl_fwd_trapout,
       WILL_FIRE_RL_rl_handle_memory,
       WILL_FIRE_cache_memory_response_put,
       WILL_FIRE_rx_rx_baseout_from_stage3_first,
       WILL_FIRE_rx_rx_baseout_from_stage3_first_deq_rdy,
       WILL_FIRE_rx_rx_baseout_from_stage3_notEmpty,
       WILL_FIRE_rx_rx_commitlog_first,
       WILL_FIRE_rx_rx_commitlog_first_deq_rdy,
       WILL_FIRE_rx_rx_commitlog_notEmpty,
       WILL_FIRE_rx_rx_fuid_from_stage3_first,
       WILL_FIRE_rx_rx_fuid_from_stage3_first_deq_rdy,
       WILL_FIRE_rx_rx_fuid_from_stage3_notEmpty,
       WILL_FIRE_rx_rx_memoryout_from_stage3_first,
       WILL_FIRE_rx_rx_memoryout_from_stage3_first_deq_rdy,
       WILL_FIRE_rx_rx_memoryout_from_stage3_notEmpty,
       WILL_FIRE_rx_rx_systemout_from_stage3_first,
       WILL_FIRE_rx_rx_systemout_from_stage3_first_deq_rdy,
       WILL_FIRE_rx_rx_systemout_from_stage3_notEmpty,
       WILL_FIRE_rx_rx_trapout_from_stage3_first,
       WILL_FIRE_rx_rx_trapout_from_stage3_first_deq_rdy,
       WILL_FIRE_rx_rx_trapout_from_stage3_notEmpty,
       WILL_FIRE_s4_fbox_rx_fbox_output_first,
       WILL_FIRE_s4_fbox_rx_fbox_output_first_deq_rdy,
       WILL_FIRE_s4_fbox_rx_fbox_output_notEmpty,
       WILL_FIRE_s4_mbox_rx_mbox_output_first,
       WILL_FIRE_s4_mbox_rx_mbox_output_first_deq_rdy,
       WILL_FIRE_s4_mbox_rx_mbox_output_notEmpty,
       WILL_FIRE_tx_tx_baseout_to_stage5_enq_rdy,
       WILL_FIRE_tx_tx_baseout_to_stage5_notFull,
       WILL_FIRE_tx_tx_commitlog_enq_rdy,
       WILL_FIRE_tx_tx_commitlog_notFull,
       WILL_FIRE_tx_tx_fuid_to_stage5_enq_rdy,
       WILL_FIRE_tx_tx_fuid_to_stage5_notFull,
       WILL_FIRE_tx_tx_memio_to_stage5_enq_rdy,
       WILL_FIRE_tx_tx_memio_to_stage5_notFull,
       WILL_FIRE_tx_tx_systemout_to_stage5_enq_rdy,
       WILL_FIRE_tx_tx_systemout_to_stage5_notFull,
       WILL_FIRE_tx_tx_trapout_to_stage5_enq_rdy,
       WILL_FIRE_tx_tx_trapout_to_stage5_notFull;

  // inputs to muxes for submodule ports
  wire [308 : 0] MUX_tx_commitlog_w_data_wset_1__VAL_1,
		 MUX_tx_commitlog_w_data_wset_1__VAL_3,
		 MUX_tx_commitlog_w_data_wset_1__VAL_4,
		 MUX_tx_commitlog_w_data_wset_1__VAL_5;
  wire [79 : 0] MUX_tx_baseout_w_data_wset_1__VAL_1,
		MUX_tx_baseout_w_data_wset_1__VAL_3,
		MUX_tx_baseout_w_data_wset_1__VAL_4;
  wire [76 : 0] MUX_tx_fuid_w_data_wset_1__VAL_1,
		MUX_tx_fuid_w_data_wset_1__VAL_2,
		MUX_tx_fuid_w_data_wset_1__VAL_3;
  wire [71 : 0] MUX_tx_trapout_w_data_wset_1__VAL_1;
  wire MUX_rx_commitlog_w_ena_wset_1__SEL_1,
       MUX_tx_baseout_w_data_wset_1__SEL_1,
       MUX_tx_commitlog_w_data_wset_1__SEL_2,
       MUX_tx_fuid_w_data_wset_1__SEL_2,
       MUX_tx_fuid_w_data_wset_1__SEL_3,
       MUX_tx_trapout_w_data_wset_1__SEL_1;

  // remaining internal signals
  wire [308 : 0] rx_commitlog_w_data_wget__0_BITS_308_TO_211_1__ETC___d123;
  wire [208 : 0] IF_NOT_IF_rx_memoryout_w_data_whas__5_THEN_rx__ETC___d122;
  wire [63 : 0] baseout_rdvalue__h7697;
  wire ff_memory_response_rv_port1__read__0_BIT_59_5__ETC___d88,
       tx_fuid_w_rdy_wget_AND_tx_commitlog_w_rdy_wget_ETC___d79;

  // action method rx_rx_baseout_from_stage3_notEmpty
  assign CAN_FIRE_rx_rx_baseout_from_stage3_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_rx_baseout_from_stage3_notEmpty = 1'd1 ;

  // action method rx_rx_baseout_from_stage3_first_deq_rdy
  assign CAN_FIRE_rx_rx_baseout_from_stage3_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_rx_baseout_from_stage3_first_deq_rdy = 1'd1 ;

  // action method rx_rx_baseout_from_stage3_first
  assign CAN_FIRE_rx_rx_baseout_from_stage3_first = 1'd1 ;
  assign WILL_FIRE_rx_rx_baseout_from_stage3_first = 1'd1 ;

  // value method rx_rx_baseout_from_stage3_deq_ena
  assign rx_rx_baseout_from_stage3_deq_ena = CAN_FIRE_RL_rl_fwd_baseout ;

  // action method rx_rx_trapout_from_stage3_notEmpty
  assign CAN_FIRE_rx_rx_trapout_from_stage3_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_rx_trapout_from_stage3_notEmpty = 1'd1 ;

  // action method rx_rx_trapout_from_stage3_first_deq_rdy
  assign CAN_FIRE_rx_rx_trapout_from_stage3_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_rx_trapout_from_stage3_first_deq_rdy = 1'd1 ;

  // action method rx_rx_trapout_from_stage3_first
  assign CAN_FIRE_rx_rx_trapout_from_stage3_first = 1'd1 ;
  assign WILL_FIRE_rx_rx_trapout_from_stage3_first = 1'd1 ;

  // value method rx_rx_trapout_from_stage3_deq_ena
  assign rx_rx_trapout_from_stage3_deq_ena = CAN_FIRE_RL_rl_fwd_trapout ;

  // action method rx_rx_systemout_from_stage3_notEmpty
  assign CAN_FIRE_rx_rx_systemout_from_stage3_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_rx_systemout_from_stage3_notEmpty = 1'd1 ;

  // action method rx_rx_systemout_from_stage3_first_deq_rdy
  assign CAN_FIRE_rx_rx_systemout_from_stage3_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_rx_systemout_from_stage3_first_deq_rdy = 1'd1 ;

  // action method rx_rx_systemout_from_stage3_first
  assign CAN_FIRE_rx_rx_systemout_from_stage3_first = 1'd1 ;
  assign WILL_FIRE_rx_rx_systemout_from_stage3_first = 1'd1 ;

  // value method rx_rx_systemout_from_stage3_deq_ena
  assign rx_rx_systemout_from_stage3_deq_ena = CAN_FIRE_RL_rl_fwd_systemout ;

  // action method rx_rx_memoryout_from_stage3_notEmpty
  assign CAN_FIRE_rx_rx_memoryout_from_stage3_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_rx_memoryout_from_stage3_notEmpty = 1'd1 ;

  // action method rx_rx_memoryout_from_stage3_first_deq_rdy
  assign CAN_FIRE_rx_rx_memoryout_from_stage3_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_rx_memoryout_from_stage3_first_deq_rdy = 1'd1 ;

  // action method rx_rx_memoryout_from_stage3_first
  assign CAN_FIRE_rx_rx_memoryout_from_stage3_first = 1'd1 ;
  assign WILL_FIRE_rx_rx_memoryout_from_stage3_first = 1'd1 ;

  // value method rx_rx_memoryout_from_stage3_deq_ena
  assign rx_rx_memoryout_from_stage3_deq_ena =
	     MUX_rx_commitlog_w_ena_wset_1__SEL_1 ;

  // action method rx_rx_fuid_from_stage3_notEmpty
  assign CAN_FIRE_rx_rx_fuid_from_stage3_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_rx_fuid_from_stage3_notEmpty = 1'd1 ;

  // action method rx_rx_fuid_from_stage3_first_deq_rdy
  assign CAN_FIRE_rx_rx_fuid_from_stage3_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_rx_fuid_from_stage3_first_deq_rdy = 1'd1 ;

  // action method rx_rx_fuid_from_stage3_first
  assign CAN_FIRE_rx_rx_fuid_from_stage3_first = 1'd1 ;
  assign WILL_FIRE_rx_rx_fuid_from_stage3_first = 1'd1 ;

  // value method rx_rx_fuid_from_stage3_deq_ena
  assign rx_rx_fuid_from_stage3_deq_ena = rx_fuid_w_ena_whas ;

  // action method rx_rx_commitlog_notEmpty
  assign CAN_FIRE_rx_rx_commitlog_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_rx_commitlog_notEmpty = 1'd1 ;

  // action method rx_rx_commitlog_first_deq_rdy
  assign CAN_FIRE_rx_rx_commitlog_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_rx_commitlog_first_deq_rdy = 1'd1 ;

  // action method rx_rx_commitlog_first
  assign CAN_FIRE_rx_rx_commitlog_first = 1'd1 ;
  assign WILL_FIRE_rx_rx_commitlog_first = 1'd1 ;

  // value method rx_rx_commitlog_deq_ena
  assign rx_rx_commitlog_deq_ena = rx_fuid_w_ena_whas ;

  // action method tx_tx_systemout_to_stage5_notFull
  assign CAN_FIRE_tx_tx_systemout_to_stage5_notFull = 1'd1 ;
  assign WILL_FIRE_tx_tx_systemout_to_stage5_notFull = 1'd1 ;

  // action method tx_tx_systemout_to_stage5_enq_rdy
  assign CAN_FIRE_tx_tx_systemout_to_stage5_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_tx_systemout_to_stage5_enq_rdy = 1'd1 ;

  // value method tx_tx_systemout_to_stage5_enq_ena
  assign tx_tx_systemout_to_stage5_enq_ena = CAN_FIRE_RL_rl_fwd_systemout ;

  // value method tx_tx_systemout_to_stage5_enq_data
  assign tx_tx_systemout_to_stage5_enq_data =
	     rx_rx_systemout_from_stage3_first_x ;

  // action method tx_tx_trapout_to_stage5_notFull
  assign CAN_FIRE_tx_tx_trapout_to_stage5_notFull = 1'd1 ;
  assign WILL_FIRE_tx_tx_trapout_to_stage5_notFull = 1'd1 ;

  // action method tx_tx_trapout_to_stage5_enq_rdy
  assign CAN_FIRE_tx_tx_trapout_to_stage5_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_tx_trapout_to_stage5_enq_rdy = 1'd1 ;

  // value method tx_tx_trapout_to_stage5_enq_ena
  assign tx_tx_trapout_to_stage5_enq_ena = tx_trapout_w_ena_whas ;

  // value method tx_tx_trapout_to_stage5_enq_data
  assign tx_tx_trapout_to_stage5_enq_data =
	     MUX_tx_trapout_w_data_wset_1__SEL_1 ?
	       MUX_tx_trapout_w_data_wset_1__VAL_1 :
	       rx_rx_trapout_from_stage3_first_x ;

  // action method tx_tx_baseout_to_stage5_notFull
  assign CAN_FIRE_tx_tx_baseout_to_stage5_notFull = 1'd1 ;
  assign WILL_FIRE_tx_tx_baseout_to_stage5_notFull = 1'd1 ;

  // action method tx_tx_baseout_to_stage5_enq_rdy
  assign CAN_FIRE_tx_tx_baseout_to_stage5_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_tx_baseout_to_stage5_enq_rdy = 1'd1 ;

  // value method tx_tx_baseout_to_stage5_enq_ena
  assign tx_tx_baseout_to_stage5_enq_ena = tx_baseout_w_ena_whas ;

  // value method tx_tx_baseout_to_stage5_enq_data
  always@(MUX_tx_baseout_w_data_wset_1__SEL_1 or
	  MUX_tx_baseout_w_data_wset_1__VAL_1 or
	  WILL_FIRE_RL_rl_fwd_baseout or
	  rx_rx_baseout_from_stage3_first_x or
	  WILL_FIRE_RL_rl_capture_muldiv or
	  MUX_tx_baseout_w_data_wset_1__VAL_3 or
	  WILL_FIRE_RL_rl_capture_float or
	  MUX_tx_baseout_w_data_wset_1__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_tx_baseout_w_data_wset_1__SEL_1:
	  tx_tx_baseout_to_stage5_enq_data =
	      MUX_tx_baseout_w_data_wset_1__VAL_1;
      WILL_FIRE_RL_rl_fwd_baseout:
	  tx_tx_baseout_to_stage5_enq_data =
	      rx_rx_baseout_from_stage3_first_x;
      WILL_FIRE_RL_rl_capture_muldiv:
	  tx_tx_baseout_to_stage5_enq_data =
	      MUX_tx_baseout_w_data_wset_1__VAL_3;
      WILL_FIRE_RL_rl_capture_float:
	  tx_tx_baseout_to_stage5_enq_data =
	      MUX_tx_baseout_w_data_wset_1__VAL_4;
      default: tx_tx_baseout_to_stage5_enq_data =
		   80'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end

  // action method tx_tx_memio_to_stage5_notFull
  assign CAN_FIRE_tx_tx_memio_to_stage5_notFull = 1'd1 ;
  assign WILL_FIRE_tx_tx_memio_to_stage5_notFull = 1'd1 ;

  // action method tx_tx_memio_to_stage5_enq_rdy
  assign CAN_FIRE_tx_tx_memio_to_stage5_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_tx_memio_to_stage5_enq_rdy = 1'd1 ;

  // value method tx_tx_memio_to_stage5_enq_ena
  assign tx_tx_memio_to_stage5_enq_ena = tx_memio_w_ena_whas ;

  // value method tx_tx_memio_to_stage5_enq_data
  assign tx_tx_memio_to_stage5_enq_data =
	     { ff_memory_response_rv_port1__read[131:68],
	       rx_rx_memoryout_from_stage3_first_x[3],
	       ff_memory_response_rv_port1__read[56],
	       ff_memory_response_rv_port1__read[58],
	       rx_rx_memoryout_from_stage3_first_x[2:0] } ;

  // action method tx_tx_fuid_to_stage5_notFull
  assign CAN_FIRE_tx_tx_fuid_to_stage5_notFull = 1'd1 ;
  assign WILL_FIRE_tx_tx_fuid_to_stage5_notFull = 1'd1 ;

  // action method tx_tx_fuid_to_stage5_enq_rdy
  assign CAN_FIRE_tx_tx_fuid_to_stage5_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_tx_fuid_to_stage5_enq_rdy = 1'd1 ;

  // value method tx_tx_fuid_to_stage5_enq_ena
  assign tx_tx_fuid_to_stage5_enq_ena = rx_fuid_w_ena_whas ;

  // value method tx_tx_fuid_to_stage5_enq_data
  always@(MUX_rx_commitlog_w_ena_wset_1__SEL_1 or
	  MUX_tx_fuid_w_data_wset_1__VAL_1 or
	  MUX_tx_fuid_w_data_wset_1__SEL_2 or
	  MUX_tx_fuid_w_data_wset_1__VAL_2 or
	  MUX_tx_fuid_w_data_wset_1__SEL_3 or
	  MUX_tx_fuid_w_data_wset_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rx_commitlog_w_ena_wset_1__SEL_1:
	  tx_tx_fuid_to_stage5_enq_data = MUX_tx_fuid_w_data_wset_1__VAL_1;
      MUX_tx_fuid_w_data_wset_1__SEL_2:
	  tx_tx_fuid_to_stage5_enq_data = MUX_tx_fuid_w_data_wset_1__VAL_2;
      MUX_tx_fuid_w_data_wset_1__SEL_3:
	  tx_tx_fuid_to_stage5_enq_data = MUX_tx_fuid_w_data_wset_1__VAL_3;
      default: tx_tx_fuid_to_stage5_enq_data =
		   77'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end

  // action method tx_tx_commitlog_notFull
  assign CAN_FIRE_tx_tx_commitlog_notFull = 1'd1 ;
  assign WILL_FIRE_tx_tx_commitlog_notFull = 1'd1 ;

  // action method tx_tx_commitlog_enq_rdy
  assign CAN_FIRE_tx_tx_commitlog_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_tx_commitlog_enq_rdy = 1'd1 ;

  // value method tx_tx_commitlog_enq_ena
  assign tx_tx_commitlog_enq_ena = rx_fuid_w_ena_whas ;

  // value method tx_tx_commitlog_enq_data
  always@(MUX_rx_commitlog_w_ena_wset_1__SEL_1 or
	  MUX_tx_commitlog_w_data_wset_1__VAL_1 or
	  MUX_tx_commitlog_w_data_wset_1__SEL_2 or
	  rx_rx_commitlog_first_x or
	  WILL_FIRE_RL_rl_fwd_baseout or
	  MUX_tx_commitlog_w_data_wset_1__VAL_3 or
	  WILL_FIRE_RL_rl_capture_muldiv or
	  MUX_tx_commitlog_w_data_wset_1__VAL_4 or
	  WILL_FIRE_RL_rl_capture_float or
	  MUX_tx_commitlog_w_data_wset_1__VAL_5)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rx_commitlog_w_ena_wset_1__SEL_1:
	  tx_tx_commitlog_enq_data = MUX_tx_commitlog_w_data_wset_1__VAL_1;
      MUX_tx_commitlog_w_data_wset_1__SEL_2:
	  tx_tx_commitlog_enq_data = rx_rx_commitlog_first_x;
      WILL_FIRE_RL_rl_fwd_baseout:
	  tx_tx_commitlog_enq_data = MUX_tx_commitlog_w_data_wset_1__VAL_3;
      WILL_FIRE_RL_rl_capture_muldiv:
	  tx_tx_commitlog_enq_data = MUX_tx_commitlog_w_data_wset_1__VAL_4;
      WILL_FIRE_RL_rl_capture_float:
	  tx_tx_commitlog_enq_data = MUX_tx_commitlog_w_data_wset_1__VAL_5;
      default: tx_tx_commitlog_enq_data =
		   309'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end

  // action method cache_memory_response_put
  assign RDY_cache_memory_response_put = !ff_memory_response_rv[132] ;
  assign CAN_FIRE_cache_memory_response_put = !ff_memory_response_rv[132] ;
  assign WILL_FIRE_cache_memory_response_put = EN_cache_memory_response_put ;

  // action method s4_mbox_rx_mbox_output_notEmpty
  assign CAN_FIRE_s4_mbox_rx_mbox_output_notEmpty = 1'd1 ;
  assign WILL_FIRE_s4_mbox_rx_mbox_output_notEmpty = 1'd1 ;

  // action method s4_mbox_rx_mbox_output_first_deq_rdy
  assign CAN_FIRE_s4_mbox_rx_mbox_output_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_s4_mbox_rx_mbox_output_first_deq_rdy = 1'd1 ;

  // action method s4_mbox_rx_mbox_output_first
  assign CAN_FIRE_s4_mbox_rx_mbox_output_first = 1'd1 ;
  assign WILL_FIRE_s4_mbox_rx_mbox_output_first = 1'd1 ;

  // value method s4_mbox_rx_mbox_output_deq_ena
  assign s4_mbox_rx_mbox_output_deq_ena = CAN_FIRE_RL_rl_capture_muldiv ;

  // action method s4_fbox_rx_fbox_output_notEmpty
  assign CAN_FIRE_s4_fbox_rx_fbox_output_notEmpty = 1'd1 ;
  assign WILL_FIRE_s4_fbox_rx_fbox_output_notEmpty = 1'd1 ;

  // action method s4_fbox_rx_fbox_output_first_deq_rdy
  assign CAN_FIRE_s4_fbox_rx_fbox_output_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_s4_fbox_rx_fbox_output_first_deq_rdy = 1'd1 ;

  // action method s4_fbox_rx_fbox_output_first
  assign CAN_FIRE_s4_fbox_rx_fbox_output_first = 1'd1 ;
  assign WILL_FIRE_s4_fbox_rx_fbox_output_first = 1'd1 ;

  // value method s4_fbox_rx_fbox_output_deq_ena
  assign s4_fbox_rx_fbox_output_deq_ena = CAN_FIRE_RL_rl_capture_float ;

  // rule RL_rl_fwd_baseout
  assign CAN_FIRE_RL_rl_fwd_baseout =
	     rx_rx_fuid_from_stage3_first_deq_rdy_b &&
	     tx_tx_baseout_to_stage5_enq_rdy_b &&
	     rx_rx_baseout_from_stage3_first_deq_rdy_b &&
	     tx_tx_fuid_to_stage5_enq_rdy_b &&
	     tx_tx_commitlog_enq_rdy_b &&
	     rx_rx_commitlog_first_deq_rdy_b &&
	     rx_rx_fuid_from_stage3_first_x[2:0] == 3'd0 ;
  assign WILL_FIRE_RL_rl_fwd_baseout = CAN_FIRE_RL_rl_fwd_baseout ;

  // rule RL_rl_fwd_systemout
  assign CAN_FIRE_RL_rl_fwd_systemout =
	     rx_rx_fuid_from_stage3_first_deq_rdy_b &&
	     tx_tx_fuid_to_stage5_enq_rdy_b &&
	     tx_tx_commitlog_enq_rdy_b &&
	     rx_rx_commitlog_first_deq_rdy_b &&
	     tx_tx_systemout_to_stage5_enq_rdy_b &&
	     rx_rx_systemout_from_stage3_first_deq_rdy_b &&
	     rx_rx_fuid_from_stage3_first_x[2:0] == 3'd1 ;
  assign WILL_FIRE_RL_rl_fwd_systemout = CAN_FIRE_RL_rl_fwd_systemout ;

  // rule RL_rl_fwd_trapout
  assign CAN_FIRE_RL_rl_fwd_trapout =
	     rx_rx_fuid_from_stage3_first_deq_rdy_b &&
	     tx_tx_fuid_to_stage5_enq_rdy_b &&
	     tx_tx_commitlog_enq_rdy_b &&
	     rx_rx_commitlog_first_deq_rdy_b &&
	     tx_tx_trapout_to_stage5_enq_rdy_b &&
	     rx_rx_trapout_from_stage3_first_deq_rdy_b &&
	     rx_rx_fuid_from_stage3_first_x[2:0] == 3'd2 ;
  assign WILL_FIRE_RL_rl_fwd_trapout = CAN_FIRE_RL_rl_fwd_trapout ;

  // rule RL_rl_handle_memory
  assign CAN_FIRE_RL_rl_handle_memory = WILL_FIRE_RL_rl_handle_memory ;
  assign WILL_FIRE_RL_rl_handle_memory =
	     ff_memory_response_rv_port1__read[132] &&
	     rx_rx_fuid_from_stage3_first_deq_rdy_b &&
	     tx_fuid_w_rdy_wget_AND_tx_commitlog_w_rdy_wget_ETC___d79 &&
	     rx_rx_fuid_from_stage3_first_x[2:0] == 3'd3 ;

  // rule RL_rl_capture_muldiv
  assign CAN_FIRE_RL_rl_capture_muldiv =
	     rx_rx_fuid_from_stage3_first_deq_rdy_b &&
	     tx_tx_baseout_to_stage5_enq_rdy_b &&
	     tx_tx_fuid_to_stage5_enq_rdy_b &&
	     tx_tx_commitlog_enq_rdy_b &&
	     rx_rx_commitlog_first_deq_rdy_b &&
	     s4_mbox_rx_mbox_output_first_deq_rdy_b &&
	     rx_rx_fuid_from_stage3_first_x[2:0] == 3'd4 &&
	     s4_mbox_rx_mbox_output_notEmpty_b ;
  assign WILL_FIRE_RL_rl_capture_muldiv = CAN_FIRE_RL_rl_capture_muldiv ;

  // rule RL_rl_capture_float
  assign CAN_FIRE_RL_rl_capture_float =
	     rx_rx_fuid_from_stage3_first_deq_rdy_b &&
	     tx_tx_baseout_to_stage5_enq_rdy_b &&
	     tx_tx_fuid_to_stage5_enq_rdy_b &&
	     tx_tx_commitlog_enq_rdy_b &&
	     rx_rx_commitlog_first_deq_rdy_b &&
	     s4_fbox_rx_fbox_output_first_deq_rdy_b &&
	     rx_rx_fuid_from_stage3_first_x[2:0] == 3'd5 &&
	     s4_fbox_rx_fbox_output_notEmpty_b ;
  assign WILL_FIRE_RL_rl_capture_float = CAN_FIRE_RL_rl_capture_float ;

  // inputs to muxes for submodule ports
  assign MUX_rx_commitlog_w_ena_wset_1__SEL_1 =
	     WILL_FIRE_RL_rl_handle_memory &&
	     ff_memory_response_rv_port1__read__0_BIT_59_5__ETC___d88 ;
  assign MUX_tx_baseout_w_data_wset_1__SEL_1 =
	     WILL_FIRE_RL_rl_handle_memory &&
	     ff_memory_response_rv_port1__read__0_BIT_59_5__ETC___d88 &&
	     !ff_memory_response_rv_port1__read[67] &&
	     !ff_memory_response_rv_port1__read[57] ;
  assign MUX_tx_commitlog_w_data_wset_1__SEL_2 =
	     WILL_FIRE_RL_rl_fwd_trapout || WILL_FIRE_RL_rl_fwd_systemout ;
  assign MUX_tx_fuid_w_data_wset_1__SEL_2 =
	     WILL_FIRE_RL_rl_fwd_trapout || WILL_FIRE_RL_rl_fwd_systemout ||
	     WILL_FIRE_RL_rl_fwd_baseout ;
  assign MUX_tx_fuid_w_data_wset_1__SEL_3 =
	     WILL_FIRE_RL_rl_capture_muldiv || WILL_FIRE_RL_rl_capture_float ;
  assign MUX_tx_trapout_w_data_wset_1__SEL_1 =
	     WILL_FIRE_RL_rl_handle_memory &&
	     ff_memory_response_rv_port1__read__0_BIT_59_5__ETC___d88 &&
	     ff_memory_response_rv_port1__read[67] ;
  assign MUX_tx_baseout_w_data_wset_1__VAL_1 =
	     { rx_rx_fuid_from_stage3_first_x[77:74],
	       5'd0,
	       rx_rx_fuid_from_stage3_first_x[73],
	       baseout_rdvalue__h7697,
	       rx_rx_fuid_from_stage3_first_x[8:3] } ;
  assign MUX_tx_baseout_w_data_wset_1__VAL_3 =
	     { rx_rx_fuid_from_stage3_first_x[77:74],
	       6'd0,
	       s4_mbox_rx_mbox_output_first_x,
	       rx_rx_fuid_from_stage3_first_x[8:3] } ;
  assign MUX_tx_baseout_w_data_wset_1__VAL_4 =
	     { rx_rx_fuid_from_stage3_first_x[77:74],
	       s4_fbox_rx_fbox_output_first_x[4:0],
	       rx_rx_fuid_from_stage3_first_x[73],
	       s4_fbox_rx_fbox_output_first_x[69:6],
	       rx_rx_fuid_from_stage3_first_x[8:3] } ;
  assign MUX_tx_commitlog_w_data_wset_1__VAL_1 =
	     (ff_memory_response_rv_port1__read[67] ||
	      ff_memory_response_rv_port1__read[57]) ?
	       rx_rx_commitlog_first_x :
	       rx_commitlog_w_data_wget__0_BITS_308_TO_211_1__ETC___d123 ;
  assign MUX_tx_commitlog_w_data_wset_1__VAL_3 =
	     { rx_rx_commitlog_first_x[308:211],
	       2'd3,
	       134'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ,
	       rx_rx_baseout_from_stage3_first_x[69:6],
	       rx_rx_commitlog_first_x[10:0] } ;
  assign MUX_tx_commitlog_w_data_wset_1__VAL_4 =
	     { rx_rx_commitlog_first_x[308:211],
	       2'd3,
	       134'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ,
	       s4_mbox_rx_mbox_output_first_x,
	       rx_rx_commitlog_first_x[10:0] } ;
  assign MUX_tx_commitlog_w_data_wset_1__VAL_5 =
	     { rx_rx_commitlog_first_x[308:211],
	       2'd3,
	       134'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ,
	       s4_fbox_rx_fbox_output_first_x[69:6],
	       rx_rx_commitlog_first_x[10:5],
	       s4_fbox_rx_fbox_output_first_x[4:0] } ;
  assign MUX_tx_fuid_w_data_wset_1__VAL_1 =
	     { rx_rx_fuid_from_stage3_first_x[77:3],
	       ff_memory_response_rv_port1__read[67] ?
		 2'd2 :
		 (ff_memory_response_rv_port1__read[57] ? 2'd3 : 2'd0) } ;
  assign MUX_tx_fuid_w_data_wset_1__VAL_2 =
	     { rx_rx_fuid_from_stage3_first_x[77:3],
	       (rx_rx_fuid_from_stage3_first_x[2:0] == 3'd0) ?
		 2'd0 :
		 ((rx_rx_fuid_from_stage3_first_x[2:0] == 3'd1) ?
		    2'd1 :
		    ((rx_rx_fuid_from_stage3_first_x[2:0] == 3'd2) ?
		       2'd2 :
		       ((rx_rx_fuid_from_stage3_first_x[2:0] == 3'd3) ?
			  2'd3 :
			  2'd0))) } ;
  assign MUX_tx_fuid_w_data_wset_1__VAL_3 =
	     { rx_rx_fuid_from_stage3_first_x[77:3], 2'd0 } ;
  assign MUX_tx_trapout_w_data_wset_1__VAL_1 =
	     { 1'd0,
	       ff_memory_response_rv_port1__read[66:60],
	       ff_memory_response_rv_port1__read[131:68] } ;

  // inlined wires
  assign rx_fuid_w_ena_whas =
	     WILL_FIRE_RL_rl_handle_memory &&
	     ff_memory_response_rv_port1__read__0_BIT_59_5__ETC___d88 ||
	     WILL_FIRE_RL_rl_fwd_trapout ||
	     WILL_FIRE_RL_rl_fwd_systemout ||
	     WILL_FIRE_RL_rl_fwd_baseout ||
	     WILL_FIRE_RL_rl_capture_muldiv ||
	     WILL_FIRE_RL_rl_capture_float ;
  assign tx_trapout_w_ena_whas =
	     WILL_FIRE_RL_rl_handle_memory &&
	     ff_memory_response_rv_port1__read__0_BIT_59_5__ETC___d88 &&
	     ff_memory_response_rv_port1__read[67] ||
	     WILL_FIRE_RL_rl_fwd_trapout ;
  assign tx_baseout_w_ena_whas =
	     WILL_FIRE_RL_rl_handle_memory &&
	     ff_memory_response_rv_port1__read__0_BIT_59_5__ETC___d88 &&
	     !ff_memory_response_rv_port1__read[67] &&
	     !ff_memory_response_rv_port1__read[57] ||
	     WILL_FIRE_RL_rl_fwd_baseout ||
	     WILL_FIRE_RL_rl_capture_muldiv ||
	     WILL_FIRE_RL_rl_capture_float ;
  assign tx_memio_w_ena_whas =
	     WILL_FIRE_RL_rl_handle_memory &&
	     ff_memory_response_rv_port1__read__0_BIT_59_5__ETC___d88 &&
	     !ff_memory_response_rv_port1__read[67] &&
	     ff_memory_response_rv_port1__read[57] ;
  assign ff_memory_response_rv_port0__write_1 =
	     { 1'd1, cache_memory_response_put } ;
  assign ff_memory_response_rv_port1__read =
	     EN_cache_memory_response_put ?
	       ff_memory_response_rv_port0__write_1 :
	       ff_memory_response_rv ;
  assign ff_memory_response_rv_port1__write_1 =
	     { 1'd0,
	       132'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign ff_memory_response_rv_port2__read =
	     WILL_FIRE_RL_rl_handle_memory ?
	       ff_memory_response_rv_port1__write_1 :
	       ff_memory_response_rv_port1__read ;

  // register ff_memory_response_rv
  assign ff_memory_response_rv_D_IN = ff_memory_response_rv_port2__read ;
  assign ff_memory_response_rv_EN = 1'b1 ;

  // remaining internal signals
  assign IF_NOT_IF_rx_memoryout_w_data_whas__5_THEN_rx__ETC___d122 =
	     (rx_rx_memoryout_from_stage3_first_x[2:0] != 3'd2 ||
	      rx_rx_memoryout_from_stage3_first_x[8:4] != 5'b00111) ?
	       { rx_rx_commitlog_first_x[208:81],
		 baseout_rdvalue__h7697,
		 rx_rx_commitlog_first_x[16:0] } :
	       { 134'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ,
		 baseout_rdvalue__h7697,
		 rx_rx_fuid_from_stage3_first_x[8:4],
		 !rx_rx_fuid_from_stage3_first_x[73],
		 5'bxxxxx /* unspecified value */  } ;
  assign baseout_rdvalue__h7697 =
	     rx_rx_memoryout_from_stage3_first_x[3] ?
	       { 32'hFFFFFFFF, ff_memory_response_rv_port1__read[99:68] } :
	       ff_memory_response_rv_port1__read[131:68] ;
  assign ff_memory_response_rv_port1__read__0_BIT_59_5__ETC___d88 =
	     ff_memory_response_rv_port1__read[59] ==
	     rx_rx_fuid_from_stage3_first_x[3] ;
  assign rx_commitlog_w_data_wget__0_BITS_308_TO_211_1__ETC___d123 =
	     { rx_rx_commitlog_first_x[308:211],
	       (rx_rx_memoryout_from_stage3_first_x[2:0] == 3'd2 &&
		rx_rx_memoryout_from_stage3_first_x[8:4] == 5'b00111) ?
		 2'd3 :
		 2'd1,
	       IF_NOT_IF_rx_memoryout_w_data_whas__5_THEN_rx__ETC___d122 } ;
  assign tx_fuid_w_rdy_wget_AND_tx_commitlog_w_rdy_wget_ETC___d79 =
	     tx_tx_fuid_to_stage5_enq_rdy_b && tx_tx_commitlog_enq_rdy_b &&
	     rx_rx_commitlog_first_deq_rdy_b &&
	     rx_rx_memoryout_from_stage3_first_deq_rdy_b &&
	     tx_tx_trapout_to_stage5_enq_rdy_b &&
	     tx_tx_memio_to_stage5_enq_rdy_b &&
	     tx_tx_baseout_to_stage5_enq_rdy_b ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        ff_memory_response_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      132'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
      end
    else
      begin
        if (ff_memory_response_rv_EN)
	  ff_memory_response_rv <= `BSV_ASSIGNMENT_DELAY
	      ff_memory_response_rv_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    ff_memory_response_rv = 133'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkstage4

