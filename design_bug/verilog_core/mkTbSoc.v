//
// Generated by Bluespec Compiler, version 2023.07 (build 0eb551dc)
//
// On Tue Jul 29 14:28:39 +04 2025
//
//
// Ports:
// Name                         I/O  size props
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkTbSoc(CLK,
	       RST_N);
  input  CLK;
  input  RST_N;

  // inlined wires
  wire rg_read_rx_1_whas,
       uart_uart_fifoRecv_r_deq_whas,
       uart_uart_pwRecvCellCountReset_whas,
       uart_uart_pwRecvEnableBitCount_whas,
       uart_uart_pwRecvResetBitCount_whas,
       uart_uart_pwXmitCellCountReset_whas,
       uart_uart_pwXmitEnableBitCount_whas,
       uart_uart_pwXmitLoadBuffer_whas,
       uart_uart_pwXmitResetBitCount_whas;

  // register dump
  reg [31 : 0] dump;
  wire [31 : 0] dump_D_IN;
  wire dump_EN;

  // register dump1
  reg [31 : 0] dump1;
  wire [31 : 0] dump1_D_IN;
  wire dump1_EN;

  // register rg_cnt
  reg [4 : 0] rg_cnt;
  wire [4 : 0] rg_cnt_D_IN;
  wire rg_cnt_EN;

  // register rg_inst_count
  reg [31 : 0] rg_inst_count;
  wire [31 : 0] rg_inst_count_D_IN;
  wire rg_inst_count_EN;

  // register rg_prev_misa
  reg [63 : 0] rg_prev_misa;
  wire [63 : 0] rg_prev_misa_D_IN;
  wire rg_prev_misa_EN;

  // register rg_prev_mstatus
  reg [63 : 0] rg_prev_mstatus;
  wire [63 : 0] rg_prev_mstatus_D_IN;
  wire rg_prev_mstatus_EN;

  // register rg_prev_mstatus_valid
  reg rg_prev_mstatus_valid;
  wire rg_prev_mstatus_valid_D_IN, rg_prev_mstatus_valid_EN;

  // register rg_read_rx
  reg rg_read_rx;
  wire rg_read_rx_D_IN, rg_read_rx_EN;

  // register uart_baud_value
  reg [15 : 0] uart_baud_value;
  wire [15 : 0] uart_baud_value_D_IN;
  wire uart_baud_value_EN;

  // register uart_rg_charsize
  reg [5 : 0] uart_rg_charsize;
  wire [5 : 0] uart_rg_charsize_D_IN;
  wire uart_rg_charsize_EN;

  // register uart_rg_delay_control
  reg [15 : 0] uart_rg_delay_control;
  wire [15 : 0] uart_rg_delay_control_D_IN;
  wire uart_rg_delay_control_EN;

  // register uart_rg_interrupt_en
  reg [15 : 0] uart_rg_interrupt_en;
  wire [15 : 0] uart_rg_interrupt_en_D_IN;
  wire uart_rg_interrupt_en_EN;

  // register uart_rg_parity
  reg [1 : 0] uart_rg_parity;
  wire [1 : 0] uart_rg_parity_D_IN;
  wire uart_rg_parity_EN;

  // register uart_rg_rx_threshold
  reg [4 : 0] uart_rg_rx_threshold;
  wire [4 : 0] uart_rg_rx_threshold_D_IN;
  wire uart_rg_rx_threshold_EN;

  // register uart_rg_stopbits
  reg [1 : 0] uart_rg_stopbits;
  wire [1 : 0] uart_rg_stopbits_D_IN;
  wire uart_rg_stopbits_EN;

  // register uart_uart_error_status_register
  reg [3 : 0] uart_uart_error_status_register;
  wire [3 : 0] uart_uart_error_status_register_D_IN;
  wire uart_uart_error_status_register_EN;

  // register uart_uart_fifoRecv_countReg
  reg [4 : 0] uart_uart_fifoRecv_countReg;
  wire [4 : 0] uart_uart_fifoRecv_countReg_D_IN;
  wire uart_uart_fifoRecv_countReg_EN;

  // register uart_uart_fifoXmit_countReg
  reg [4 : 0] uart_uart_fifoXmit_countReg;
  wire [4 : 0] uart_uart_fifoXmit_countReg_D_IN;
  wire uart_uart_fifoXmit_countReg_EN;

  // register uart_uart_fifo_almost_full
  reg uart_uart_fifo_almost_full;
  wire uart_uart_fifo_almost_full_D_IN, uart_uart_fifo_almost_full_EN;

  // register uart_uart_out_enable
  reg uart_uart_out_enable;
  wire uart_uart_out_enable_D_IN, uart_uart_out_enable_EN;

  // register uart_uart_rRecvBitCount
  reg [5 : 0] uart_uart_rRecvBitCount;
  wire [5 : 0] uart_uart_rRecvBitCount_D_IN;
  wire uart_uart_rRecvBitCount_EN;

  // register uart_uart_rRecvCellCount
  reg [3 : 0] uart_uart_rRecvCellCount;
  wire [3 : 0] uart_uart_rRecvCellCount_D_IN;
  wire uart_uart_rRecvCellCount_EN;

  // register uart_uart_rRecvData
  reg uart_uart_rRecvData;
  wire uart_uart_rRecvData_D_IN, uart_uart_rRecvData_EN;

  // register uart_uart_rRecvParity
  reg uart_uart_rRecvParity;
  wire uart_uart_rRecvParity_D_IN, uart_uart_rRecvParity_EN;

  // register uart_uart_rRecvState
  reg [2 : 0] uart_uart_rRecvState;
  reg [2 : 0] uart_uart_rRecvState_D_IN;
  wire uart_uart_rRecvState_EN;

  // register uart_uart_rXmitBitCount
  reg [5 : 0] uart_uart_rXmitBitCount;
  wire [5 : 0] uart_uart_rXmitBitCount_D_IN;
  wire uart_uart_rXmitBitCount_EN;

  // register uart_uart_rXmitCellCount
  reg [3 : 0] uart_uart_rXmitCellCount;
  wire [3 : 0] uart_uart_rXmitCellCount_D_IN;
  wire uart_uart_rXmitCellCount_EN;

  // register uart_uart_rXmitDataOut
  reg uart_uart_rXmitDataOut;
  reg uart_uart_rXmitDataOut_D_IN;
  wire uart_uart_rXmitDataOut_EN;

  // register uart_uart_rXmitParity
  reg uart_uart_rXmitParity;
  wire uart_uart_rXmitParity_D_IN, uart_uart_rXmitParity_EN;

  // register uart_uart_rXmitState
  reg [3 : 0] uart_uart_rXmitState;
  reg [3 : 0] uart_uart_rXmitState_D_IN;
  wire uart_uart_rXmitState_EN;

  // register uart_uart_rg_delay_count
  reg [15 : 0] uart_uart_rg_delay_count;
  reg [15 : 0] uart_uart_rg_delay_count_D_IN;
  wire uart_uart_rg_delay_count_EN;

  // register uart_uart_vrRecvBuffer_0
  reg uart_uart_vrRecvBuffer_0;
  wire uart_uart_vrRecvBuffer_0_D_IN, uart_uart_vrRecvBuffer_0_EN;

  // register uart_uart_vrRecvBuffer_1
  reg uart_uart_vrRecvBuffer_1;
  wire uart_uart_vrRecvBuffer_1_D_IN, uart_uart_vrRecvBuffer_1_EN;

  // register uart_uart_vrRecvBuffer_10
  reg uart_uart_vrRecvBuffer_10;
  wire uart_uart_vrRecvBuffer_10_D_IN, uart_uart_vrRecvBuffer_10_EN;

  // register uart_uart_vrRecvBuffer_11
  reg uart_uart_vrRecvBuffer_11;
  wire uart_uart_vrRecvBuffer_11_D_IN, uart_uart_vrRecvBuffer_11_EN;

  // register uart_uart_vrRecvBuffer_12
  reg uart_uart_vrRecvBuffer_12;
  wire uart_uart_vrRecvBuffer_12_D_IN, uart_uart_vrRecvBuffer_12_EN;

  // register uart_uart_vrRecvBuffer_13
  reg uart_uart_vrRecvBuffer_13;
  wire uart_uart_vrRecvBuffer_13_D_IN, uart_uart_vrRecvBuffer_13_EN;

  // register uart_uart_vrRecvBuffer_14
  reg uart_uart_vrRecvBuffer_14;
  wire uart_uart_vrRecvBuffer_14_D_IN, uart_uart_vrRecvBuffer_14_EN;

  // register uart_uart_vrRecvBuffer_15
  reg uart_uart_vrRecvBuffer_15;
  wire uart_uart_vrRecvBuffer_15_D_IN, uart_uart_vrRecvBuffer_15_EN;

  // register uart_uart_vrRecvBuffer_16
  reg uart_uart_vrRecvBuffer_16;
  wire uart_uart_vrRecvBuffer_16_D_IN, uart_uart_vrRecvBuffer_16_EN;

  // register uart_uart_vrRecvBuffer_17
  reg uart_uart_vrRecvBuffer_17;
  wire uart_uart_vrRecvBuffer_17_D_IN, uart_uart_vrRecvBuffer_17_EN;

  // register uart_uart_vrRecvBuffer_18
  reg uart_uart_vrRecvBuffer_18;
  wire uart_uart_vrRecvBuffer_18_D_IN, uart_uart_vrRecvBuffer_18_EN;

  // register uart_uart_vrRecvBuffer_19
  reg uart_uart_vrRecvBuffer_19;
  wire uart_uart_vrRecvBuffer_19_D_IN, uart_uart_vrRecvBuffer_19_EN;

  // register uart_uart_vrRecvBuffer_2
  reg uart_uart_vrRecvBuffer_2;
  wire uart_uart_vrRecvBuffer_2_D_IN, uart_uart_vrRecvBuffer_2_EN;

  // register uart_uart_vrRecvBuffer_20
  reg uart_uart_vrRecvBuffer_20;
  wire uart_uart_vrRecvBuffer_20_D_IN, uart_uart_vrRecvBuffer_20_EN;

  // register uart_uart_vrRecvBuffer_21
  reg uart_uart_vrRecvBuffer_21;
  wire uart_uart_vrRecvBuffer_21_D_IN, uart_uart_vrRecvBuffer_21_EN;

  // register uart_uart_vrRecvBuffer_22
  reg uart_uart_vrRecvBuffer_22;
  wire uart_uart_vrRecvBuffer_22_D_IN, uart_uart_vrRecvBuffer_22_EN;

  // register uart_uart_vrRecvBuffer_23
  reg uart_uart_vrRecvBuffer_23;
  wire uart_uart_vrRecvBuffer_23_D_IN, uart_uart_vrRecvBuffer_23_EN;

  // register uart_uart_vrRecvBuffer_24
  reg uart_uart_vrRecvBuffer_24;
  wire uart_uart_vrRecvBuffer_24_D_IN, uart_uart_vrRecvBuffer_24_EN;

  // register uart_uart_vrRecvBuffer_25
  reg uart_uart_vrRecvBuffer_25;
  wire uart_uart_vrRecvBuffer_25_D_IN, uart_uart_vrRecvBuffer_25_EN;

  // register uart_uart_vrRecvBuffer_26
  reg uart_uart_vrRecvBuffer_26;
  wire uart_uart_vrRecvBuffer_26_D_IN, uart_uart_vrRecvBuffer_26_EN;

  // register uart_uart_vrRecvBuffer_27
  reg uart_uart_vrRecvBuffer_27;
  wire uart_uart_vrRecvBuffer_27_D_IN, uart_uart_vrRecvBuffer_27_EN;

  // register uart_uart_vrRecvBuffer_28
  reg uart_uart_vrRecvBuffer_28;
  wire uart_uart_vrRecvBuffer_28_D_IN, uart_uart_vrRecvBuffer_28_EN;

  // register uart_uart_vrRecvBuffer_29
  reg uart_uart_vrRecvBuffer_29;
  wire uart_uart_vrRecvBuffer_29_D_IN, uart_uart_vrRecvBuffer_29_EN;

  // register uart_uart_vrRecvBuffer_3
  reg uart_uart_vrRecvBuffer_3;
  wire uart_uart_vrRecvBuffer_3_D_IN, uart_uart_vrRecvBuffer_3_EN;

  // register uart_uart_vrRecvBuffer_30
  reg uart_uart_vrRecvBuffer_30;
  wire uart_uart_vrRecvBuffer_30_D_IN, uart_uart_vrRecvBuffer_30_EN;

  // register uart_uart_vrRecvBuffer_31
  reg uart_uart_vrRecvBuffer_31;
  wire uart_uart_vrRecvBuffer_31_D_IN, uart_uart_vrRecvBuffer_31_EN;

  // register uart_uart_vrRecvBuffer_4
  reg uart_uart_vrRecvBuffer_4;
  wire uart_uart_vrRecvBuffer_4_D_IN, uart_uart_vrRecvBuffer_4_EN;

  // register uart_uart_vrRecvBuffer_5
  reg uart_uart_vrRecvBuffer_5;
  wire uart_uart_vrRecvBuffer_5_D_IN, uart_uart_vrRecvBuffer_5_EN;

  // register uart_uart_vrRecvBuffer_6
  reg uart_uart_vrRecvBuffer_6;
  wire uart_uart_vrRecvBuffer_6_D_IN, uart_uart_vrRecvBuffer_6_EN;

  // register uart_uart_vrRecvBuffer_7
  reg uart_uart_vrRecvBuffer_7;
  wire uart_uart_vrRecvBuffer_7_D_IN, uart_uart_vrRecvBuffer_7_EN;

  // register uart_uart_vrRecvBuffer_8
  reg uart_uart_vrRecvBuffer_8;
  wire uart_uart_vrRecvBuffer_8_D_IN, uart_uart_vrRecvBuffer_8_EN;

  // register uart_uart_vrRecvBuffer_9
  reg uart_uart_vrRecvBuffer_9;
  wire uart_uart_vrRecvBuffer_9_D_IN, uart_uart_vrRecvBuffer_9_EN;

  // register uart_uart_vrXmitBuffer_0
  reg uart_uart_vrXmitBuffer_0;
  wire uart_uart_vrXmitBuffer_0_D_IN, uart_uart_vrXmitBuffer_0_EN;

  // register uart_uart_vrXmitBuffer_1
  reg uart_uart_vrXmitBuffer_1;
  wire uart_uart_vrXmitBuffer_1_D_IN, uart_uart_vrXmitBuffer_1_EN;

  // register uart_uart_vrXmitBuffer_10
  reg uart_uart_vrXmitBuffer_10;
  wire uart_uart_vrXmitBuffer_10_D_IN, uart_uart_vrXmitBuffer_10_EN;

  // register uart_uart_vrXmitBuffer_11
  reg uart_uart_vrXmitBuffer_11;
  wire uart_uart_vrXmitBuffer_11_D_IN, uart_uart_vrXmitBuffer_11_EN;

  // register uart_uart_vrXmitBuffer_12
  reg uart_uart_vrXmitBuffer_12;
  wire uart_uart_vrXmitBuffer_12_D_IN, uart_uart_vrXmitBuffer_12_EN;

  // register uart_uart_vrXmitBuffer_13
  reg uart_uart_vrXmitBuffer_13;
  wire uart_uart_vrXmitBuffer_13_D_IN, uart_uart_vrXmitBuffer_13_EN;

  // register uart_uart_vrXmitBuffer_14
  reg uart_uart_vrXmitBuffer_14;
  wire uart_uart_vrXmitBuffer_14_D_IN, uart_uart_vrXmitBuffer_14_EN;

  // register uart_uart_vrXmitBuffer_15
  reg uart_uart_vrXmitBuffer_15;
  wire uart_uart_vrXmitBuffer_15_D_IN, uart_uart_vrXmitBuffer_15_EN;

  // register uart_uart_vrXmitBuffer_16
  reg uart_uart_vrXmitBuffer_16;
  wire uart_uart_vrXmitBuffer_16_D_IN, uart_uart_vrXmitBuffer_16_EN;

  // register uart_uart_vrXmitBuffer_17
  reg uart_uart_vrXmitBuffer_17;
  wire uart_uart_vrXmitBuffer_17_D_IN, uart_uart_vrXmitBuffer_17_EN;

  // register uart_uart_vrXmitBuffer_18
  reg uart_uart_vrXmitBuffer_18;
  wire uart_uart_vrXmitBuffer_18_D_IN, uart_uart_vrXmitBuffer_18_EN;

  // register uart_uart_vrXmitBuffer_19
  reg uart_uart_vrXmitBuffer_19;
  wire uart_uart_vrXmitBuffer_19_D_IN, uart_uart_vrXmitBuffer_19_EN;

  // register uart_uart_vrXmitBuffer_2
  reg uart_uart_vrXmitBuffer_2;
  wire uart_uart_vrXmitBuffer_2_D_IN, uart_uart_vrXmitBuffer_2_EN;

  // register uart_uart_vrXmitBuffer_20
  reg uart_uart_vrXmitBuffer_20;
  wire uart_uart_vrXmitBuffer_20_D_IN, uart_uart_vrXmitBuffer_20_EN;

  // register uart_uart_vrXmitBuffer_21
  reg uart_uart_vrXmitBuffer_21;
  wire uart_uart_vrXmitBuffer_21_D_IN, uart_uart_vrXmitBuffer_21_EN;

  // register uart_uart_vrXmitBuffer_22
  reg uart_uart_vrXmitBuffer_22;
  wire uart_uart_vrXmitBuffer_22_D_IN, uart_uart_vrXmitBuffer_22_EN;

  // register uart_uart_vrXmitBuffer_23
  reg uart_uart_vrXmitBuffer_23;
  wire uart_uart_vrXmitBuffer_23_D_IN, uart_uart_vrXmitBuffer_23_EN;

  // register uart_uart_vrXmitBuffer_24
  reg uart_uart_vrXmitBuffer_24;
  wire uart_uart_vrXmitBuffer_24_D_IN, uart_uart_vrXmitBuffer_24_EN;

  // register uart_uart_vrXmitBuffer_25
  reg uart_uart_vrXmitBuffer_25;
  wire uart_uart_vrXmitBuffer_25_D_IN, uart_uart_vrXmitBuffer_25_EN;

  // register uart_uart_vrXmitBuffer_26
  reg uart_uart_vrXmitBuffer_26;
  wire uart_uart_vrXmitBuffer_26_D_IN, uart_uart_vrXmitBuffer_26_EN;

  // register uart_uart_vrXmitBuffer_27
  reg uart_uart_vrXmitBuffer_27;
  wire uart_uart_vrXmitBuffer_27_D_IN, uart_uart_vrXmitBuffer_27_EN;

  // register uart_uart_vrXmitBuffer_28
  reg uart_uart_vrXmitBuffer_28;
  wire uart_uart_vrXmitBuffer_28_D_IN, uart_uart_vrXmitBuffer_28_EN;

  // register uart_uart_vrXmitBuffer_29
  reg uart_uart_vrXmitBuffer_29;
  wire uart_uart_vrXmitBuffer_29_D_IN, uart_uart_vrXmitBuffer_29_EN;

  // register uart_uart_vrXmitBuffer_3
  reg uart_uart_vrXmitBuffer_3;
  wire uart_uart_vrXmitBuffer_3_D_IN, uart_uart_vrXmitBuffer_3_EN;

  // register uart_uart_vrXmitBuffer_30
  reg uart_uart_vrXmitBuffer_30;
  wire uart_uart_vrXmitBuffer_30_D_IN, uart_uart_vrXmitBuffer_30_EN;

  // register uart_uart_vrXmitBuffer_31
  reg uart_uart_vrXmitBuffer_31;
  wire uart_uart_vrXmitBuffer_31_D_IN, uart_uart_vrXmitBuffer_31_EN;

  // register uart_uart_vrXmitBuffer_4
  reg uart_uart_vrXmitBuffer_4;
  wire uart_uart_vrXmitBuffer_4_D_IN, uart_uart_vrXmitBuffer_4_EN;

  // register uart_uart_vrXmitBuffer_5
  reg uart_uart_vrXmitBuffer_5;
  wire uart_uart_vrXmitBuffer_5_D_IN, uart_uart_vrXmitBuffer_5_EN;

  // register uart_uart_vrXmitBuffer_6
  reg uart_uart_vrXmitBuffer_6;
  wire uart_uart_vrXmitBuffer_6_D_IN, uart_uart_vrXmitBuffer_6_EN;

  // register uart_uart_vrXmitBuffer_7
  reg uart_uart_vrXmitBuffer_7;
  wire uart_uart_vrXmitBuffer_7_D_IN, uart_uart_vrXmitBuffer_7_EN;

  // register uart_uart_vrXmitBuffer_8
  reg uart_uart_vrXmitBuffer_8;
  wire uart_uart_vrXmitBuffer_8_D_IN, uart_uart_vrXmitBuffer_8_EN;

  // register uart_uart_vrXmitBuffer_9
  reg uart_uart_vrXmitBuffer_9;
  wire uart_uart_vrXmitBuffer_9_D_IN, uart_uart_vrXmitBuffer_9_EN;

  // ports of submodule soc
  wire [309 : 0] soc_soc_sb_commitlog;
  wire [63 : 0] soc_soc_sb_sbread_mv_csr_customcontrol,
		soc_soc_sb_sbread_mv_csr_dcsr,
		soc_soc_sb_sbread_mv_csr_dpc,
		soc_soc_sb_sbread_mv_csr_dscratch0,
		soc_soc_sb_sbread_mv_csr_dscratch1,
		soc_soc_sb_sbread_mv_csr_fcsr,
		soc_soc_sb_sbread_mv_csr_marchid,
		soc_soc_sb_sbread_mv_csr_mcause,
		soc_soc_sb_sbread_mv_csr_mcycle,
		soc_soc_sb_sbread_mv_csr_medeleg,
		soc_soc_sb_sbread_mv_csr_menvcfg,
		soc_soc_sb_sbread_mv_csr_mepc,
		soc_soc_sb_sbread_mv_csr_mhartid,
		soc_soc_sb_sbread_mv_csr_mhpmcounter3,
		soc_soc_sb_sbread_mv_csr_mhpmcounter4,
		soc_soc_sb_sbread_mv_csr_mhpmcounter5,
		soc_soc_sb_sbread_mv_csr_mhpmcounter6,
		soc_soc_sb_sbread_mv_csr_mhpmevent3,
		soc_soc_sb_sbread_mv_csr_mhpmevent4,
		soc_soc_sb_sbread_mv_csr_mhpmevent5,
		soc_soc_sb_sbread_mv_csr_mhpmevent6,
		soc_soc_sb_sbread_mv_csr_mideleg,
		soc_soc_sb_sbread_mv_csr_mie,
		soc_soc_sb_sbread_mv_csr_mimpid,
		soc_soc_sb_sbread_mv_csr_minstret,
		soc_soc_sb_sbread_mv_csr_mip,
		soc_soc_sb_sbread_mv_csr_misa,
		soc_soc_sb_sbread_mv_csr_mscratch,
		soc_soc_sb_sbread_mv_csr_mstatus,
		soc_soc_sb_sbread_mv_csr_mtval,
		soc_soc_sb_sbread_mv_csr_mtvec,
		soc_soc_sb_sbread_mv_csr_pmpcfg0,
		soc_soc_sb_sbread_mv_csr_satp,
		soc_soc_sb_sbread_mv_csr_scause,
		soc_soc_sb_sbread_mv_csr_senvcfg,
		soc_soc_sb_sbread_mv_csr_sepc,
		soc_soc_sb_sbread_mv_csr_sie,
		soc_soc_sb_sbread_mv_csr_sip,
		soc_soc_sb_sbread_mv_csr_sscratch,
		soc_soc_sb_sbread_mv_csr_stval,
		soc_soc_sb_sbread_mv_csr_stvec,
		soc_soc_sb_sbread_mv_csr_time;
  wire [31 : 0] soc_soc_sb_sbread_mv_csr_mcounteren,
		soc_soc_sb_sbread_mv_csr_mcountinhibit,
		soc_soc_sb_sbread_mv_csr_mvendorid,
		soc_soc_sb_sbread_mv_csr_scounteren;
  wire [29 : 0] soc_soc_sb_sbread_mv_csr_pmpaddr0,
		soc_soc_sb_sbread_mv_csr_pmpaddr1,
		soc_soc_sb_sbread_mv_csr_pmpaddr2,
		soc_soc_sb_sbread_mv_csr_pmpaddr3;
  wire [4 : 0] soc_soc_sb_sbread_mv_csr_fflags;
  wire [2 : 0] soc_soc_sb_sbread_mv_csr_frm;
  wire soc_uart_io_SIN,
       soc_uart_io_SOUT,
       soc_wire_tdi_tdi_in,
       soc_wire_tms_tms_in;

  // ports of submodule tck_clk
  wire tck_clk_CLK_IN,
       tck_clk_CLK_IN_EN,
       tck_clk_CLK_OUT,
       tck_clk_COND_IN,
       tck_clk_COND_IN_EN;

  // ports of submodule trst
  wire trst_ASSERT_IN, trst_OUT_RST;

  // ports of submodule uart_uart_baudGen_rBaudCounter
  wire [15 : 0] uart_uart_baudGen_rBaudCounter_DATA_A,
		uart_uart_baudGen_rBaudCounter_DATA_B,
		uart_uart_baudGen_rBaudCounter_DATA_C,
		uart_uart_baudGen_rBaudCounter_DATA_F,
		uart_uart_baudGen_rBaudCounter_Q_OUT;
  wire uart_uart_baudGen_rBaudCounter_ADDA,
       uart_uart_baudGen_rBaudCounter_ADDB,
       uart_uart_baudGen_rBaudCounter_SETC,
       uart_uart_baudGen_rBaudCounter_SETF;

  // ports of submodule uart_uart_baudGen_rBaudTickCounter
  wire [2 : 0] uart_uart_baudGen_rBaudTickCounter_DATA_A,
	       uart_uart_baudGen_rBaudTickCounter_DATA_B,
	       uart_uart_baudGen_rBaudTickCounter_DATA_C,
	       uart_uart_baudGen_rBaudTickCounter_DATA_F,
	       uart_uart_baudGen_rBaudTickCounter_Q_OUT;
  wire uart_uart_baudGen_rBaudTickCounter_ADDA,
       uart_uart_baudGen_rBaudTickCounter_ADDB,
       uart_uart_baudGen_rBaudTickCounter_SETC,
       uart_uart_baudGen_rBaudTickCounter_SETF;

  // ports of submodule uart_uart_fifoRecv
  wire [31 : 0] uart_uart_fifoRecv_D_IN, uart_uart_fifoRecv_D_OUT;
  wire uart_uart_fifoRecv_CLR,
       uart_uart_fifoRecv_DEQ,
       uart_uart_fifoRecv_EMPTY_N,
       uart_uart_fifoRecv_ENQ,
       uart_uart_fifoRecv_FULL_N;

  // ports of submodule uart_uart_fifoXmit
  wire [31 : 0] uart_uart_fifoXmit_D_IN, uart_uart_fifoXmit_D_OUT;
  wire uart_uart_fifoXmit_CLR,
       uart_uart_fifoXmit_DEQ,
       uart_uart_fifoXmit_EMPTY_N,
       uart_uart_fifoXmit_ENQ;

  // rule scheduling signals
  wire CAN_FIRE_RL_check_if_character_present,
       CAN_FIRE_RL_connect_jtag_io,
       CAN_FIRE_RL_connect_uart_in,
       CAN_FIRE_RL_connect_uart_out,
       CAN_FIRE_RL_display_eol,
       CAN_FIRE_RL_open_file_app,
       CAN_FIRE_RL_open_file_rtldump,
       CAN_FIRE_RL_rg_read_rx__dreg_update,
       CAN_FIRE_RL_uart_rl_send_rx_threshold,
       CAN_FIRE_RL_uart_uart_baudGen_assert_2x_baud_tick,
       CAN_FIRE_RL_uart_uart_baudGen_baud_count_wire,
       CAN_FIRE_RL_uart_uart_baudGen_baud_tick_count_wire,
       CAN_FIRE_RL_uart_uart_baudGen_count_baudtick_16x,
       CAN_FIRE_RL_uart_uart_baud_generator_clock_enable,
       CAN_FIRE_RL_uart_uart_fifoRecv__updateLevelCounter,
       CAN_FIRE_RL_uart_uart_fifoXmit__updateLevelCounter,
       CAN_FIRE_RL_uart_uart_receive_bit_cell_time_counter,
       CAN_FIRE_RL_uart_uart_receive_bit_counter,
       CAN_FIRE_RL_uart_uart_receive_buffer_shift,
       CAN_FIRE_RL_uart_uart_receive_find_center_of_bit_cell,
       CAN_FIRE_RL_uart_uart_receive_parity_bit,
       CAN_FIRE_RL_uart_uart_receive_sample_pin,
       CAN_FIRE_RL_uart_uart_receive_stop_first_bit,
       CAN_FIRE_RL_uart_uart_receive_stop_last_bit,
       CAN_FIRE_RL_uart_uart_receive_wait_bit_cell_time_for_sample,
       CAN_FIRE_RL_uart_uart_receive_wait_for_start_bit,
       CAN_FIRE_RL_uart_uart_rl_delay_control,
       CAN_FIRE_RL_uart_uart_rl_update_fifo_almost_full,
       CAN_FIRE_RL_uart_uart_transmit_bit_cell_time_counter,
       CAN_FIRE_RL_uart_uart_transmit_bit_counter,
       CAN_FIRE_RL_uart_uart_transmit_buffer_load,
       CAN_FIRE_RL_uart_uart_transmit_buffer_shift,
       CAN_FIRE_RL_uart_uart_transmit_send_parity_bit,
       CAN_FIRE_RL_uart_uart_transmit_send_start_bit,
       CAN_FIRE_RL_uart_uart_transmit_send_stop_bit,
       CAN_FIRE_RL_uart_uart_transmit_send_stop_bit1_5,
       CAN_FIRE_RL_uart_uart_transmit_send_stop_bit2,
       CAN_FIRE_RL_uart_uart_transmit_shift_next_bit,
       CAN_FIRE_RL_uart_uart_transmit_wait_1_bit_cell_time,
       CAN_FIRE_RL_uart_uart_transmit_wait_for_start_command,
       CAN_FIRE_RL_write_dump_file,
       CAN_FIRE_RL_write_received_character,
       WILL_FIRE_RL_check_if_character_present,
       WILL_FIRE_RL_connect_jtag_io,
       WILL_FIRE_RL_connect_uart_in,
       WILL_FIRE_RL_connect_uart_out,
       WILL_FIRE_RL_display_eol,
       WILL_FIRE_RL_open_file_app,
       WILL_FIRE_RL_open_file_rtldump,
       WILL_FIRE_RL_rg_read_rx__dreg_update,
       WILL_FIRE_RL_uart_rl_send_rx_threshold,
       WILL_FIRE_RL_uart_uart_baudGen_assert_2x_baud_tick,
       WILL_FIRE_RL_uart_uart_baudGen_baud_count_wire,
       WILL_FIRE_RL_uart_uart_baudGen_baud_tick_count_wire,
       WILL_FIRE_RL_uart_uart_baudGen_count_baudtick_16x,
       WILL_FIRE_RL_uart_uart_baud_generator_clock_enable,
       WILL_FIRE_RL_uart_uart_fifoRecv__updateLevelCounter,
       WILL_FIRE_RL_uart_uart_fifoXmit__updateLevelCounter,
       WILL_FIRE_RL_uart_uart_receive_bit_cell_time_counter,
       WILL_FIRE_RL_uart_uart_receive_bit_counter,
       WILL_FIRE_RL_uart_uart_receive_buffer_shift,
       WILL_FIRE_RL_uart_uart_receive_find_center_of_bit_cell,
       WILL_FIRE_RL_uart_uart_receive_parity_bit,
       WILL_FIRE_RL_uart_uart_receive_sample_pin,
       WILL_FIRE_RL_uart_uart_receive_stop_first_bit,
       WILL_FIRE_RL_uart_uart_receive_stop_last_bit,
       WILL_FIRE_RL_uart_uart_receive_wait_bit_cell_time_for_sample,
       WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit,
       WILL_FIRE_RL_uart_uart_rl_delay_control,
       WILL_FIRE_RL_uart_uart_rl_update_fifo_almost_full,
       WILL_FIRE_RL_uart_uart_transmit_bit_cell_time_counter,
       WILL_FIRE_RL_uart_uart_transmit_bit_counter,
       WILL_FIRE_RL_uart_uart_transmit_buffer_load,
       WILL_FIRE_RL_uart_uart_transmit_buffer_shift,
       WILL_FIRE_RL_uart_uart_transmit_send_parity_bit,
       WILL_FIRE_RL_uart_uart_transmit_send_start_bit,
       WILL_FIRE_RL_uart_uart_transmit_send_stop_bit,
       WILL_FIRE_RL_uart_uart_transmit_send_stop_bit1_5,
       WILL_FIRE_RL_uart_uart_transmit_send_stop_bit2,
       WILL_FIRE_RL_uart_uart_transmit_shift_next_bit,
       WILL_FIRE_RL_uart_uart_transmit_wait_1_bit_cell_time,
       WILL_FIRE_RL_uart_uart_transmit_wait_for_start_command,
       WILL_FIRE_RL_write_dump_file,
       WILL_FIRE_RL_write_received_character;

  // inputs to muxes for submodule ports
  wire [15 : 0] MUX_uart_uart_rg_delay_count_write_1__VAL_1;
  wire [3 : 0] MUX_uart_uart_rXmitState_write_1__VAL_2,
	       MUX_uart_uart_rXmitState_write_1__VAL_3,
	       MUX_uart_uart_rXmitState_write_1__VAL_4,
	       MUX_uart_uart_rXmitState_write_1__VAL_5,
	       MUX_uart_uart_rXmitState_write_1__VAL_6,
	       MUX_uart_uart_rXmitState_write_1__VAL_7,
	       MUX_uart_uart_rXmitState_write_1__VAL_8;
  wire [2 : 0] MUX_uart_uart_rRecvState_write_1__VAL_1,
	       MUX_uart_uart_rRecvState_write_1__VAL_2,
	       MUX_uart_uart_rRecvState_write_1__VAL_3,
	       MUX_uart_uart_rRecvState_write_1__VAL_4;
  wire MUX_dump_write_1__SEL_1,
       MUX_uart_uart_out_enable_write_1__SEL_1,
       MUX_uart_uart_rRecvState_write_1__SEL_6,
       MUX_uart_uart_rXmitDataOut_write_1__SEL_1,
       MUX_uart_uart_rXmitDataOut_write_1__SEL_4,
       MUX_uart_uart_rXmitDataOut_write_1__VAL_2,
       MUX_uart_uart_rXmitState_write_1__SEL_1,
       MUX_uart_uart_rg_delay_count_write_1__SEL_1,
       MUX_uart_uart_rg_delay_count_write_1__SEL_2;

  // declarations used by system tasks
  // synopsys translate_off
  reg [63 : 0] Task__time__avValue1;
  reg TASK_testplusargs___d368;
  reg [31 : 0] TASK_fopen___d369;
  reg TASK_testplusargs___d399;
  reg [31 : 0] Task__stime__avValue2;
  reg [31 : 0] TASK_fopen___d412;
  reg [31 : 0] TASK_fopen___d373;
  reg NOT_soc_soc_sb_commitlog__89_BITS_242_TO_211_9_ETC___d407;
  reg NOT_soc_soc_sb_commitlog__89_BITS_242_TO_211_9_ETC___d949;
  reg soc_soc_sb_commitlog__89_BIT_309_90_AND_NOT_so_ETC___d533;
  reg soc_soc_sb_commitlog__89_BIT_309_90_AND_NOT_so_ETC___d955;
  reg soc_soc_sb_commitlog__89_BIT_309_90_AND_NOT_so_ETC___d969;
  // synopsys translate_on

  // remaining internal signals
  reg [63 : 0] store_data___1__h52357, wdata__h47052;
  reg [11 : 0] _theResult_____2__h46826;
  wire [63 : 0] _theResult_____2__h51166,
		data__h39642,
		op1___1__h52427,
		op1__h52368,
		op2___1__h52428,
		op2__h52369,
		socsoc_sb_commitlog_BITS_144_TO_81__q4,
		socsoc_sb_commitlog_BITS_80_TO_17__q1,
		wdata_fflags__h49796,
		wdata_frm__h49797;
  wire [31 : 0] IF_uart_uart_fifoRecv_notEmpty__80_THEN_uart_u_ETC___d387,
		bitdata__h17366,
		socsoc_sb_commitlog_BITS_144_TO_81_BITS_31_TO_0__q5,
		socsoc_sb_commitlog_BITS_80_TO_17_BITS_31_TO_0__q2,
		v__h39512,
		x__h40214,
		x__h40270;
  wire [15 : 0] x__h35051;
  wire [11 : 0] csr_address___1__h47178;
  wire [5 : 0] x__h13372,
	       x__h22884,
	       x__h40014,
	       y__h17131,
	       y__h17153,
	       y__h35965;
  wire [4 : 0] socsoc_sb_commitlog_BITS_4_TO_0__q3;
  wire [3 : 0] x__h22858, x__h6820;
  wire [2 : 0] IF_uart_uart_rRecvBitCount_2_EQ_uart_rg_charsi_ETC___d104;
  wire IF_IF_soc_soc_sb_commitlog__89_BITS_210_TO_209_ETC___d1047,
       IF_IF_soc_soc_sb_commitlog__89_BITS_210_TO_209_ETC___d1052,
       NOT_rg_prev_mstatus_valid_58_59_OR_NOT_soc_soc_ETC___d964,
       _dand2uart_uart_pwXmitCellCountReset_EN_wset,
       soc_soc_sb_commitlog__89_BIT_309_90_AND_NOT_so_ETC___d941,
       uart_uart_baudGen_rBaudCounter_value_PLUS_1_8__ETC___d30,
       uart_uart_rXmitBitCount_88_EQ_uart_rg_charsize_ETC___d321,
       uart_uart_rg_delay_count_99_EQ_uart_rg_delay_c_ETC___d301,
       uart_uart_vrRecvBuffer_0_30_XOR_uart_uart_vrRe_ETC___d169,
       x__h36835,
       z__h21892,
       z__h21899,
       z__h21906,
       z__h21913,
       z__h21920,
       z__h21927,
       z__h21934,
       z__h21941,
       z__h21948,
       z__h21955,
       z__h21962,
       z__h21969,
       z__h21976,
       z__h21983,
       z__h21990,
       z__h21997,
       z__h22004,
       z__h22011,
       z__h22018,
       z__h22025,
       z__h22032,
       z__h22039,
       z__h22046,
       z__h22053,
       z__h22060,
       z__h22067,
       z__h22074,
       z__h22081,
       z__h22088,
       z__h22095,
       z__h22102,
       z__h28157,
       z__h28164,
       z__h28171,
       z__h28178,
       z__h28185,
       z__h28192,
       z__h28199,
       z__h28206,
       z__h28213,
       z__h28220,
       z__h28227,
       z__h28234,
       z__h28241,
       z__h28248,
       z__h28255,
       z__h28262,
       z__h28269,
       z__h28276,
       z__h28283,
       z__h28290,
       z__h28297,
       z__h28304,
       z__h28311,
       z__h28318,
       z__h28325,
       z__h28332,
       z__h28339,
       z__h28346,
       z__h28353,
       z__h28360;

  // submodule soc
  mkDebugSoc soc(.CLK_tck_clk(tck_clk_CLK_OUT),
		 .RST_N_trst(trst_OUT_RST),
		 .CLK(CLK),
		 .RST_N(RST_N),
		 .uart_io_SIN(soc_uart_io_SIN),
		 .wire_tdi_tdi_in(soc_wire_tdi_tdi_in),
		 .wire_tms_tms_in(soc_wire_tms_tms_in),
		 .soc_sb_sbread_mv_csr_misa(soc_soc_sb_sbread_mv_csr_misa),
		 .RDY_soc_sb_sbread_mv_csr_misa(),
		 .soc_sb_sbread_mv_csr_mvendorid(soc_soc_sb_sbread_mv_csr_mvendorid),
		 .RDY_soc_sb_sbread_mv_csr_mvendorid(),
		 .soc_sb_sbread_mv_csr_stvec(soc_soc_sb_sbread_mv_csr_stvec),
		 .RDY_soc_sb_sbread_mv_csr_stvec(),
		 .soc_sb_sbread_mv_csr_mtvec(soc_soc_sb_sbread_mv_csr_mtvec),
		 .RDY_soc_sb_sbread_mv_csr_mtvec(),
		 .soc_sb_sbread_mv_csr_mstatus(soc_soc_sb_sbread_mv_csr_mstatus),
		 .RDY_soc_sb_sbread_mv_csr_mstatus(),
		 .soc_sb_sbread_mv_csr_marchid(soc_soc_sb_sbread_mv_csr_marchid),
		 .RDY_soc_sb_sbread_mv_csr_marchid(),
		 .soc_sb_sbread_mv_csr_mimpid(soc_soc_sb_sbread_mv_csr_mimpid),
		 .RDY_soc_sb_sbread_mv_csr_mimpid(),
		 .soc_sb_sbread_mv_csr_mhartid(soc_soc_sb_sbread_mv_csr_mhartid),
		 .RDY_soc_sb_sbread_mv_csr_mhartid(),
		 .soc_sb_sbread_mv_csr_mip(soc_soc_sb_sbread_mv_csr_mip),
		 .RDY_soc_sb_sbread_mv_csr_mip(),
		 .soc_sb_sbread_mv_csr_sip(soc_soc_sb_sbread_mv_csr_sip),
		 .RDY_soc_sb_sbread_mv_csr_sip(),
		 .soc_sb_sbread_mv_csr_mie(soc_soc_sb_sbread_mv_csr_mie),
		 .RDY_soc_sb_sbread_mv_csr_mie(),
		 .soc_sb_sbread_mv_csr_sie(soc_soc_sb_sbread_mv_csr_sie),
		 .RDY_soc_sb_sbread_mv_csr_sie(),
		 .soc_sb_sbread_mv_csr_mscratch(soc_soc_sb_sbread_mv_csr_mscratch),
		 .RDY_soc_sb_sbread_mv_csr_mscratch(),
		 .soc_sb_sbread_mv_csr_sscratch(soc_soc_sb_sbread_mv_csr_sscratch),
		 .RDY_soc_sb_sbread_mv_csr_sscratch(),
		 .soc_sb_sbread_mv_csr_sepc(soc_soc_sb_sbread_mv_csr_sepc),
		 .RDY_soc_sb_sbread_mv_csr_sepc(),
		 .soc_sb_sbread_mv_csr_stval(soc_soc_sb_sbread_mv_csr_stval),
		 .RDY_soc_sb_sbread_mv_csr_stval(),
		 .soc_sb_sbread_mv_csr_scause(soc_soc_sb_sbread_mv_csr_scause),
		 .RDY_soc_sb_sbread_mv_csr_scause(),
		 .soc_sb_sbread_mv_csr_mepc(soc_soc_sb_sbread_mv_csr_mepc),
		 .RDY_soc_sb_sbread_mv_csr_mepc(),
		 .soc_sb_sbread_mv_csr_mtval(soc_soc_sb_sbread_mv_csr_mtval),
		 .RDY_soc_sb_sbread_mv_csr_mtval(),
		 .soc_sb_sbread_mv_csr_mcause(soc_soc_sb_sbread_mv_csr_mcause),
		 .RDY_soc_sb_sbread_mv_csr_mcause(),
		 .soc_sb_sbread_mv_csr_mcycle(soc_soc_sb_sbread_mv_csr_mcycle),
		 .RDY_soc_sb_sbread_mv_csr_mcycle(),
		 .soc_sb_sbread_mv_csr_minstret(soc_soc_sb_sbread_mv_csr_minstret),
		 .RDY_soc_sb_sbread_mv_csr_minstret(),
		 .soc_sb_sbread_mv_csr_fcsr(soc_soc_sb_sbread_mv_csr_fcsr),
		 .RDY_soc_sb_sbread_mv_csr_fcsr(),
		 .soc_sb_sbread_mv_csr_time(soc_soc_sb_sbread_mv_csr_time),
		 .RDY_soc_sb_sbread_mv_csr_time(),
		 .soc_sb_sbread_mv_csr_mideleg(soc_soc_sb_sbread_mv_csr_mideleg),
		 .RDY_soc_sb_sbread_mv_csr_mideleg(),
		 .soc_sb_sbread_mv_csr_medeleg(soc_soc_sb_sbread_mv_csr_medeleg),
		 .RDY_soc_sb_sbread_mv_csr_medeleg(),
		 .soc_sb_sbread_mv_csr_pmpcfg0(soc_soc_sb_sbread_mv_csr_pmpcfg0),
		 .RDY_soc_sb_sbread_mv_csr_pmpcfg0(),
		 .soc_sb_sbread_mv_csr_pmpaddr0(soc_soc_sb_sbread_mv_csr_pmpaddr0),
		 .RDY_soc_sb_sbread_mv_csr_pmpaddr0(),
		 .soc_sb_sbread_mv_csr_pmpaddr1(soc_soc_sb_sbread_mv_csr_pmpaddr1),
		 .RDY_soc_sb_sbread_mv_csr_pmpaddr1(),
		 .soc_sb_sbread_mv_csr_pmpaddr2(soc_soc_sb_sbread_mv_csr_pmpaddr2),
		 .RDY_soc_sb_sbread_mv_csr_pmpaddr2(),
		 .soc_sb_sbread_mv_csr_pmpaddr3(soc_soc_sb_sbread_mv_csr_pmpaddr3),
		 .RDY_soc_sb_sbread_mv_csr_pmpaddr3(),
		 .soc_sb_sbread_mv_csr_mcounteren(soc_soc_sb_sbread_mv_csr_mcounteren),
		 .RDY_soc_sb_sbread_mv_csr_mcounteren(),
		 .soc_sb_sbread_mv_csr_scounteren(soc_soc_sb_sbread_mv_csr_scounteren),
		 .RDY_soc_sb_sbread_mv_csr_scounteren(),
		 .soc_sb_sbread_mv_csr_menvcfg(soc_soc_sb_sbread_mv_csr_menvcfg),
		 .RDY_soc_sb_sbread_mv_csr_menvcfg(),
		 .soc_sb_sbread_mv_csr_senvcfg(soc_soc_sb_sbread_mv_csr_senvcfg),
		 .RDY_soc_sb_sbread_mv_csr_senvcfg(),
		 .soc_sb_sbread_mv_csr_satp(soc_soc_sb_sbread_mv_csr_satp),
		 .RDY_soc_sb_sbread_mv_csr_satp(),
		 .soc_sb_sbread_mv_csr_mcountinhibit(soc_soc_sb_sbread_mv_csr_mcountinhibit),
		 .RDY_soc_sb_sbread_mv_csr_mcountinhibit(),
		 .soc_sb_sbread_mv_csr_fflags(soc_soc_sb_sbread_mv_csr_fflags),
		 .RDY_soc_sb_sbread_mv_csr_fflags(),
		 .soc_sb_sbread_mv_csr_frm(soc_soc_sb_sbread_mv_csr_frm),
		 .RDY_soc_sb_sbread_mv_csr_frm(),
		 .soc_sb_sbread_mv_csr_customcontrol(soc_soc_sb_sbread_mv_csr_customcontrol),
		 .RDY_soc_sb_sbread_mv_csr_customcontrol(),
		 .soc_sb_sbread_mv_csr_mhpmcounter3(soc_soc_sb_sbread_mv_csr_mhpmcounter3),
		 .RDY_soc_sb_sbread_mv_csr_mhpmcounter3(),
		 .soc_sb_sbread_mv_csr_mhpmcounter4(soc_soc_sb_sbread_mv_csr_mhpmcounter4),
		 .RDY_soc_sb_sbread_mv_csr_mhpmcounter4(),
		 .soc_sb_sbread_mv_csr_mhpmcounter5(soc_soc_sb_sbread_mv_csr_mhpmcounter5),
		 .RDY_soc_sb_sbread_mv_csr_mhpmcounter5(),
		 .soc_sb_sbread_mv_csr_mhpmcounter6(soc_soc_sb_sbread_mv_csr_mhpmcounter6),
		 .RDY_soc_sb_sbread_mv_csr_mhpmcounter6(),
		 .soc_sb_sbread_mv_csr_mhpmevent3(soc_soc_sb_sbread_mv_csr_mhpmevent3),
		 .RDY_soc_sb_sbread_mv_csr_mhpmevent3(),
		 .soc_sb_sbread_mv_csr_mhpmevent4(soc_soc_sb_sbread_mv_csr_mhpmevent4),
		 .RDY_soc_sb_sbread_mv_csr_mhpmevent4(),
		 .soc_sb_sbread_mv_csr_mhpmevent5(soc_soc_sb_sbread_mv_csr_mhpmevent5),
		 .RDY_soc_sb_sbread_mv_csr_mhpmevent5(),
		 .soc_sb_sbread_mv_csr_mhpmevent6(soc_soc_sb_sbread_mv_csr_mhpmevent6),
		 .RDY_soc_sb_sbread_mv_csr_mhpmevent6(),
		 .soc_sb_sbread_mv_csr_dcsr(soc_soc_sb_sbread_mv_csr_dcsr),
		 .RDY_soc_sb_sbread_mv_csr_dcsr(),
		 .soc_sb_sbread_mv_csr_dpc(soc_soc_sb_sbread_mv_csr_dpc),
		 .RDY_soc_sb_sbread_mv_csr_dpc(),
		 .soc_sb_sbread_mv_csr_dscratch0(soc_soc_sb_sbread_mv_csr_dscratch0),
		 .RDY_soc_sb_sbread_mv_csr_dscratch0(),
		 .soc_sb_sbread_mv_csr_dscratch1(soc_soc_sb_sbread_mv_csr_dscratch1),
		 .RDY_soc_sb_sbread_mv_csr_dscratch1(),
		 .soc_sb_commitlog(soc_soc_sb_commitlog),
		 .RDY_soc_sb_commitlog(),
		 .uart_io_SOUT(soc_uart_io_SOUT),
		 .uart_io_SOUT_EN(),
		 .wire_tdo(),
		 .RST_N_soc_reset());

  // submodule tck_clk
  MakeClock #(.initVal(1'd1), .initGate(1'd1)) tck_clk(.CLK(CLK),
						       .RST(RST_N),
						       .CLK_IN(tck_clk_CLK_IN),
						       .COND_IN(tck_clk_COND_IN),
						       .CLK_IN_EN(tck_clk_CLK_IN_EN),
						       .COND_IN_EN(tck_clk_COND_IN_EN),
						       .CLK_VAL_OUT(),
						       .COND_OUT(),
						       .CLK_GATE_OUT(),
						       .CLK_OUT(tck_clk_CLK_OUT));

  // submodule trst
  MakeReset0 #(.init(1'd1)) trst(.CLK(CLK),
				 .RST(RST_N),
				 .ASSERT_IN(trst_ASSERT_IN),
				 .ASSERT_OUT(),
				 .OUT_RST(trst_OUT_RST));

  // submodule uart_uart_baudGen_rBaudCounter
  Counter #(.width(32'd16),
	    .init(16'd0)) uart_uart_baudGen_rBaudCounter(.CLK(CLK),
							 .RST(RST_N),
							 .DATA_A(uart_uart_baudGen_rBaudCounter_DATA_A),
							 .DATA_B(uart_uart_baudGen_rBaudCounter_DATA_B),
							 .DATA_C(uart_uart_baudGen_rBaudCounter_DATA_C),
							 .DATA_F(uart_uart_baudGen_rBaudCounter_DATA_F),
							 .ADDA(uart_uart_baudGen_rBaudCounter_ADDA),
							 .ADDB(uart_uart_baudGen_rBaudCounter_ADDB),
							 .SETC(uart_uart_baudGen_rBaudCounter_SETC),
							 .SETF(uart_uart_baudGen_rBaudCounter_SETF),
							 .Q_OUT(uart_uart_baudGen_rBaudCounter_Q_OUT));

  // submodule uart_uart_baudGen_rBaudTickCounter
  Counter #(.width(32'd3),
	    .init(3'd0)) uart_uart_baudGen_rBaudTickCounter(.CLK(CLK),
							    .RST(RST_N),
							    .DATA_A(uart_uart_baudGen_rBaudTickCounter_DATA_A),
							    .DATA_B(uart_uart_baudGen_rBaudTickCounter_DATA_B),
							    .DATA_C(uart_uart_baudGen_rBaudTickCounter_DATA_C),
							    .DATA_F(uart_uart_baudGen_rBaudTickCounter_DATA_F),
							    .ADDA(uart_uart_baudGen_rBaudTickCounter_ADDA),
							    .ADDB(uart_uart_baudGen_rBaudTickCounter_ADDB),
							    .SETC(uart_uart_baudGen_rBaudTickCounter_SETC),
							    .SETF(uart_uart_baudGen_rBaudTickCounter_SETF),
							    .Q_OUT(uart_uart_baudGen_rBaudTickCounter_Q_OUT));

  // submodule uart_uart_fifoRecv
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd16),
	      .p3cntr_width(32'd4),
	      .guarded(1'd1)) uart_uart_fifoRecv(.RST(RST_N),
						 .CLK(CLK),
						 .D_IN(uart_uart_fifoRecv_D_IN),
						 .ENQ(uart_uart_fifoRecv_ENQ),
						 .DEQ(uart_uart_fifoRecv_DEQ),
						 .CLR(uart_uart_fifoRecv_CLR),
						 .D_OUT(uart_uart_fifoRecv_D_OUT),
						 .FULL_N(uart_uart_fifoRecv_FULL_N),
						 .EMPTY_N(uart_uart_fifoRecv_EMPTY_N));

  // submodule uart_uart_fifoXmit
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd16),
	      .p3cntr_width(32'd4),
	      .guarded(1'd1)) uart_uart_fifoXmit(.RST(RST_N),
						 .CLK(CLK),
						 .D_IN(uart_uart_fifoXmit_D_IN),
						 .ENQ(uart_uart_fifoXmit_ENQ),
						 .DEQ(uart_uart_fifoXmit_DEQ),
						 .CLR(uart_uart_fifoXmit_CLR),
						 .D_OUT(uart_uart_fifoXmit_D_OUT),
						 .FULL_N(),
						 .EMPTY_N(uart_uart_fifoXmit_EMPTY_N));

  // rule RL_display_eol
  assign CAN_FIRE_RL_display_eol = 1'd1 ;
  assign WILL_FIRE_RL_display_eol = 1'd1 ;

  // rule RL_open_file_rtldump
  assign CAN_FIRE_RL_open_file_rtldump = rg_cnt == 5'd0 ;
  assign WILL_FIRE_RL_open_file_rtldump = CAN_FIRE_RL_open_file_rtldump ;

  // rule RL_connect_uart_out
  assign CAN_FIRE_RL_connect_uart_out = 1'd1 ;
  assign WILL_FIRE_RL_connect_uart_out = 1'd1 ;

  // rule RL_connect_uart_in
  assign CAN_FIRE_RL_connect_uart_in = 1'd1 ;
  assign WILL_FIRE_RL_connect_uart_in = 1'd1 ;

  // rule RL_check_if_character_present
  assign CAN_FIRE_RL_check_if_character_present = !rg_read_rx ;
  assign WILL_FIRE_RL_check_if_character_present =
	     CAN_FIRE_RL_check_if_character_present ;

  // rule RL_write_received_character
  assign CAN_FIRE_RL_write_received_character = rg_cnt != 5'd0 && rg_read_rx ;
  assign WILL_FIRE_RL_write_received_character =
	     CAN_FIRE_RL_write_received_character ;

  // rule RL_write_dump_file
  assign CAN_FIRE_RL_write_dump_file = rg_cnt != 5'd0 ;
  assign WILL_FIRE_RL_write_dump_file = CAN_FIRE_RL_write_dump_file ;

  // rule RL_open_file_app
  assign CAN_FIRE_RL_open_file_app = rg_cnt < 5'd5 ;
  assign WILL_FIRE_RL_open_file_app = CAN_FIRE_RL_open_file_app ;

  // rule RL_connect_jtag_io
  assign CAN_FIRE_RL_connect_jtag_io = 1'b0 ;
  assign WILL_FIRE_RL_connect_jtag_io = 1'b0 ;

  // rule RL_uart_rl_send_rx_threshold
  assign CAN_FIRE_RL_uart_rl_send_rx_threshold = 1'd1 ;
  assign WILL_FIRE_RL_uart_rl_send_rx_threshold = 1'd1 ;

  // rule RL_uart_uart_rl_update_fifo_almost_full
  assign CAN_FIRE_RL_uart_uart_rl_update_fifo_almost_full = 1'd1 ;
  assign WILL_FIRE_RL_uart_uart_rl_update_fifo_almost_full = 1'd1 ;

  // rule RL_uart_uart_baudGen_baud_count_wire
  assign CAN_FIRE_RL_uart_uart_baudGen_baud_count_wire = 1'd1 ;
  assign WILL_FIRE_RL_uart_uart_baudGen_baud_count_wire = 1'd1 ;

  // rule RL_uart_uart_baud_generator_clock_enable
  assign CAN_FIRE_RL_uart_uart_baud_generator_clock_enable = 1'd1 ;
  assign WILL_FIRE_RL_uart_uart_baud_generator_clock_enable = 1'd1 ;

  // rule RL_uart_uart_receive_wait_for_start_bit
  assign CAN_FIRE_RL_uart_uart_receive_wait_for_start_bit =
	     uart_uart_rRecvState == 3'd0 &&
	     !uart_uart_baudGen_rBaudCounter_value_PLUS_1_8__ETC___d30 ;
  assign WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit =
	     CAN_FIRE_RL_uart_uart_receive_wait_for_start_bit ;

  // rule RL_uart_uart_receive_find_center_of_bit_cell
  assign CAN_FIRE_RL_uart_uart_receive_find_center_of_bit_cell =
	     uart_uart_rRecvState == 3'd1 &&
	     !uart_uart_baudGen_rBaudCounter_value_PLUS_1_8__ETC___d30 ;
  assign WILL_FIRE_RL_uart_uart_receive_find_center_of_bit_cell =
	     CAN_FIRE_RL_uart_uart_receive_find_center_of_bit_cell ;

  // rule RL_uart_uart_receive_wait_bit_cell_time_for_sample
  assign CAN_FIRE_RL_uart_uart_receive_wait_bit_cell_time_for_sample =
	     uart_uart_rRecvState == 3'd2 &&
	     uart_uart_rRecvCellCount == 4'hF &&
	     !uart_uart_baudGen_rBaudCounter_value_PLUS_1_8__ETC___d30 ;
  assign WILL_FIRE_RL_uart_uart_receive_wait_bit_cell_time_for_sample =
	     CAN_FIRE_RL_uart_uart_receive_wait_bit_cell_time_for_sample ;

  // rule RL_uart_uart_receive_bit_cell_time_counter
  assign CAN_FIRE_RL_uart_uart_receive_bit_cell_time_counter =
	     CAN_FIRE_RL_uart_uart_baudGen_count_baudtick_16x ;
  assign WILL_FIRE_RL_uart_uart_receive_bit_cell_time_counter =
	     CAN_FIRE_RL_uart_uart_baudGen_count_baudtick_16x ;

  // rule RL_uart_uart_receive_sample_pin
  assign CAN_FIRE_RL_uart_uart_receive_sample_pin =
	     CAN_FIRE_RL_uart_uart_receive_buffer_shift ;
  assign WILL_FIRE_RL_uart_uart_receive_sample_pin =
	     CAN_FIRE_RL_uart_uart_receive_buffer_shift ;

  // rule RL_uart_uart_receive_parity_bit
  assign CAN_FIRE_RL_uart_uart_receive_parity_bit =
	     uart_uart_rRecvState == 3'd4 &&
	     !uart_uart_baudGen_rBaudCounter_value_PLUS_1_8__ETC___d30 ;
  assign WILL_FIRE_RL_uart_uart_receive_parity_bit =
	     CAN_FIRE_RL_uart_uart_receive_parity_bit ;

  // rule RL_uart_uart_receive_stop_first_bit
  assign CAN_FIRE_RL_uart_uart_receive_stop_first_bit =
	     uart_uart_rRecvState == 3'd5 &&
	     !uart_uart_baudGen_rBaudCounter_value_PLUS_1_8__ETC___d30 ;
  assign WILL_FIRE_RL_uart_uart_receive_stop_first_bit =
	     CAN_FIRE_RL_uart_uart_receive_stop_first_bit ;

  // rule RL_uart_uart_receive_bit_counter
  assign CAN_FIRE_RL_uart_uart_receive_bit_counter = 1'd1 ;
  assign WILL_FIRE_RL_uart_uart_receive_bit_counter = 1'd1 ;

  // rule RL_uart_uart_receive_stop_last_bit
  assign CAN_FIRE_RL_uart_uart_receive_stop_last_bit =
	     uart_uart_rRecvState == 3'd6 &&
	     !uart_uart_baudGen_rBaudCounter_value_PLUS_1_8__ETC___d30 ;
  assign WILL_FIRE_RL_uart_uart_receive_stop_last_bit =
	     CAN_FIRE_RL_uart_uart_receive_stop_last_bit &&
	     !WILL_FIRE_RL_write_received_character ;

  // rule RL_uart_uart_receive_buffer_shift
  assign CAN_FIRE_RL_uart_uart_receive_buffer_shift =
	     uart_uart_rRecvState == 3'd3 &&
	     !uart_uart_baudGen_rBaudCounter_value_PLUS_1_8__ETC___d30 ;
  assign WILL_FIRE_RL_uart_uart_receive_buffer_shift =
	     CAN_FIRE_RL_uart_uart_receive_buffer_shift ;

  // rule RL_uart_uart_transmit_wait_for_start_command
  assign CAN_FIRE_RL_uart_uart_transmit_wait_for_start_command =
	     uart_uart_rXmitState == 4'd0 &&
	     !uart_uart_baudGen_rBaudCounter_value_PLUS_1_8__ETC___d30 ;
  assign WILL_FIRE_RL_uart_uart_transmit_wait_for_start_command =
	     CAN_FIRE_RL_uart_uart_transmit_wait_for_start_command ;

  // rule RL_uart_uart_rl_delay_control
  assign CAN_FIRE_RL_uart_uart_rl_delay_control =
	     uart_uart_rXmitState == 4'd1 &&
	     !uart_uart_baudGen_rBaudCounter_value_PLUS_1_8__ETC___d30 ;
  assign WILL_FIRE_RL_uart_uart_rl_delay_control =
	     CAN_FIRE_RL_uart_uart_rl_delay_control ;

  // rule RL_uart_uart_transmit_send_start_bit
  assign CAN_FIRE_RL_uart_uart_transmit_send_start_bit =
	     uart_uart_rXmitState == 4'd2 &&
	     !uart_uart_baudGen_rBaudCounter_value_PLUS_1_8__ETC___d30 ;
  assign WILL_FIRE_RL_uart_uart_transmit_send_start_bit =
	     CAN_FIRE_RL_uart_uart_transmit_send_start_bit ;

  // rule RL_uart_uart_transmit_wait_1_bit_cell_time
  assign CAN_FIRE_RL_uart_uart_transmit_wait_1_bit_cell_time =
	     uart_uart_rXmitState == 4'd3 &&
	     !uart_uart_baudGen_rBaudCounter_value_PLUS_1_8__ETC___d30 ;
  assign WILL_FIRE_RL_uart_uart_transmit_wait_1_bit_cell_time =
	     CAN_FIRE_RL_uart_uart_transmit_wait_1_bit_cell_time ;

  // rule RL_uart_uart_transmit_bit_counter
  assign CAN_FIRE_RL_uart_uart_transmit_bit_counter = 1'd1 ;
  assign WILL_FIRE_RL_uart_uart_transmit_bit_counter = 1'd1 ;

  // rule RL_uart_uart_transmit_shift_next_bit
  assign CAN_FIRE_RL_uart_uart_transmit_shift_next_bit =
	     uart_uart_rXmitState == 4'd4 &&
	     !uart_uart_baudGen_rBaudCounter_value_PLUS_1_8__ETC___d30 ;
  assign WILL_FIRE_RL_uart_uart_transmit_shift_next_bit =
	     CAN_FIRE_RL_uart_uart_transmit_shift_next_bit ;

  // rule RL_uart_uart_transmit_buffer_shift
  assign CAN_FIRE_RL_uart_uart_transmit_buffer_shift =
	     !uart_uart_pwXmitLoadBuffer_whas &&
	     CAN_FIRE_RL_uart_uart_transmit_shift_next_bit ;
  assign WILL_FIRE_RL_uart_uart_transmit_buffer_shift =
	     CAN_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // rule RL_uart_uart_transmit_send_parity_bit
  assign CAN_FIRE_RL_uart_uart_transmit_send_parity_bit =
	     uart_uart_rXmitState == 4'd8 &&
	     !uart_uart_baudGen_rBaudCounter_value_PLUS_1_8__ETC___d30 ;
  assign WILL_FIRE_RL_uart_uart_transmit_send_parity_bit =
	     CAN_FIRE_RL_uart_uart_transmit_send_parity_bit ;

  // rule RL_uart_uart_transmit_buffer_load
  assign CAN_FIRE_RL_uart_uart_transmit_buffer_load =
	     uart_uart_fifoXmit_EMPTY_N && uart_uart_pwXmitLoadBuffer_whas ;
  assign WILL_FIRE_RL_uart_uart_transmit_buffer_load =
	     CAN_FIRE_RL_uart_uart_transmit_buffer_load ;

  // rule RL_uart_uart_transmit_send_stop_bit
  assign CAN_FIRE_RL_uart_uart_transmit_send_stop_bit =
	     uart_uart_rXmitState == 4'd5 &&
	     !uart_uart_baudGen_rBaudCounter_value_PLUS_1_8__ETC___d30 ;
  assign WILL_FIRE_RL_uart_uart_transmit_send_stop_bit =
	     CAN_FIRE_RL_uart_uart_transmit_send_stop_bit ;

  // rule RL_uart_uart_transmit_send_stop_bit1_5
  assign CAN_FIRE_RL_uart_uart_transmit_send_stop_bit1_5 =
	     uart_uart_rXmitState == 4'd6 &&
	     !uart_uart_baudGen_rBaudCounter_value_PLUS_1_8__ETC___d30 ;
  assign WILL_FIRE_RL_uart_uart_transmit_send_stop_bit1_5 =
	     CAN_FIRE_RL_uart_uart_transmit_send_stop_bit1_5 ;

  // rule RL_uart_uart_transmit_send_stop_bit2
  assign CAN_FIRE_RL_uart_uart_transmit_send_stop_bit2 =
	     uart_uart_rXmitState == 4'd7 &&
	     !uart_uart_baudGen_rBaudCounter_value_PLUS_1_8__ETC___d30 ;
  assign WILL_FIRE_RL_uart_uart_transmit_send_stop_bit2 =
	     CAN_FIRE_RL_uart_uart_transmit_send_stop_bit2 ;

  // rule RL_uart_uart_transmit_bit_cell_time_counter
  assign CAN_FIRE_RL_uart_uart_transmit_bit_cell_time_counter =
	     CAN_FIRE_RL_uart_uart_baudGen_count_baudtick_16x ;
  assign WILL_FIRE_RL_uart_uart_transmit_bit_cell_time_counter =
	     CAN_FIRE_RL_uart_uart_baudGen_count_baudtick_16x ;

  // rule RL_uart_uart_baudGen_baud_tick_count_wire
  assign CAN_FIRE_RL_uart_uart_baudGen_baud_tick_count_wire = 1'd1 ;
  assign WILL_FIRE_RL_uart_uart_baudGen_baud_tick_count_wire = 1'd1 ;

  // rule RL_uart_uart_baudGen_assert_2x_baud_tick
  assign CAN_FIRE_RL_uart_uart_baudGen_assert_2x_baud_tick =
	     uart_uart_baudGen_rBaudTickCounter_Q_OUT == 3'd0 &&
	     !uart_uart_baudGen_rBaudCounter_value_PLUS_1_8__ETC___d30 ;
  assign WILL_FIRE_RL_uart_uart_baudGen_assert_2x_baud_tick =
	     CAN_FIRE_RL_uart_uart_baudGen_assert_2x_baud_tick ;

  // rule RL_uart_uart_baudGen_count_baudtick_16x
  assign CAN_FIRE_RL_uart_uart_baudGen_count_baudtick_16x =
	     !uart_uart_baudGen_rBaudCounter_value_PLUS_1_8__ETC___d30 ;
  assign WILL_FIRE_RL_uart_uart_baudGen_count_baudtick_16x =
	     CAN_FIRE_RL_uart_uart_baudGen_count_baudtick_16x ;

  // rule RL_uart_uart_fifoRecv__updateLevelCounter
  assign CAN_FIRE_RL_uart_uart_fifoRecv__updateLevelCounter =
	     WILL_FIRE_RL_uart_uart_receive_stop_last_bit !=
	     uart_uart_fifoRecv_r_deq_whas ;
  assign WILL_FIRE_RL_uart_uart_fifoRecv__updateLevelCounter =
	     CAN_FIRE_RL_uart_uart_fifoRecv__updateLevelCounter ;

  // rule RL_uart_uart_fifoXmit__updateLevelCounter
  assign CAN_FIRE_RL_uart_uart_fifoXmit__updateLevelCounter =
	     1'b0 != CAN_FIRE_RL_uart_uart_transmit_buffer_load ;
  assign WILL_FIRE_RL_uart_uart_fifoXmit__updateLevelCounter =
	     CAN_FIRE_RL_uart_uart_fifoXmit__updateLevelCounter ;

  // rule RL_rg_read_rx__dreg_update
  assign CAN_FIRE_RL_rg_read_rx__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_rg_read_rx__dreg_update = 1'd1 ;

  // inputs to muxes for submodule ports
  assign MUX_dump_write_1__SEL_1 =
	     WILL_FIRE_RL_open_file_rtldump && TASK_testplusargs___d368 ;
  assign MUX_uart_uart_out_enable_write_1__SEL_1 =
	     WILL_FIRE_RL_uart_uart_transmit_wait_for_start_command &&
	     !uart_uart_fifoXmit_EMPTY_N &&
	     uart_uart_rg_delay_count_99_EQ_uart_rg_delay_c_ETC___d301 ;
  assign MUX_uart_uart_rRecvState_write_1__SEL_6 =
	     WILL_FIRE_RL_uart_uart_receive_parity_bit ||
	     WILL_FIRE_RL_uart_uart_receive_sample_pin ;
  assign MUX_uart_uart_rXmitDataOut_write_1__SEL_1 =
	     WILL_FIRE_RL_uart_uart_transmit_shift_next_bit ||
	     WILL_FIRE_RL_uart_uart_transmit_wait_1_bit_cell_time ;
  assign MUX_uart_uart_rXmitDataOut_write_1__SEL_4 =
	     WILL_FIRE_RL_uart_uart_transmit_send_stop_bit2 ||
	     WILL_FIRE_RL_uart_uart_transmit_send_stop_bit1_5 ||
	     WILL_FIRE_RL_uart_uart_transmit_send_stop_bit ||
	     WILL_FIRE_RL_uart_uart_transmit_wait_for_start_command ;
  assign MUX_uart_uart_rXmitState_write_1__SEL_1 =
	     WILL_FIRE_RL_uart_uart_rl_delay_control &&
	     uart_uart_rg_delay_count_99_EQ_uart_rg_delay_c_ETC___d301 ;
  assign MUX_uart_uart_rg_delay_count_write_1__SEL_1 =
	     WILL_FIRE_RL_uart_uart_transmit_wait_for_start_command &&
	     (uart_uart_fifoXmit_EMPTY_N ||
	      uart_uart_rg_delay_count_99_EQ_uart_rg_delay_c_ETC___d301 ||
	      uart_uart_out_enable) ;
  assign MUX_uart_uart_rg_delay_count_write_1__SEL_2 =
	     WILL_FIRE_RL_uart_uart_rl_delay_control &&
	     !uart_uart_rg_delay_count_99_EQ_uart_rg_delay_c_ETC___d301 ;
  assign MUX_uart_uart_rRecvState_write_1__VAL_1 =
	     uart_uart_rRecvData ? 3'd0 : 3'd1 ;
  assign MUX_uart_uart_rRecvState_write_1__VAL_2 =
	     (uart_uart_rRecvCellCount == 4'h4) ?
	       (uart_uart_rRecvData ? 3'd0 : 3'd2) :
	       3'd1 ;
  assign MUX_uart_uart_rRecvState_write_1__VAL_3 =
	     (uart_uart_rRecvBitCount == uart_rg_charsize) ?
	       ((uart_rg_parity == 2'd0) ?
		  ((uart_rg_stopbits == 2'd0) ? 3'd6 : 3'd5) :
		  3'd4) :
	       IF_uart_uart_rRecvBitCount_2_EQ_uart_rg_charsi_ETC___d104 ;
  assign MUX_uart_uart_rRecvState_write_1__VAL_4 =
	     uart_uart_rRecvData ? 3'd2 : 3'd0 ;
  assign MUX_uart_uart_rXmitDataOut_write_1__VAL_2 =
	     (uart_rg_parity == 2'd1) ?
	       x__h36835 :
	       uart_rg_parity == 2'd2 && uart_uart_rXmitParity ;
  assign MUX_uart_uart_rXmitState_write_1__VAL_2 =
	     uart_uart_fifoXmit_EMPTY_N ?
	       (uart_uart_out_enable ? 4'd2 : 4'd1) :
	       4'd0 ;
  assign MUX_uart_uart_rXmitState_write_1__VAL_3 =
	     (uart_uart_rXmitCellCount == 4'hF) ? 4'd3 : 4'd2 ;
  assign MUX_uart_uart_rXmitState_write_1__VAL_4 =
	     (uart_uart_rXmitCellCount == 4'hF) ?
	       ((uart_uart_rXmitBitCount_88_EQ_uart_rg_charsize_ETC___d321 &&
		 uart_rg_parity == 2'd0) ?
		  4'd5 :
		  ((uart_uart_rXmitBitCount_88_EQ_uart_rg_charsize_ETC___d321 &&
		    uart_rg_parity != 2'd0) ?
		     4'd8 :
		     4'd4)) :
	       4'd3 ;
  assign MUX_uart_uart_rXmitState_write_1__VAL_5 =
	     (uart_uart_rXmitCellCount == 4'hF) ? 4'd5 : 4'd8 ;
  assign MUX_uart_uart_rXmitState_write_1__VAL_6 =
	     (uart_uart_rXmitCellCount == 4'hF && uart_rg_stopbits == 2'd0) ?
	       4'd0 :
	       ((uart_uart_rXmitCellCount == 4'hF &&
		 uart_rg_stopbits == 2'd2) ?
		  4'd7 :
		  ((uart_uart_rXmitCellCount == 4'hF &&
		    uart_rg_stopbits == 2'd1) ?
		     4'd6 :
		     4'd5)) ;
  assign MUX_uart_uart_rXmitState_write_1__VAL_7 =
	     (uart_uart_rXmitCellCount == 4'h7) ? 4'd0 : 4'd6 ;
  assign MUX_uart_uart_rXmitState_write_1__VAL_8 =
	     (uart_uart_rXmitCellCount == 4'hF) ? 4'd0 : 4'd7 ;
  assign MUX_uart_uart_rg_delay_count_write_1__VAL_1 =
	     (uart_uart_fifoXmit_EMPTY_N ||
	      uart_uart_rg_delay_count_99_EQ_uart_rg_delay_c_ETC___d301) ?
	       16'd0 :
	       x__h35051 ;

  // inlined wires
  assign rg_read_rx_1_whas =
	     WILL_FIRE_RL_check_if_character_present &&
	     uart_uart_fifoRecv_EMPTY_N ;
  assign uart_uart_fifoRecv_r_deq_whas =
	     WILL_FIRE_RL_write_received_character &&
	     uart_uart_fifoRecv_EMPTY_N ;
  assign uart_uart_pwRecvCellCountReset_whas =
	     WILL_FIRE_RL_uart_uart_receive_find_center_of_bit_cell &&
	     uart_uart_rRecvCellCount == 4'h4 ||
	     WILL_FIRE_RL_uart_uart_receive_wait_bit_cell_time_for_sample ||
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit ;
  assign uart_uart_pwRecvResetBitCount_whas =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     uart_uart_rRecvData ;
  assign uart_uart_pwRecvEnableBitCount_whas =
	     WILL_FIRE_RL_uart_uart_receive_stop_first_bit ||
	     WILL_FIRE_RL_uart_uart_receive_parity_bit ||
	     WILL_FIRE_RL_uart_uart_receive_sample_pin ;
  assign uart_uart_pwXmitCellCountReset_whas =
	     WILL_FIRE_RL_uart_uart_rl_delay_control &&
	     uart_uart_rg_delay_count_99_EQ_uart_rg_delay_c_ETC___d301 ||
	     _dand2uart_uart_pwXmitCellCountReset_EN_wset ||
	     WILL_FIRE_RL_uart_uart_transmit_send_stop_bit1_5 &&
	     uart_uart_rXmitCellCount == 4'h7 ||
	     WILL_FIRE_RL_uart_uart_transmit_wait_for_start_command &&
	     uart_uart_fifoXmit_EMPTY_N &&
	     uart_uart_out_enable ||
	     WILL_FIRE_RL_uart_uart_transmit_send_stop_bit &&
	     uart_uart_rXmitCellCount == 4'hF &&
	     (uart_rg_stopbits == 2'd0 || uart_rg_stopbits == 2'd2 ||
	      uart_rg_stopbits == 2'd1) ;
  assign uart_uart_pwXmitResetBitCount_whas =
	     WILL_FIRE_RL_uart_uart_rl_delay_control ||
	     WILL_FIRE_RL_uart_uart_transmit_wait_for_start_command ;
  assign uart_uart_pwXmitEnableBitCount_whas =
	     WILL_FIRE_RL_uart_uart_transmit_wait_1_bit_cell_time &&
	     uart_uart_rXmitCellCount == 4'hF &&
	     (!uart_uart_rXmitBitCount_88_EQ_uart_rg_charsize_ETC___d321 ||
	      uart_rg_parity != 2'd0) &&
	     (!uart_uart_rXmitBitCount_88_EQ_uart_rg_charsize_ETC___d321 ||
	      uart_rg_parity == 2'd0) ;
  assign uart_uart_pwXmitLoadBuffer_whas =
	     WILL_FIRE_RL_uart_uart_rl_delay_control &&
	     uart_uart_rg_delay_count_99_EQ_uart_rg_delay_c_ETC___d301 ||
	     WILL_FIRE_RL_uart_uart_transmit_wait_for_start_command &&
	     uart_uart_fifoXmit_EMPTY_N &&
	     uart_uart_out_enable ;

  // register dump
  assign dump_D_IN =
	     MUX_dump_write_1__SEL_1 ? TASK_fopen___d369 : TASK_fopen___d412 ;
  assign dump_EN =
	     WILL_FIRE_RL_open_file_rtldump && TASK_testplusargs___d368 ||
	     WILL_FIRE_RL_write_dump_file && soc_soc_sb_commitlog[309] &&
	     NOT_soc_soc_sb_commitlog__89_BITS_242_TO_211_9_ETC___d407 ;

  // register dump1
  assign dump1_D_IN = TASK_fopen___d373 ;
  assign dump1_EN = CAN_FIRE_RL_open_file_app ;

  // register rg_cnt
  assign rg_cnt_D_IN = rg_cnt + 5'd1 ;
  assign rg_cnt_EN = CAN_FIRE_RL_open_file_app ;

  // register rg_inst_count
  assign rg_inst_count_D_IN = rg_inst_count + 32'd1 ;
  assign rg_inst_count_EN =
	     WILL_FIRE_RL_write_dump_file && soc_soc_sb_commitlog[309] &&
	     soc_soc_sb_commitlog[242:211] != 32'h0000006F &&
	     soc_soc_sb_commitlog[242:211] != 32'h0000A001 &&
	     TASK_testplusargs___d399 ;

  // register rg_prev_misa
  assign rg_prev_misa_D_IN = wdata__h47052 ;
  assign rg_prev_misa_EN =
	     WILL_FIRE_RL_write_dump_file && soc_soc_sb_commitlog[309] &&
	     NOT_soc_soc_sb_commitlog__89_BITS_242_TO_211_9_ETC___d949 ;

  // register rg_prev_mstatus
  assign rg_prev_mstatus_D_IN =
	     soc_soc_sb_commitlog__89_BIT_309_90_AND_NOT_so_ETC___d941 ?
	       wdata__h47052 :
	       soc_soc_sb_sbread_mv_csr_mstatus ;
  assign rg_prev_mstatus_EN =
	     WILL_FIRE_RL_write_dump_file &&
	     (soc_soc_sb_commitlog__89_BIT_309_90_AND_NOT_so_ETC___d941 ||
	      soc_soc_sb_commitlog__89_BIT_309_90_AND_NOT_so_ETC___d969) ;

  // register rg_prev_mstatus_valid
  assign rg_prev_mstatus_valid_D_IN = 1'd1 ;
  assign rg_prev_mstatus_valid_EN =
	     WILL_FIRE_RL_write_dump_file &&
	     (soc_soc_sb_commitlog__89_BIT_309_90_AND_NOT_so_ETC___d941 ||
	      soc_soc_sb_commitlog__89_BIT_309_90_AND_NOT_so_ETC___d969) ;

  // register rg_read_rx
  assign rg_read_rx_D_IN = rg_read_rx_1_whas ;
  assign rg_read_rx_EN = 1'd1 ;

  // register uart_baud_value
  assign uart_baud_value_D_IN = 16'h0 ;
  assign uart_baud_value_EN = 1'b0 ;

  // register uart_rg_charsize
  assign uart_rg_charsize_D_IN = 6'h0 ;
  assign uart_rg_charsize_EN = 1'b0 ;

  // register uart_rg_delay_control
  assign uart_rg_delay_control_D_IN = 16'h0 ;
  assign uart_rg_delay_control_EN = 1'b0 ;

  // register uart_rg_interrupt_en
  assign uart_rg_interrupt_en_D_IN = 16'h0 ;
  assign uart_rg_interrupt_en_EN = 1'b0 ;

  // register uart_rg_parity
  assign uart_rg_parity_D_IN = 2'h0 ;
  assign uart_rg_parity_EN = 1'b0 ;

  // register uart_rg_rx_threshold
  assign uart_rg_rx_threshold_D_IN = 5'h0 ;
  assign uart_rg_rx_threshold_EN = 1'b0 ;

  // register uart_rg_stopbits
  assign uart_rg_stopbits_D_IN = 2'h0 ;
  assign uart_rg_stopbits_EN = 1'b0 ;

  // register uart_uart_error_status_register
  assign uart_uart_error_status_register_D_IN =
	     { bitdata__h17366 == 32'd0 && !uart_uart_rRecvData,
	       !uart_uart_rRecvData,
	       !uart_uart_fifoRecv_FULL_N,
	       uart_rg_parity == 2'd1 &&
	       !uart_uart_vrRecvBuffer_0_30_XOR_uart_uart_vrRe_ETC___d169 ||
	       uart_rg_parity == 2'd2 &&
	       uart_uart_vrRecvBuffer_0_30_XOR_uart_uart_vrRe_ETC___d169 } ;
  assign uart_uart_error_status_register_EN =
	     WILL_FIRE_RL_uart_uart_receive_stop_last_bit ;

  // register uart_uart_fifoRecv_countReg
  assign uart_uart_fifoRecv_countReg_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_stop_last_bit ?
	       uart_uart_fifoRecv_countReg + 5'd1 :
	       uart_uart_fifoRecv_countReg - 5'd1 ;
  assign uart_uart_fifoRecv_countReg_EN =
	     CAN_FIRE_RL_uart_uart_fifoRecv__updateLevelCounter ;

  // register uart_uart_fifoXmit_countReg
  assign uart_uart_fifoXmit_countReg_D_IN =
	     uart_uart_fifoXmit_countReg - 5'd1 ;
  assign uart_uart_fifoXmit_countReg_EN =
	     CAN_FIRE_RL_uart_uart_fifoXmit__updateLevelCounter ;

  // register uart_uart_fifo_almost_full
  assign uart_uart_fifo_almost_full_D_IN = 1'd1 ;
  assign uart_uart_fifo_almost_full_EN =
	     uart_uart_fifoRecv_countReg >= uart_rg_rx_threshold ;

  // register uart_uart_out_enable
  assign uart_uart_out_enable_D_IN =
	     !MUX_uart_uart_out_enable_write_1__SEL_1 ;
  assign uart_uart_out_enable_EN =
	     WILL_FIRE_RL_uart_uart_transmit_wait_for_start_command &&
	     !uart_uart_fifoXmit_EMPTY_N &&
	     uart_uart_rg_delay_count_99_EQ_uart_rg_delay_c_ETC___d301 ||
	     WILL_FIRE_RL_uart_uart_rl_delay_control ;

  // register uart_uart_rRecvBitCount
  assign uart_uart_rRecvBitCount_D_IN =
	     uart_uart_pwRecvResetBitCount_whas ? 6'd0 : x__h13372 ;
  assign uart_uart_rRecvBitCount_EN =
	     uart_uart_pwRecvResetBitCount_whas ||
	     uart_uart_pwRecvEnableBitCount_whas ;

  // register uart_uart_rRecvCellCount
  assign uart_uart_rRecvCellCount_D_IN =
	     uart_uart_pwRecvCellCountReset_whas ? 4'd0 : x__h6820 ;
  assign uart_uart_rRecvCellCount_EN =
	     CAN_FIRE_RL_uart_uart_baudGen_count_baudtick_16x ;

  // register uart_uart_rRecvData
  assign uart_uart_rRecvData_D_IN = soc_uart_io_SOUT ;
  assign uart_uart_rRecvData_EN = 1'd1 ;

  // register uart_uart_rRecvParity
  assign uart_uart_rRecvParity_D_IN = uart_uart_rRecvData ;
  assign uart_uart_rRecvParity_EN = CAN_FIRE_RL_uart_uart_receive_parity_bit ;

  // register uart_uart_rRecvState
  always@(WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit or
	  MUX_uart_uart_rRecvState_write_1__VAL_1 or
	  WILL_FIRE_RL_uart_uart_receive_find_center_of_bit_cell or
	  MUX_uart_uart_rRecvState_write_1__VAL_2 or
	  WILL_FIRE_RL_uart_uart_receive_wait_bit_cell_time_for_sample or
	  MUX_uart_uart_rRecvState_write_1__VAL_3 or
	  WILL_FIRE_RL_uart_uart_receive_stop_first_bit or
	  MUX_uart_uart_rRecvState_write_1__VAL_4 or
	  WILL_FIRE_RL_uart_uart_receive_stop_last_bit or
	  MUX_uart_uart_rRecvState_write_1__SEL_6)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit:
	  uart_uart_rRecvState_D_IN = MUX_uart_uart_rRecvState_write_1__VAL_1;
      WILL_FIRE_RL_uart_uart_receive_find_center_of_bit_cell:
	  uart_uart_rRecvState_D_IN = MUX_uart_uart_rRecvState_write_1__VAL_2;
      WILL_FIRE_RL_uart_uart_receive_wait_bit_cell_time_for_sample:
	  uart_uart_rRecvState_D_IN = MUX_uart_uart_rRecvState_write_1__VAL_3;
      WILL_FIRE_RL_uart_uart_receive_stop_first_bit:
	  uart_uart_rRecvState_D_IN = MUX_uart_uart_rRecvState_write_1__VAL_4;
      WILL_FIRE_RL_uart_uart_receive_stop_last_bit:
	  uart_uart_rRecvState_D_IN = 3'd0;
      MUX_uart_uart_rRecvState_write_1__SEL_6:
	  uart_uart_rRecvState_D_IN = 3'd2;
      default: uart_uart_rRecvState_D_IN = 3'bxxx /* unspecified value */ ;
    endcase
  end
  assign uart_uart_rRecvState_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit ||
	     WILL_FIRE_RL_uart_uart_receive_find_center_of_bit_cell ||
	     WILL_FIRE_RL_uart_uart_receive_wait_bit_cell_time_for_sample ||
	     WILL_FIRE_RL_uart_uart_receive_stop_first_bit ||
	     WILL_FIRE_RL_uart_uart_receive_stop_last_bit ||
	     WILL_FIRE_RL_uart_uart_receive_parity_bit ||
	     WILL_FIRE_RL_uart_uart_receive_sample_pin ;

  // register uart_uart_rXmitBitCount
  assign uart_uart_rXmitBitCount_D_IN =
	     uart_uart_pwXmitResetBitCount_whas ? 6'd0 : x__h22884 ;
  assign uart_uart_rXmitBitCount_EN =
	     uart_uart_pwXmitResetBitCount_whas ||
	     uart_uart_pwXmitEnableBitCount_whas ;

  // register uart_uart_rXmitCellCount
  assign uart_uart_rXmitCellCount_D_IN =
	     uart_uart_pwXmitCellCountReset_whas ? 4'd0 : x__h22858 ;
  assign uart_uart_rXmitCellCount_EN =
	     CAN_FIRE_RL_uart_uart_baudGen_count_baudtick_16x ;

  // register uart_uart_rXmitDataOut
  always@(MUX_uart_uart_rXmitDataOut_write_1__SEL_1 or
	  uart_uart_vrXmitBuffer_0 or
	  WILL_FIRE_RL_uart_uart_transmit_send_parity_bit or
	  MUX_uart_uart_rXmitDataOut_write_1__VAL_2 or
	  WILL_FIRE_RL_uart_uart_transmit_send_start_bit or
	  MUX_uart_uart_rXmitDataOut_write_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_uart_uart_rXmitDataOut_write_1__SEL_1:
	  uart_uart_rXmitDataOut_D_IN = uart_uart_vrXmitBuffer_0;
      WILL_FIRE_RL_uart_uart_transmit_send_parity_bit:
	  uart_uart_rXmitDataOut_D_IN =
	      MUX_uart_uart_rXmitDataOut_write_1__VAL_2;
      WILL_FIRE_RL_uart_uart_transmit_send_start_bit:
	  uart_uart_rXmitDataOut_D_IN = 1'b0;
      MUX_uart_uart_rXmitDataOut_write_1__SEL_4:
	  uart_uart_rXmitDataOut_D_IN = 1'b1;
      default: uart_uart_rXmitDataOut_D_IN = 1'bx /* unspecified value */ ;
    endcase
  end
  assign uart_uart_rXmitDataOut_EN =
	     WILL_FIRE_RL_uart_uart_transmit_shift_next_bit ||
	     WILL_FIRE_RL_uart_uart_transmit_wait_1_bit_cell_time ||
	     WILL_FIRE_RL_uart_uart_transmit_send_parity_bit ||
	     WILL_FIRE_RL_uart_uart_transmit_send_start_bit ||
	     WILL_FIRE_RL_uart_uart_transmit_send_stop_bit2 ||
	     WILL_FIRE_RL_uart_uart_transmit_send_stop_bit1_5 ||
	     WILL_FIRE_RL_uart_uart_transmit_send_stop_bit ||
	     WILL_FIRE_RL_uart_uart_transmit_wait_for_start_command ;

  // register uart_uart_rXmitParity
  assign uart_uart_rXmitParity_D_IN =
	     z__h28360 ^ uart_uart_fifoXmit_D_OUT[31] ;
  assign uart_uart_rXmitParity_EN =
	     CAN_FIRE_RL_uart_uart_transmit_buffer_load ;

  // register uart_uart_rXmitState
  always@(MUX_uart_uart_rXmitState_write_1__SEL_1 or
	  WILL_FIRE_RL_uart_uart_transmit_wait_for_start_command or
	  MUX_uart_uart_rXmitState_write_1__VAL_2 or
	  WILL_FIRE_RL_uart_uart_transmit_send_start_bit or
	  MUX_uart_uart_rXmitState_write_1__VAL_3 or
	  WILL_FIRE_RL_uart_uart_transmit_wait_1_bit_cell_time or
	  MUX_uart_uart_rXmitState_write_1__VAL_4 or
	  WILL_FIRE_RL_uart_uart_transmit_send_parity_bit or
	  MUX_uart_uart_rXmitState_write_1__VAL_5 or
	  WILL_FIRE_RL_uart_uart_transmit_send_stop_bit or
	  MUX_uart_uart_rXmitState_write_1__VAL_6 or
	  WILL_FIRE_RL_uart_uart_transmit_send_stop_bit1_5 or
	  MUX_uart_uart_rXmitState_write_1__VAL_7 or
	  WILL_FIRE_RL_uart_uart_transmit_send_stop_bit2 or
	  MUX_uart_uart_rXmitState_write_1__VAL_8 or
	  WILL_FIRE_RL_uart_uart_transmit_shift_next_bit)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_uart_uart_rXmitState_write_1__SEL_1:
	  uart_uart_rXmitState_D_IN = 4'd2;
      WILL_FIRE_RL_uart_uart_transmit_wait_for_start_command:
	  uart_uart_rXmitState_D_IN = MUX_uart_uart_rXmitState_write_1__VAL_2;
      WILL_FIRE_RL_uart_uart_transmit_send_start_bit:
	  uart_uart_rXmitState_D_IN = MUX_uart_uart_rXmitState_write_1__VAL_3;
      WILL_FIRE_RL_uart_uart_transmit_wait_1_bit_cell_time:
	  uart_uart_rXmitState_D_IN = MUX_uart_uart_rXmitState_write_1__VAL_4;
      WILL_FIRE_RL_uart_uart_transmit_send_parity_bit:
	  uart_uart_rXmitState_D_IN = MUX_uart_uart_rXmitState_write_1__VAL_5;
      WILL_FIRE_RL_uart_uart_transmit_send_stop_bit:
	  uart_uart_rXmitState_D_IN = MUX_uart_uart_rXmitState_write_1__VAL_6;
      WILL_FIRE_RL_uart_uart_transmit_send_stop_bit1_5:
	  uart_uart_rXmitState_D_IN = MUX_uart_uart_rXmitState_write_1__VAL_7;
      WILL_FIRE_RL_uart_uart_transmit_send_stop_bit2:
	  uart_uart_rXmitState_D_IN = MUX_uart_uart_rXmitState_write_1__VAL_8;
      WILL_FIRE_RL_uart_uart_transmit_shift_next_bit:
	  uart_uart_rXmitState_D_IN = 4'd3;
      default: uart_uart_rXmitState_D_IN = 4'bxxxx /* unspecified value */ ;
    endcase
  end
  assign uart_uart_rXmitState_EN =
	     WILL_FIRE_RL_uart_uart_rl_delay_control &&
	     uart_uart_rg_delay_count_99_EQ_uart_rg_delay_c_ETC___d301 ||
	     WILL_FIRE_RL_uart_uart_transmit_wait_for_start_command ||
	     WILL_FIRE_RL_uart_uart_transmit_send_start_bit ||
	     WILL_FIRE_RL_uart_uart_transmit_wait_1_bit_cell_time ||
	     WILL_FIRE_RL_uart_uart_transmit_send_parity_bit ||
	     WILL_FIRE_RL_uart_uart_transmit_send_stop_bit ||
	     WILL_FIRE_RL_uart_uart_transmit_send_stop_bit1_5 ||
	     WILL_FIRE_RL_uart_uart_transmit_send_stop_bit2 ||
	     WILL_FIRE_RL_uart_uart_transmit_shift_next_bit ;

  // register uart_uart_rg_delay_count
  always@(MUX_uart_uart_rg_delay_count_write_1__SEL_1 or
	  MUX_uart_uart_rg_delay_count_write_1__VAL_1 or
	  MUX_uart_uart_rg_delay_count_write_1__SEL_2 or
	  x__h35051 or WILL_FIRE_RL_uart_uart_transmit_send_start_bit)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_uart_uart_rg_delay_count_write_1__SEL_1:
	  uart_uart_rg_delay_count_D_IN =
	      MUX_uart_uart_rg_delay_count_write_1__VAL_1;
      MUX_uart_uart_rg_delay_count_write_1__SEL_2:
	  uart_uart_rg_delay_count_D_IN = x__h35051;
      WILL_FIRE_RL_uart_uart_transmit_send_start_bit:
	  uart_uart_rg_delay_count_D_IN = 16'd0;
      default: uart_uart_rg_delay_count_D_IN =
		   16'bxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign uart_uart_rg_delay_count_EN =
	     WILL_FIRE_RL_uart_uart_transmit_wait_for_start_command &&
	     (uart_uart_fifoXmit_EMPTY_N ||
	      uart_uart_rg_delay_count_99_EQ_uart_rg_delay_c_ETC___d301 ||
	      uart_uart_out_enable) ||
	     WILL_FIRE_RL_uart_uart_rl_delay_control &&
	     !uart_uart_rg_delay_count_99_EQ_uart_rg_delay_c_ETC___d301 ||
	     WILL_FIRE_RL_uart_uart_transmit_send_start_bit ;

  // register uart_uart_vrRecvBuffer_0
  assign uart_uart_vrRecvBuffer_0_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_1 ;
  assign uart_uart_vrRecvBuffer_0_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_1
  assign uart_uart_vrRecvBuffer_1_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_2 ;
  assign uart_uart_vrRecvBuffer_1_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_10
  assign uart_uart_vrRecvBuffer_10_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_11 ;
  assign uart_uart_vrRecvBuffer_10_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_11
  assign uart_uart_vrRecvBuffer_11_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_12 ;
  assign uart_uart_vrRecvBuffer_11_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_12
  assign uart_uart_vrRecvBuffer_12_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_13 ;
  assign uart_uart_vrRecvBuffer_12_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_13
  assign uart_uart_vrRecvBuffer_13_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_14 ;
  assign uart_uart_vrRecvBuffer_13_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_14
  assign uart_uart_vrRecvBuffer_14_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_15 ;
  assign uart_uart_vrRecvBuffer_14_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_15
  assign uart_uart_vrRecvBuffer_15_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_16 ;
  assign uart_uart_vrRecvBuffer_15_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_16
  assign uart_uart_vrRecvBuffer_16_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_17 ;
  assign uart_uart_vrRecvBuffer_16_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_17
  assign uart_uart_vrRecvBuffer_17_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_18 ;
  assign uart_uart_vrRecvBuffer_17_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_18
  assign uart_uart_vrRecvBuffer_18_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_19 ;
  assign uart_uart_vrRecvBuffer_18_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_19
  assign uart_uart_vrRecvBuffer_19_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_20 ;
  assign uart_uart_vrRecvBuffer_19_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_2
  assign uart_uart_vrRecvBuffer_2_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_3 ;
  assign uart_uart_vrRecvBuffer_2_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_20
  assign uart_uart_vrRecvBuffer_20_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_21 ;
  assign uart_uart_vrRecvBuffer_20_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_21
  assign uart_uart_vrRecvBuffer_21_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_22 ;
  assign uart_uart_vrRecvBuffer_21_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_22
  assign uart_uart_vrRecvBuffer_22_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_23 ;
  assign uart_uart_vrRecvBuffer_22_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_23
  assign uart_uart_vrRecvBuffer_23_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_24 ;
  assign uart_uart_vrRecvBuffer_23_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_24
  assign uart_uart_vrRecvBuffer_24_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_25 ;
  assign uart_uart_vrRecvBuffer_24_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_25
  assign uart_uart_vrRecvBuffer_25_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_26 ;
  assign uart_uart_vrRecvBuffer_25_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_26
  assign uart_uart_vrRecvBuffer_26_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_27 ;
  assign uart_uart_vrRecvBuffer_26_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_27
  assign uart_uart_vrRecvBuffer_27_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_28 ;
  assign uart_uart_vrRecvBuffer_27_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_28
  assign uart_uart_vrRecvBuffer_28_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_29 ;
  assign uart_uart_vrRecvBuffer_28_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_29
  assign uart_uart_vrRecvBuffer_29_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_30 ;
  assign uart_uart_vrRecvBuffer_29_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_3
  assign uart_uart_vrRecvBuffer_3_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_4 ;
  assign uart_uart_vrRecvBuffer_3_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_30
  assign uart_uart_vrRecvBuffer_30_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_31 ;
  assign uart_uart_vrRecvBuffer_30_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_31
  assign uart_uart_vrRecvBuffer_31_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_rRecvData ;
  assign uart_uart_vrRecvBuffer_31_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_4
  assign uart_uart_vrRecvBuffer_4_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_5 ;
  assign uart_uart_vrRecvBuffer_4_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_5
  assign uart_uart_vrRecvBuffer_5_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_6 ;
  assign uart_uart_vrRecvBuffer_5_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_6
  assign uart_uart_vrRecvBuffer_6_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_7 ;
  assign uart_uart_vrRecvBuffer_6_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_7
  assign uart_uart_vrRecvBuffer_7_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_8 ;
  assign uart_uart_vrRecvBuffer_7_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_8
  assign uart_uart_vrRecvBuffer_8_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_9 ;
  assign uart_uart_vrRecvBuffer_8_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrRecvBuffer_9
  assign uart_uart_vrRecvBuffer_9_D_IN =
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	     uart_uart_vrRecvBuffer_10 ;
  assign uart_uart_vrRecvBuffer_9_EN =
	     WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	     !uart_uart_rRecvData ||
	     WILL_FIRE_RL_uart_uart_receive_buffer_shift ;

  // register uart_uart_vrXmitBuffer_0
  assign uart_uart_vrXmitBuffer_0_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[0] :
	       uart_uart_vrXmitBuffer_1 ;
  assign uart_uart_vrXmitBuffer_0_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_1
  assign uart_uart_vrXmitBuffer_1_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[1] :
	       uart_uart_vrXmitBuffer_2 ;
  assign uart_uart_vrXmitBuffer_1_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_10
  assign uart_uart_vrXmitBuffer_10_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[10] :
	       uart_uart_vrXmitBuffer_11 ;
  assign uart_uart_vrXmitBuffer_10_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_11
  assign uart_uart_vrXmitBuffer_11_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[11] :
	       uart_uart_vrXmitBuffer_12 ;
  assign uart_uart_vrXmitBuffer_11_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_12
  assign uart_uart_vrXmitBuffer_12_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[12] :
	       uart_uart_vrXmitBuffer_13 ;
  assign uart_uart_vrXmitBuffer_12_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_13
  assign uart_uart_vrXmitBuffer_13_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[13] :
	       uart_uart_vrXmitBuffer_14 ;
  assign uart_uart_vrXmitBuffer_13_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_14
  assign uart_uart_vrXmitBuffer_14_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[14] :
	       uart_uart_vrXmitBuffer_15 ;
  assign uart_uart_vrXmitBuffer_14_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_15
  assign uart_uart_vrXmitBuffer_15_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[15] :
	       uart_uart_vrXmitBuffer_16 ;
  assign uart_uart_vrXmitBuffer_15_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_16
  assign uart_uart_vrXmitBuffer_16_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[16] :
	       uart_uart_vrXmitBuffer_17 ;
  assign uart_uart_vrXmitBuffer_16_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_17
  assign uart_uart_vrXmitBuffer_17_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[17] :
	       uart_uart_vrXmitBuffer_18 ;
  assign uart_uart_vrXmitBuffer_17_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_18
  assign uart_uart_vrXmitBuffer_18_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[18] :
	       uart_uart_vrXmitBuffer_19 ;
  assign uart_uart_vrXmitBuffer_18_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_19
  assign uart_uart_vrXmitBuffer_19_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[19] :
	       uart_uart_vrXmitBuffer_20 ;
  assign uart_uart_vrXmitBuffer_19_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_2
  assign uart_uart_vrXmitBuffer_2_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[2] :
	       uart_uart_vrXmitBuffer_3 ;
  assign uart_uart_vrXmitBuffer_2_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_20
  assign uart_uart_vrXmitBuffer_20_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[20] :
	       uart_uart_vrXmitBuffer_21 ;
  assign uart_uart_vrXmitBuffer_20_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_21
  assign uart_uart_vrXmitBuffer_21_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[21] :
	       uart_uart_vrXmitBuffer_22 ;
  assign uart_uart_vrXmitBuffer_21_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_22
  assign uart_uart_vrXmitBuffer_22_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[22] :
	       uart_uart_vrXmitBuffer_23 ;
  assign uart_uart_vrXmitBuffer_22_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_23
  assign uart_uart_vrXmitBuffer_23_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[23] :
	       uart_uart_vrXmitBuffer_24 ;
  assign uart_uart_vrXmitBuffer_23_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_24
  assign uart_uart_vrXmitBuffer_24_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[24] :
	       uart_uart_vrXmitBuffer_25 ;
  assign uart_uart_vrXmitBuffer_24_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_25
  assign uart_uart_vrXmitBuffer_25_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[25] :
	       uart_uart_vrXmitBuffer_26 ;
  assign uart_uart_vrXmitBuffer_25_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_26
  assign uart_uart_vrXmitBuffer_26_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[26] :
	       uart_uart_vrXmitBuffer_27 ;
  assign uart_uart_vrXmitBuffer_26_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_27
  assign uart_uart_vrXmitBuffer_27_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[27] :
	       uart_uart_vrXmitBuffer_28 ;
  assign uart_uart_vrXmitBuffer_27_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_28
  assign uart_uart_vrXmitBuffer_28_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[28] :
	       uart_uart_vrXmitBuffer_29 ;
  assign uart_uart_vrXmitBuffer_28_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_29
  assign uart_uart_vrXmitBuffer_29_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[29] :
	       uart_uart_vrXmitBuffer_30 ;
  assign uart_uart_vrXmitBuffer_29_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_3
  assign uart_uart_vrXmitBuffer_3_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[3] :
	       uart_uart_vrXmitBuffer_4 ;
  assign uart_uart_vrXmitBuffer_3_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_30
  assign uart_uart_vrXmitBuffer_30_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[30] :
	       uart_uart_vrXmitBuffer_31 ;
  assign uart_uart_vrXmitBuffer_30_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_31
  assign uart_uart_vrXmitBuffer_31_D_IN =
	     !WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     uart_uart_fifoXmit_D_OUT[31] ;
  assign uart_uart_vrXmitBuffer_31_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_4
  assign uart_uart_vrXmitBuffer_4_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[4] :
	       uart_uart_vrXmitBuffer_5 ;
  assign uart_uart_vrXmitBuffer_4_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_5
  assign uart_uart_vrXmitBuffer_5_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[5] :
	       uart_uart_vrXmitBuffer_6 ;
  assign uart_uart_vrXmitBuffer_5_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_6
  assign uart_uart_vrXmitBuffer_6_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[6] :
	       uart_uart_vrXmitBuffer_7 ;
  assign uart_uart_vrXmitBuffer_6_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_7
  assign uart_uart_vrXmitBuffer_7_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[7] :
	       uart_uart_vrXmitBuffer_8 ;
  assign uart_uart_vrXmitBuffer_7_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_8
  assign uart_uart_vrXmitBuffer_8_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[8] :
	       uart_uart_vrXmitBuffer_9 ;
  assign uart_uart_vrXmitBuffer_8_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // register uart_uart_vrXmitBuffer_9
  assign uart_uart_vrXmitBuffer_9_D_IN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ?
	       uart_uart_fifoXmit_D_OUT[9] :
	       uart_uart_vrXmitBuffer_10 ;
  assign uart_uart_vrXmitBuffer_9_EN =
	     WILL_FIRE_RL_uart_uart_transmit_buffer_load ||
	     WILL_FIRE_RL_uart_uart_transmit_buffer_shift ;

  // submodule soc
  assign soc_uart_io_SIN = uart_uart_rXmitDataOut ;
  assign soc_wire_tdi_tdi_in = 1'b0 ;
  assign soc_wire_tms_tms_in = 1'b0 ;

  // submodule tck_clk
  assign tck_clk_CLK_IN = 1'b0 ;
  assign tck_clk_COND_IN = 1'b0 ;
  assign tck_clk_CLK_IN_EN = 1'b0 ;
  assign tck_clk_COND_IN_EN = 1'b0 ;

  // submodule trst
  assign trst_ASSERT_IN = 1'b0 ;

  // submodule uart_uart_baudGen_rBaudCounter
  assign uart_uart_baudGen_rBaudCounter_DATA_A = 16'd1 ;
  assign uart_uart_baudGen_rBaudCounter_DATA_B = 16'h0 ;
  assign uart_uart_baudGen_rBaudCounter_DATA_C = 16'h0 ;
  assign uart_uart_baudGen_rBaudCounter_DATA_F = 16'd0 ;
  assign uart_uart_baudGen_rBaudCounter_ADDA =
	     uart_uart_baudGen_rBaudCounter_value_PLUS_1_8__ETC___d30 ;
  assign uart_uart_baudGen_rBaudCounter_ADDB = 1'b0 ;
  assign uart_uart_baudGen_rBaudCounter_SETC = 1'b0 ;
  assign uart_uart_baudGen_rBaudCounter_SETF =
	     CAN_FIRE_RL_uart_uart_baudGen_count_baudtick_16x ;

  // submodule uart_uart_baudGen_rBaudTickCounter
  assign uart_uart_baudGen_rBaudTickCounter_DATA_A = 3'd1 ;
  assign uart_uart_baudGen_rBaudTickCounter_DATA_B = 3'h0 ;
  assign uart_uart_baudGen_rBaudTickCounter_DATA_C = 3'h0 ;
  assign uart_uart_baudGen_rBaudTickCounter_DATA_F = 3'h0 ;
  assign uart_uart_baudGen_rBaudTickCounter_ADDA =
	     CAN_FIRE_RL_uart_uart_baudGen_count_baudtick_16x ;
  assign uart_uart_baudGen_rBaudTickCounter_ADDB = 1'b0 ;
  assign uart_uart_baudGen_rBaudTickCounter_SETC = 1'b0 ;
  assign uart_uart_baudGen_rBaudTickCounter_SETF = 1'b0 ;

  // submodule uart_uart_fifoRecv
  assign uart_uart_fifoRecv_D_IN = bitdata__h17366 ;
  assign uart_uart_fifoRecv_ENQ =
	     WILL_FIRE_RL_uart_uart_receive_stop_last_bit ;
  assign uart_uart_fifoRecv_DEQ = uart_uart_fifoRecv_r_deq_whas ;
  assign uart_uart_fifoRecv_CLR = 1'b0 ;

  // submodule uart_uart_fifoXmit
  assign uart_uart_fifoXmit_D_IN = 32'h0 ;
  assign uart_uart_fifoXmit_ENQ = 1'b0 ;
  assign uart_uart_fifoXmit_DEQ = CAN_FIRE_RL_uart_uart_transmit_buffer_load ;
  assign uart_uart_fifoXmit_CLR = 1'b0 ;

  // remaining internal signals
  assign IF_IF_soc_soc_sb_commitlog__89_BITS_210_TO_209_ETC___d1047 =
	     op1__h52368 <= op2__h52369 ;
  assign IF_IF_soc_soc_sb_commitlog__89_BITS_210_TO_209_ETC___d1052 =
	     (op1__h52368 ^ 64'h8000000000000000) <=
	     (op2__h52369 ^ 64'h8000000000000000) ;
  assign IF_uart_uart_fifoRecv_notEmpty__80_THEN_uart_u_ETC___d387 =
	     v__h39512 >> x__h40014 ;
  assign IF_uart_uart_rRecvBitCount_2_EQ_uart_rg_charsi_ETC___d104 =
	     (uart_uart_rRecvBitCount == y__h17131) ?
	       ((uart_rg_parity == 2'd0 || uart_rg_stopbits == 2'd0) ?
		  3'd6 :
		  3'd5) :
	       ((uart_uart_rRecvBitCount == y__h17153) ? 3'd6 : 3'd3) ;
  assign NOT_rg_prev_mstatus_valid_58_59_OR_NOT_soc_soc_ETC___d964 =
	     (!rg_prev_mstatus_valid ||
	      soc_soc_sb_sbread_mv_csr_mstatus != rg_prev_mstatus) &&
	     (soc_soc_sb_commitlog[1:0] != 2'b10 ||
	      soc_soc_sb_commitlog[230:226] != 5'd0) ;
  assign _dand2uart_uart_pwXmitCellCountReset_EN_wset =
	     (WILL_FIRE_RL_uart_uart_transmit_send_stop_bit2 ||
	      WILL_FIRE_RL_uart_uart_transmit_send_parity_bit ||
	      WILL_FIRE_RL_uart_uart_transmit_wait_1_bit_cell_time ||
	      WILL_FIRE_RL_uart_uart_transmit_send_start_bit) &&
	     uart_uart_rXmitCellCount == 4'hF ;
  assign _theResult_____2__h51166 =
	     (soc_soc_sb_commitlog[16:14] == 3'd2 &&
	      socsoc_sb_commitlog_BITS_4_TO_0__q3[3:0] != 4'd5 &&
	      socsoc_sb_commitlog_BITS_4_TO_0__q3[3:0] != 4'd7) ?
	       store_data___1__h52357 :
	       soc_soc_sb_commitlog[144:81] ;
  assign bitdata__h17366 =
	     { uart_uart_vrRecvBuffer_31,
	       uart_uart_vrRecvBuffer_30,
	       uart_uart_vrRecvBuffer_29,
	       uart_uart_vrRecvBuffer_28,
	       uart_uart_vrRecvBuffer_27,
	       uart_uart_vrRecvBuffer_26,
	       uart_uart_vrRecvBuffer_25,
	       uart_uart_vrRecvBuffer_24,
	       uart_uart_vrRecvBuffer_23,
	       uart_uart_vrRecvBuffer_22,
	       uart_uart_vrRecvBuffer_21,
	       uart_uart_vrRecvBuffer_20,
	       uart_uart_vrRecvBuffer_19,
	       uart_uart_vrRecvBuffer_18,
	       uart_uart_vrRecvBuffer_17,
	       uart_uart_vrRecvBuffer_16,
	       uart_uart_vrRecvBuffer_15,
	       uart_uart_vrRecvBuffer_14,
	       uart_uart_vrRecvBuffer_13,
	       uart_uart_vrRecvBuffer_12,
	       uart_uart_vrRecvBuffer_11,
	       uart_uart_vrRecvBuffer_10,
	       uart_uart_vrRecvBuffer_9,
	       uart_uart_vrRecvBuffer_8,
	       uart_uart_vrRecvBuffer_7,
	       uart_uart_vrRecvBuffer_6,
	       uart_uart_vrRecvBuffer_5,
	       uart_uart_vrRecvBuffer_4,
	       uart_uart_vrRecvBuffer_3,
	       uart_uart_vrRecvBuffer_2,
	       uart_uart_vrRecvBuffer_1,
	       uart_uart_vrRecvBuffer_0 } ;
  assign csr_address___1__h47178 = soc_soc_sb_commitlog[146:135] + 12'h200 ;
  assign data__h39642 =
	     {2{IF_uart_uart_fifoRecv_notEmpty__80_THEN_uart_u_ETC___d387}} ;
  assign op1___1__h52427 =
	     { {32{socsoc_sb_commitlog_BITS_80_TO_17_BITS_31_TO_0__q2[31]}},
	       socsoc_sb_commitlog_BITS_80_TO_17_BITS_31_TO_0__q2 } ;
  assign op1__h52368 =
	     socsoc_sb_commitlog_BITS_4_TO_0__q3[4] ?
	       soc_soc_sb_commitlog[80:17] :
	       op1___1__h52427 ;
  assign op2___1__h52428 =
	     { {32{socsoc_sb_commitlog_BITS_144_TO_81_BITS_31_TO_0__q5[31]}},
	       socsoc_sb_commitlog_BITS_144_TO_81_BITS_31_TO_0__q5 } ;
  assign op2__h52369 =
	     socsoc_sb_commitlog_BITS_4_TO_0__q3[4] ?
	       soc_soc_sb_commitlog[144:81] :
	       op2___1__h52428 ;
  assign soc_soc_sb_commitlog__89_BIT_309_90_AND_NOT_so_ETC___d941 =
	     soc_soc_sb_commitlog[309] &&
	     soc_soc_sb_commitlog[242:211] != 32'h0000006F &&
	     soc_soc_sb_commitlog[242:211] != 32'h0000A001 &&
	     TASK_testplusargs___d399 &&
	     soc_soc_sb_commitlog[210:209] == 2'd2 &&
	     (soc_soc_sb_commitlog[1:0] != 2'b10 ||
	      soc_soc_sb_commitlog[230:226] != 5'd0) &&
	     _theResult_____2__h46826 == 12'h300 ;
  assign socsoc_sb_commitlog_BITS_144_TO_81_BITS_31_TO_0__q5 =
	     socsoc_sb_commitlog_BITS_144_TO_81__q4[31:0] ;
  assign socsoc_sb_commitlog_BITS_144_TO_81__q4 =
	     soc_soc_sb_commitlog[144:81] ;
  assign socsoc_sb_commitlog_BITS_4_TO_0__q3 = soc_soc_sb_commitlog[4:0] ;
  assign socsoc_sb_commitlog_BITS_80_TO_17_BITS_31_TO_0__q2 =
	     socsoc_sb_commitlog_BITS_80_TO_17__q1[31:0] ;
  assign socsoc_sb_commitlog_BITS_80_TO_17__q1 = soc_soc_sb_commitlog[80:17] ;
  assign uart_uart_baudGen_rBaudCounter_value_PLUS_1_8__ETC___d30 =
	     uart_uart_baudGen_rBaudCounter_Q_OUT + 16'd1 < uart_baud_value ;
  assign uart_uart_rXmitBitCount_88_EQ_uart_rg_charsize_ETC___d321 =
	     uart_uart_rXmitBitCount == y__h35965 ;
  assign uart_uart_rg_delay_count_99_EQ_uart_rg_delay_c_ETC___d301 =
	     uart_uart_rg_delay_count == uart_rg_delay_control ;
  assign uart_uart_vrRecvBuffer_0_30_XOR_uart_uart_vrRe_ETC___d169 =
	     z__h22102 ^ uart_uart_rRecvParity ;
  assign v__h39512 =
	     uart_uart_fifoRecv_EMPTY_N ? uart_uart_fifoRecv_D_OUT : 32'd0 ;
  assign wdata_fflags__h49796 = { 59'd0, soc_soc_sb_sbread_mv_csr_fflags } ;
  assign wdata_frm__h49797 = { 61'd0, soc_soc_sb_sbread_mv_csr_frm } ;
  assign x__h13372 = uart_uart_rRecvBitCount + 6'd1 ;
  assign x__h22858 = uart_uart_rXmitCellCount + 4'd1 ;
  assign x__h22884 = uart_uart_rXmitBitCount + 6'd1 ;
  assign x__h35051 = uart_uart_rg_delay_count + 16'd1 ;
  assign x__h36835 = ~uart_uart_rXmitParity ;
  assign x__h40014 = 6'd32 - uart_rg_charsize ;
  assign x__h40214 = rg_inst_count % 32'd10000000 ;
  assign x__h40270 = rg_inst_count / 32'd10000000 ;
  assign x__h6820 = uart_uart_rRecvCellCount + 4'd1 ;
  assign y__h17131 = uart_rg_charsize + 6'd1 ;
  assign y__h17153 = uart_rg_charsize + 6'd2 ;
  assign y__h35965 = uart_rg_charsize - 6'd1 ;
  assign z__h21892 = uart_uart_vrRecvBuffer_0 ^ uart_uart_vrRecvBuffer_1 ;
  assign z__h21899 = z__h21892 ^ uart_uart_vrRecvBuffer_2 ;
  assign z__h21906 = z__h21899 ^ uart_uart_vrRecvBuffer_3 ;
  assign z__h21913 = z__h21906 ^ uart_uart_vrRecvBuffer_4 ;
  assign z__h21920 = z__h21913 ^ uart_uart_vrRecvBuffer_5 ;
  assign z__h21927 = z__h21920 ^ uart_uart_vrRecvBuffer_6 ;
  assign z__h21934 = z__h21927 ^ uart_uart_vrRecvBuffer_7 ;
  assign z__h21941 = z__h21934 ^ uart_uart_vrRecvBuffer_8 ;
  assign z__h21948 = z__h21941 ^ uart_uart_vrRecvBuffer_9 ;
  assign z__h21955 = z__h21948 ^ uart_uart_vrRecvBuffer_10 ;
  assign z__h21962 = z__h21955 ^ uart_uart_vrRecvBuffer_11 ;
  assign z__h21969 = z__h21962 ^ uart_uart_vrRecvBuffer_12 ;
  assign z__h21976 = z__h21969 ^ uart_uart_vrRecvBuffer_13 ;
  assign z__h21983 = z__h21976 ^ uart_uart_vrRecvBuffer_14 ;
  assign z__h21990 = z__h21983 ^ uart_uart_vrRecvBuffer_15 ;
  assign z__h21997 = z__h21990 ^ uart_uart_vrRecvBuffer_16 ;
  assign z__h22004 = z__h21997 ^ uart_uart_vrRecvBuffer_17 ;
  assign z__h22011 = z__h22004 ^ uart_uart_vrRecvBuffer_18 ;
  assign z__h22018 = z__h22011 ^ uart_uart_vrRecvBuffer_19 ;
  assign z__h22025 = z__h22018 ^ uart_uart_vrRecvBuffer_20 ;
  assign z__h22032 = z__h22025 ^ uart_uart_vrRecvBuffer_21 ;
  assign z__h22039 = z__h22032 ^ uart_uart_vrRecvBuffer_22 ;
  assign z__h22046 = z__h22039 ^ uart_uart_vrRecvBuffer_23 ;
  assign z__h22053 = z__h22046 ^ uart_uart_vrRecvBuffer_24 ;
  assign z__h22060 = z__h22053 ^ uart_uart_vrRecvBuffer_25 ;
  assign z__h22067 = z__h22060 ^ uart_uart_vrRecvBuffer_26 ;
  assign z__h22074 = z__h22067 ^ uart_uart_vrRecvBuffer_27 ;
  assign z__h22081 = z__h22074 ^ uart_uart_vrRecvBuffer_28 ;
  assign z__h22088 = z__h22081 ^ uart_uart_vrRecvBuffer_29 ;
  assign z__h22095 = z__h22088 ^ uart_uart_vrRecvBuffer_30 ;
  assign z__h22102 = z__h22095 ^ uart_uart_vrRecvBuffer_31 ;
  assign z__h28157 =
	     uart_uart_fifoXmit_D_OUT[0] ^ uart_uart_fifoXmit_D_OUT[1] ;
  assign z__h28164 = z__h28157 ^ uart_uart_fifoXmit_D_OUT[2] ;
  assign z__h28171 = z__h28164 ^ uart_uart_fifoXmit_D_OUT[3] ;
  assign z__h28178 = z__h28171 ^ uart_uart_fifoXmit_D_OUT[4] ;
  assign z__h28185 = z__h28178 ^ uart_uart_fifoXmit_D_OUT[5] ;
  assign z__h28192 = z__h28185 ^ uart_uart_fifoXmit_D_OUT[6] ;
  assign z__h28199 = z__h28192 ^ uart_uart_fifoXmit_D_OUT[7] ;
  assign z__h28206 = z__h28199 ^ uart_uart_fifoXmit_D_OUT[8] ;
  assign z__h28213 = z__h28206 ^ uart_uart_fifoXmit_D_OUT[9] ;
  assign z__h28220 = z__h28213 ^ uart_uart_fifoXmit_D_OUT[10] ;
  assign z__h28227 = z__h28220 ^ uart_uart_fifoXmit_D_OUT[11] ;
  assign z__h28234 = z__h28227 ^ uart_uart_fifoXmit_D_OUT[12] ;
  assign z__h28241 = z__h28234 ^ uart_uart_fifoXmit_D_OUT[13] ;
  assign z__h28248 = z__h28241 ^ uart_uart_fifoXmit_D_OUT[14] ;
  assign z__h28255 = z__h28248 ^ uart_uart_fifoXmit_D_OUT[15] ;
  assign z__h28262 = z__h28255 ^ uart_uart_fifoXmit_D_OUT[16] ;
  assign z__h28269 = z__h28262 ^ uart_uart_fifoXmit_D_OUT[17] ;
  assign z__h28276 = z__h28269 ^ uart_uart_fifoXmit_D_OUT[18] ;
  assign z__h28283 = z__h28276 ^ uart_uart_fifoXmit_D_OUT[19] ;
  assign z__h28290 = z__h28283 ^ uart_uart_fifoXmit_D_OUT[20] ;
  assign z__h28297 = z__h28290 ^ uart_uart_fifoXmit_D_OUT[21] ;
  assign z__h28304 = z__h28297 ^ uart_uart_fifoXmit_D_OUT[22] ;
  assign z__h28311 = z__h28304 ^ uart_uart_fifoXmit_D_OUT[23] ;
  assign z__h28318 = z__h28311 ^ uart_uart_fifoXmit_D_OUT[24] ;
  assign z__h28325 = z__h28318 ^ uart_uart_fifoXmit_D_OUT[25] ;
  assign z__h28332 = z__h28325 ^ uart_uart_fifoXmit_D_OUT[26] ;
  assign z__h28339 = z__h28332 ^ uart_uart_fifoXmit_D_OUT[27] ;
  assign z__h28346 = z__h28339 ^ uart_uart_fifoXmit_D_OUT[28] ;
  assign z__h28353 = z__h28346 ^ uart_uart_fifoXmit_D_OUT[29] ;
  assign z__h28360 = z__h28353 ^ uart_uart_fifoXmit_D_OUT[30] ;
  always@(soc_soc_sb_commitlog or csr_address___1__h47178)
  begin
    case (soc_soc_sb_commitlog[146:135])
      12'h100, 12'h104, 12'h144:
	  _theResult_____2__h46826 = csr_address___1__h47178;
      default: _theResult_____2__h46826 = soc_soc_sb_commitlog[146:135];
    endcase
  end
  always@(_theResult_____2__h46826 or
	  wdata_fflags__h49796 or
	  wdata_frm__h49797 or
	  soc_soc_sb_sbread_mv_csr_fcsr or
	  soc_soc_sb_sbread_mv_csr_sie or
	  soc_soc_sb_sbread_mv_csr_stvec or
	  soc_soc_sb_sbread_mv_csr_scounteren or
	  soc_soc_sb_sbread_mv_csr_senvcfg or
	  soc_soc_sb_sbread_mv_csr_sscratch or
	  soc_soc_sb_sbread_mv_csr_sepc or
	  soc_soc_sb_sbread_mv_csr_scause or
	  soc_soc_sb_sbread_mv_csr_stval or
	  soc_soc_sb_sbread_mv_csr_sip or
	  soc_soc_sb_sbread_mv_csr_satp or
	  soc_soc_sb_sbread_mv_csr_mstatus or
	  soc_soc_sb_sbread_mv_csr_misa or
	  soc_soc_sb_sbread_mv_csr_medeleg or
	  soc_soc_sb_sbread_mv_csr_mideleg or
	  soc_soc_sb_sbread_mv_csr_mie or
	  soc_soc_sb_sbread_mv_csr_mtvec or
	  soc_soc_sb_sbread_mv_csr_mcounteren or
	  soc_soc_sb_sbread_mv_csr_menvcfg or
	  soc_soc_sb_sbread_mv_csr_mcountinhibit or
	  soc_soc_sb_sbread_mv_csr_mhpmevent3 or
	  soc_soc_sb_sbread_mv_csr_mhpmevent4 or
	  soc_soc_sb_sbread_mv_csr_mhpmevent5 or
	  soc_soc_sb_sbread_mv_csr_mhpmevent6 or
	  soc_soc_sb_sbread_mv_csr_mscratch or
	  soc_soc_sb_sbread_mv_csr_mepc or
	  soc_soc_sb_sbread_mv_csr_mcause or
	  soc_soc_sb_sbread_mv_csr_mtval or
	  soc_soc_sb_sbread_mv_csr_mip or
	  soc_soc_sb_sbread_mv_csr_pmpcfg0 or
	  soc_soc_sb_sbread_mv_csr_pmpaddr0 or
	  soc_soc_sb_sbread_mv_csr_pmpaddr1 or
	  soc_soc_sb_sbread_mv_csr_pmpaddr2 or
	  soc_soc_sb_sbread_mv_csr_pmpaddr3 or
	  soc_soc_sb_sbread_mv_csr_dcsr or
	  soc_soc_sb_sbread_mv_csr_dpc or
	  soc_soc_sb_sbread_mv_csr_dscratch0 or
	  soc_soc_sb_sbread_mv_csr_dscratch1 or
	  soc_soc_sb_sbread_mv_csr_customcontrol or
	  soc_soc_sb_sbread_mv_csr_mcycle or
	  soc_soc_sb_sbread_mv_csr_minstret or
	  soc_soc_sb_sbread_mv_csr_mhpmcounter3 or
	  soc_soc_sb_sbread_mv_csr_mhpmcounter4 or
	  soc_soc_sb_sbread_mv_csr_mhpmcounter5 or
	  soc_soc_sb_sbread_mv_csr_mhpmcounter6 or
	  soc_soc_sb_sbread_mv_csr_time or
	  soc_soc_sb_sbread_mv_csr_mvendorid or
	  soc_soc_sb_sbread_mv_csr_marchid or
	  soc_soc_sb_sbread_mv_csr_mimpid or soc_soc_sb_sbread_mv_csr_mhartid)
  begin
    case (_theResult_____2__h46826)
      12'h001: wdata__h47052 = wdata_fflags__h49796;
      12'h002: wdata__h47052 = wdata_frm__h49797;
      12'h003: wdata__h47052 = soc_soc_sb_sbread_mv_csr_fcsr;
      12'h104: wdata__h47052 = soc_soc_sb_sbread_mv_csr_sie;
      12'h105: wdata__h47052 = soc_soc_sb_sbread_mv_csr_stvec;
      12'h106: wdata__h47052 = { 32'd0, soc_soc_sb_sbread_mv_csr_scounteren };
      12'h10A: wdata__h47052 = soc_soc_sb_sbread_mv_csr_senvcfg;
      12'h140: wdata__h47052 = soc_soc_sb_sbread_mv_csr_sscratch;
      12'h141: wdata__h47052 = soc_soc_sb_sbread_mv_csr_sepc;
      12'h142: wdata__h47052 = soc_soc_sb_sbread_mv_csr_scause;
      12'h143: wdata__h47052 = soc_soc_sb_sbread_mv_csr_stval;
      12'h144: wdata__h47052 = soc_soc_sb_sbread_mv_csr_sip;
      12'h180: wdata__h47052 = soc_soc_sb_sbread_mv_csr_satp;
      12'h300: wdata__h47052 = soc_soc_sb_sbread_mv_csr_mstatus;
      12'h301: wdata__h47052 = soc_soc_sb_sbread_mv_csr_misa;
      12'h302: wdata__h47052 = soc_soc_sb_sbread_mv_csr_medeleg;
      12'h303: wdata__h47052 = soc_soc_sb_sbread_mv_csr_mideleg;
      12'h304: wdata__h47052 = soc_soc_sb_sbread_mv_csr_mie;
      12'h305: wdata__h47052 = soc_soc_sb_sbread_mv_csr_mtvec;
      12'h306: wdata__h47052 = { 32'd0, soc_soc_sb_sbread_mv_csr_mcounteren };
      12'h30A: wdata__h47052 = soc_soc_sb_sbread_mv_csr_menvcfg;
      12'h320:
	  wdata__h47052 = { 32'd0, soc_soc_sb_sbread_mv_csr_mcountinhibit };
      12'h323: wdata__h47052 = soc_soc_sb_sbread_mv_csr_mhpmevent3;
      12'h324: wdata__h47052 = soc_soc_sb_sbread_mv_csr_mhpmevent4;
      12'h325: wdata__h47052 = soc_soc_sb_sbread_mv_csr_mhpmevent5;
      12'h326: wdata__h47052 = soc_soc_sb_sbread_mv_csr_mhpmevent6;
      12'h340: wdata__h47052 = soc_soc_sb_sbread_mv_csr_mscratch;
      12'h341: wdata__h47052 = soc_soc_sb_sbread_mv_csr_mepc;
      12'h342: wdata__h47052 = soc_soc_sb_sbread_mv_csr_mcause;
      12'h343: wdata__h47052 = soc_soc_sb_sbread_mv_csr_mtval;
      12'h344: wdata__h47052 = soc_soc_sb_sbread_mv_csr_mip;
      12'h3A0: wdata__h47052 = soc_soc_sb_sbread_mv_csr_pmpcfg0;
      12'h3B0: wdata__h47052 = { 34'd0, soc_soc_sb_sbread_mv_csr_pmpaddr0 };
      12'h3B1: wdata__h47052 = { 34'd0, soc_soc_sb_sbread_mv_csr_pmpaddr1 };
      12'h3B2: wdata__h47052 = { 34'd0, soc_soc_sb_sbread_mv_csr_pmpaddr2 };
      12'h3B3: wdata__h47052 = { 34'd0, soc_soc_sb_sbread_mv_csr_pmpaddr3 };
      12'h7B0: wdata__h47052 = soc_soc_sb_sbread_mv_csr_dcsr;
      12'h7B1: wdata__h47052 = soc_soc_sb_sbread_mv_csr_dpc;
      12'h7B2: wdata__h47052 = soc_soc_sb_sbread_mv_csr_dscratch0;
      12'h7B3: wdata__h47052 = soc_soc_sb_sbread_mv_csr_dscratch1;
      12'h800: wdata__h47052 = soc_soc_sb_sbread_mv_csr_customcontrol;
      12'hB00: wdata__h47052 = soc_soc_sb_sbread_mv_csr_mcycle;
      12'hB02: wdata__h47052 = soc_soc_sb_sbread_mv_csr_minstret;
      12'hB03: wdata__h47052 = soc_soc_sb_sbread_mv_csr_mhpmcounter3;
      12'hB04: wdata__h47052 = soc_soc_sb_sbread_mv_csr_mhpmcounter4;
      12'hB05: wdata__h47052 = soc_soc_sb_sbread_mv_csr_mhpmcounter5;
      12'hB06: wdata__h47052 = soc_soc_sb_sbread_mv_csr_mhpmcounter6;
      12'hC01: wdata__h47052 = soc_soc_sb_sbread_mv_csr_time;
      12'hF11: wdata__h47052 = { 32'd0, soc_soc_sb_sbread_mv_csr_mvendorid };
      12'hF12: wdata__h47052 = soc_soc_sb_sbread_mv_csr_marchid;
      12'hF13: wdata__h47052 = soc_soc_sb_sbread_mv_csr_mimpid;
      12'hF14: wdata__h47052 = soc_soc_sb_sbread_mv_csr_mhartid;
      default: wdata__h47052 = 64'd0;
    endcase
  end
  always@(socsoc_sb_commitlog_BITS_4_TO_0__q3 or
	  op1__h52368 or
	  op2__h52369 or
	  IF_IF_soc_soc_sb_commitlog__89_BITS_210_TO_209_ETC___d1052 or
	  IF_IF_soc_soc_sb_commitlog__89_BITS_210_TO_209_ETC___d1047)
  begin
    case (socsoc_sb_commitlog_BITS_4_TO_0__q3[3:0])
      4'b0: store_data___1__h52357 = op1__h52368 + op2__h52369;
      4'b0010: store_data___1__h52357 = op1__h52368 ^ op2__h52369;
      4'b0011: store_data___1__h52357 = op2__h52369;
      4'b0100: store_data___1__h52357 = op1__h52368 | op2__h52369;
      4'b0110: store_data___1__h52357 = op1__h52368 & op2__h52369;
      4'b1000:
	  store_data___1__h52357 =
	      IF_IF_soc_soc_sb_commitlog__89_BITS_210_TO_209_ETC___d1052 ?
		op1__h52368 :
		op2__h52369;
      4'b1010:
	  store_data___1__h52357 =
	      IF_IF_soc_soc_sb_commitlog__89_BITS_210_TO_209_ETC___d1052 ?
		op2__h52369 :
		op1__h52368;
      4'b1100:
	  store_data___1__h52357 =
	      IF_IF_soc_soc_sb_commitlog__89_BITS_210_TO_209_ETC___d1047 ?
		op1__h52368 :
		op2__h52369;
      4'b1110:
	  store_data___1__h52357 =
	      IF_IF_soc_soc_sb_commitlog__89_BITS_210_TO_209_ETC___d1047 ?
		op2__h52369 :
		op1__h52368;
      default: store_data___1__h52357 = op1__h52368;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        dump <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_cnt <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_inst_count <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_prev_misa <= `BSV_ASSIGNMENT_DELAY 64'h800000000014112D;
	rg_prev_mstatus <= `BSV_ASSIGNMENT_DELAY 64'd0;
	rg_prev_mstatus_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_read_rx <= `BSV_ASSIGNMENT_DELAY 1'd0;
	uart_uart_fifoRecv_countReg <= `BSV_ASSIGNMENT_DELAY 5'd0;
	uart_uart_fifoXmit_countReg <= `BSV_ASSIGNMENT_DELAY 5'd0;
      end
    else
      begin
        if (dump_EN) dump <= `BSV_ASSIGNMENT_DELAY dump_D_IN;
	if (rg_cnt_EN) rg_cnt <= `BSV_ASSIGNMENT_DELAY rg_cnt_D_IN;
	if (rg_inst_count_EN)
	  rg_inst_count <= `BSV_ASSIGNMENT_DELAY rg_inst_count_D_IN;
	if (rg_prev_misa_EN)
	  rg_prev_misa <= `BSV_ASSIGNMENT_DELAY rg_prev_misa_D_IN;
	if (rg_prev_mstatus_EN)
	  rg_prev_mstatus <= `BSV_ASSIGNMENT_DELAY rg_prev_mstatus_D_IN;
	if (rg_prev_mstatus_valid_EN)
	  rg_prev_mstatus_valid <= `BSV_ASSIGNMENT_DELAY
	      rg_prev_mstatus_valid_D_IN;
	if (rg_read_rx_EN)
	  rg_read_rx <= `BSV_ASSIGNMENT_DELAY rg_read_rx_D_IN;
	if (uart_uart_fifoRecv_countReg_EN)
	  uart_uart_fifoRecv_countReg <= `BSV_ASSIGNMENT_DELAY
	      uart_uart_fifoRecv_countReg_D_IN;
	if (uart_uart_fifoXmit_countReg_EN)
	  uart_uart_fifoXmit_countReg <= `BSV_ASSIGNMENT_DELAY
	      uart_uart_fifoXmit_countReg_D_IN;
      end
    if (uart_uart_vrXmitBuffer_0_EN)
      uart_uart_vrXmitBuffer_0 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_0_D_IN;
    if (uart_uart_vrXmitBuffer_1_EN)
      uart_uart_vrXmitBuffer_1 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_1_D_IN;
    if (uart_uart_vrXmitBuffer_10_EN)
      uart_uart_vrXmitBuffer_10 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_10_D_IN;
    if (uart_uart_vrXmitBuffer_11_EN)
      uart_uart_vrXmitBuffer_11 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_11_D_IN;
    if (uart_uart_vrXmitBuffer_12_EN)
      uart_uart_vrXmitBuffer_12 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_12_D_IN;
    if (uart_uart_vrXmitBuffer_13_EN)
      uart_uart_vrXmitBuffer_13 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_13_D_IN;
    if (uart_uart_vrXmitBuffer_14_EN)
      uart_uart_vrXmitBuffer_14 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_14_D_IN;
    if (uart_uart_vrXmitBuffer_15_EN)
      uart_uart_vrXmitBuffer_15 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_15_D_IN;
    if (uart_uart_vrXmitBuffer_16_EN)
      uart_uart_vrXmitBuffer_16 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_16_D_IN;
    if (uart_uart_vrXmitBuffer_17_EN)
      uart_uart_vrXmitBuffer_17 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_17_D_IN;
    if (uart_uart_vrXmitBuffer_18_EN)
      uart_uart_vrXmitBuffer_18 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_18_D_IN;
    if (uart_uart_vrXmitBuffer_19_EN)
      uart_uart_vrXmitBuffer_19 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_19_D_IN;
    if (uart_uart_vrXmitBuffer_2_EN)
      uart_uart_vrXmitBuffer_2 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_2_D_IN;
    if (uart_uart_vrXmitBuffer_20_EN)
      uart_uart_vrXmitBuffer_20 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_20_D_IN;
    if (uart_uart_vrXmitBuffer_21_EN)
      uart_uart_vrXmitBuffer_21 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_21_D_IN;
    if (uart_uart_vrXmitBuffer_22_EN)
      uart_uart_vrXmitBuffer_22 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_22_D_IN;
    if (uart_uart_vrXmitBuffer_23_EN)
      uart_uart_vrXmitBuffer_23 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_23_D_IN;
    if (uart_uart_vrXmitBuffer_24_EN)
      uart_uart_vrXmitBuffer_24 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_24_D_IN;
    if (uart_uart_vrXmitBuffer_25_EN)
      uart_uart_vrXmitBuffer_25 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_25_D_IN;
    if (uart_uart_vrXmitBuffer_26_EN)
      uart_uart_vrXmitBuffer_26 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_26_D_IN;
    if (uart_uart_vrXmitBuffer_27_EN)
      uart_uart_vrXmitBuffer_27 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_27_D_IN;
    if (uart_uart_vrXmitBuffer_28_EN)
      uart_uart_vrXmitBuffer_28 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_28_D_IN;
    if (uart_uart_vrXmitBuffer_29_EN)
      uart_uart_vrXmitBuffer_29 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_29_D_IN;
    if (uart_uart_vrXmitBuffer_3_EN)
      uart_uart_vrXmitBuffer_3 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_3_D_IN;
    if (uart_uart_vrXmitBuffer_30_EN)
      uart_uart_vrXmitBuffer_30 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_30_D_IN;
    if (uart_uart_vrXmitBuffer_31_EN)
      uart_uart_vrXmitBuffer_31 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_31_D_IN;
    if (uart_uart_vrXmitBuffer_4_EN)
      uart_uart_vrXmitBuffer_4 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_4_D_IN;
    if (uart_uart_vrXmitBuffer_5_EN)
      uart_uart_vrXmitBuffer_5 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_5_D_IN;
    if (uart_uart_vrXmitBuffer_6_EN)
      uart_uart_vrXmitBuffer_6 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_6_D_IN;
    if (uart_uart_vrXmitBuffer_7_EN)
      uart_uart_vrXmitBuffer_7 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_7_D_IN;
    if (uart_uart_vrXmitBuffer_8_EN)
      uart_uart_vrXmitBuffer_8 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_8_D_IN;
    if (uart_uart_vrXmitBuffer_9_EN)
      uart_uart_vrXmitBuffer_9 <= `BSV_ASSIGNMENT_DELAY
	  uart_uart_vrXmitBuffer_9_D_IN;
  end

  always@(posedge CLK or `BSV_RESET_EDGE RST_N)
  if (RST_N == `BSV_RESET_VALUE)
    begin
      dump1 <= `BSV_ASSIGNMENT_DELAY 32'd0;
      uart_baud_value <= `BSV_ASSIGNMENT_DELAY 16'd5;
      uart_rg_charsize <= `BSV_ASSIGNMENT_DELAY 6'd8;
      uart_rg_delay_control <= `BSV_ASSIGNMENT_DELAY 16'd0;
      uart_rg_interrupt_en <= `BSV_ASSIGNMENT_DELAY 16'd0;
      uart_rg_parity <= `BSV_ASSIGNMENT_DELAY 2'd0;
      uart_rg_rx_threshold <= `BSV_ASSIGNMENT_DELAY 5'd5;
      uart_rg_stopbits <= `BSV_ASSIGNMENT_DELAY 2'd0;
      uart_uart_error_status_register <= `BSV_ASSIGNMENT_DELAY 4'd0;
      uart_uart_fifo_almost_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_out_enable <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_rRecvBitCount <= `BSV_ASSIGNMENT_DELAY 6'd0;
      uart_uart_rRecvCellCount <= `BSV_ASSIGNMENT_DELAY 4'd0;
      uart_uart_rRecvData <= `BSV_ASSIGNMENT_DELAY 1'd1;
      uart_uart_rRecvParity <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_rRecvState <= `BSV_ASSIGNMENT_DELAY 3'd0;
      uart_uart_rXmitBitCount <= `BSV_ASSIGNMENT_DELAY 6'd0;
      uart_uart_rXmitCellCount <= `BSV_ASSIGNMENT_DELAY 4'd0;
      uart_uart_rXmitDataOut <= `BSV_ASSIGNMENT_DELAY 1'd1;
      uart_uart_rXmitParity <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_rXmitState <= `BSV_ASSIGNMENT_DELAY 4'd0;
      uart_uart_rg_delay_count <= `BSV_ASSIGNMENT_DELAY 16'd0;
      uart_uart_vrRecvBuffer_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_10 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_11 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_12 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_13 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_14 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_15 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_16 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_17 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_18 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_19 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_20 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_21 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_22 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_23 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_24 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_25 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_26 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_27 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_28 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_29 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_30 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_31 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_5 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_6 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_7 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_8 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      uart_uart_vrRecvBuffer_9 <= `BSV_ASSIGNMENT_DELAY 1'd0;
    end
  else
    begin
      if (dump1_EN) dump1 <= `BSV_ASSIGNMENT_DELAY dump1_D_IN;
      if (uart_baud_value_EN)
	uart_baud_value <= `BSV_ASSIGNMENT_DELAY uart_baud_value_D_IN;
      if (uart_rg_charsize_EN)
	uart_rg_charsize <= `BSV_ASSIGNMENT_DELAY uart_rg_charsize_D_IN;
      if (uart_rg_delay_control_EN)
	uart_rg_delay_control <= `BSV_ASSIGNMENT_DELAY
	    uart_rg_delay_control_D_IN;
      if (uart_rg_interrupt_en_EN)
	uart_rg_interrupt_en <= `BSV_ASSIGNMENT_DELAY
	    uart_rg_interrupt_en_D_IN;
      if (uart_rg_parity_EN)
	uart_rg_parity <= `BSV_ASSIGNMENT_DELAY uart_rg_parity_D_IN;
      if (uart_rg_rx_threshold_EN)
	uart_rg_rx_threshold <= `BSV_ASSIGNMENT_DELAY
	    uart_rg_rx_threshold_D_IN;
      if (uart_rg_stopbits_EN)
	uart_rg_stopbits <= `BSV_ASSIGNMENT_DELAY uart_rg_stopbits_D_IN;
      if (uart_uart_error_status_register_EN)
	uart_uart_error_status_register <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_error_status_register_D_IN;
      if (uart_uart_fifo_almost_full_EN)
	uart_uart_fifo_almost_full <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_fifo_almost_full_D_IN;
      if (uart_uart_out_enable_EN)
	uart_uart_out_enable <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_out_enable_D_IN;
      if (uart_uart_rRecvBitCount_EN)
	uart_uart_rRecvBitCount <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_rRecvBitCount_D_IN;
      if (uart_uart_rRecvCellCount_EN)
	uart_uart_rRecvCellCount <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_rRecvCellCount_D_IN;
      if (uart_uart_rRecvData_EN)
	uart_uart_rRecvData <= `BSV_ASSIGNMENT_DELAY uart_uart_rRecvData_D_IN;
      if (uart_uart_rRecvParity_EN)
	uart_uart_rRecvParity <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_rRecvParity_D_IN;
      if (uart_uart_rRecvState_EN)
	uart_uart_rRecvState <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_rRecvState_D_IN;
      if (uart_uart_rXmitBitCount_EN)
	uart_uart_rXmitBitCount <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_rXmitBitCount_D_IN;
      if (uart_uart_rXmitCellCount_EN)
	uart_uart_rXmitCellCount <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_rXmitCellCount_D_IN;
      if (uart_uart_rXmitDataOut_EN)
	uart_uart_rXmitDataOut <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_rXmitDataOut_D_IN;
      if (uart_uart_rXmitParity_EN)
	uart_uart_rXmitParity <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_rXmitParity_D_IN;
      if (uart_uart_rXmitState_EN)
	uart_uart_rXmitState <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_rXmitState_D_IN;
      if (uart_uart_rg_delay_count_EN)
	uart_uart_rg_delay_count <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_rg_delay_count_D_IN;
      if (uart_uart_vrRecvBuffer_0_EN)
	uart_uart_vrRecvBuffer_0 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_0_D_IN;
      if (uart_uart_vrRecvBuffer_1_EN)
	uart_uart_vrRecvBuffer_1 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_1_D_IN;
      if (uart_uart_vrRecvBuffer_10_EN)
	uart_uart_vrRecvBuffer_10 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_10_D_IN;
      if (uart_uart_vrRecvBuffer_11_EN)
	uart_uart_vrRecvBuffer_11 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_11_D_IN;
      if (uart_uart_vrRecvBuffer_12_EN)
	uart_uart_vrRecvBuffer_12 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_12_D_IN;
      if (uart_uart_vrRecvBuffer_13_EN)
	uart_uart_vrRecvBuffer_13 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_13_D_IN;
      if (uart_uart_vrRecvBuffer_14_EN)
	uart_uart_vrRecvBuffer_14 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_14_D_IN;
      if (uart_uart_vrRecvBuffer_15_EN)
	uart_uart_vrRecvBuffer_15 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_15_D_IN;
      if (uart_uart_vrRecvBuffer_16_EN)
	uart_uart_vrRecvBuffer_16 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_16_D_IN;
      if (uart_uart_vrRecvBuffer_17_EN)
	uart_uart_vrRecvBuffer_17 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_17_D_IN;
      if (uart_uart_vrRecvBuffer_18_EN)
	uart_uart_vrRecvBuffer_18 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_18_D_IN;
      if (uart_uart_vrRecvBuffer_19_EN)
	uart_uart_vrRecvBuffer_19 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_19_D_IN;
      if (uart_uart_vrRecvBuffer_2_EN)
	uart_uart_vrRecvBuffer_2 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_2_D_IN;
      if (uart_uart_vrRecvBuffer_20_EN)
	uart_uart_vrRecvBuffer_20 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_20_D_IN;
      if (uart_uart_vrRecvBuffer_21_EN)
	uart_uart_vrRecvBuffer_21 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_21_D_IN;
      if (uart_uart_vrRecvBuffer_22_EN)
	uart_uart_vrRecvBuffer_22 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_22_D_IN;
      if (uart_uart_vrRecvBuffer_23_EN)
	uart_uart_vrRecvBuffer_23 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_23_D_IN;
      if (uart_uart_vrRecvBuffer_24_EN)
	uart_uart_vrRecvBuffer_24 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_24_D_IN;
      if (uart_uart_vrRecvBuffer_25_EN)
	uart_uart_vrRecvBuffer_25 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_25_D_IN;
      if (uart_uart_vrRecvBuffer_26_EN)
	uart_uart_vrRecvBuffer_26 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_26_D_IN;
      if (uart_uart_vrRecvBuffer_27_EN)
	uart_uart_vrRecvBuffer_27 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_27_D_IN;
      if (uart_uart_vrRecvBuffer_28_EN)
	uart_uart_vrRecvBuffer_28 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_28_D_IN;
      if (uart_uart_vrRecvBuffer_29_EN)
	uart_uart_vrRecvBuffer_29 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_29_D_IN;
      if (uart_uart_vrRecvBuffer_3_EN)
	uart_uart_vrRecvBuffer_3 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_3_D_IN;
      if (uart_uart_vrRecvBuffer_30_EN)
	uart_uart_vrRecvBuffer_30 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_30_D_IN;
      if (uart_uart_vrRecvBuffer_31_EN)
	uart_uart_vrRecvBuffer_31 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_31_D_IN;
      if (uart_uart_vrRecvBuffer_4_EN)
	uart_uart_vrRecvBuffer_4 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_4_D_IN;
      if (uart_uart_vrRecvBuffer_5_EN)
	uart_uart_vrRecvBuffer_5 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_5_D_IN;
      if (uart_uart_vrRecvBuffer_6_EN)
	uart_uart_vrRecvBuffer_6 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_6_D_IN;
      if (uart_uart_vrRecvBuffer_7_EN)
	uart_uart_vrRecvBuffer_7 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_7_D_IN;
      if (uart_uart_vrRecvBuffer_8_EN)
	uart_uart_vrRecvBuffer_8 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_8_D_IN;
      if (uart_uart_vrRecvBuffer_9_EN)
	uart_uart_vrRecvBuffer_9 <= `BSV_ASSIGNMENT_DELAY
	    uart_uart_vrRecvBuffer_9_D_IN;
    end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    dump = 32'hAAAAAAAA;
    dump1 = 32'hAAAAAAAA;
    rg_cnt = 5'h0A;
    rg_inst_count = 32'hAAAAAAAA;
    rg_prev_misa = 64'hAAAAAAAAAAAAAAAA;
    rg_prev_mstatus = 64'hAAAAAAAAAAAAAAAA;
    rg_prev_mstatus_valid = 1'h0;
    rg_read_rx = 1'h0;
    uart_baud_value = 16'hAAAA;
    uart_rg_charsize = 6'h2A;
    uart_rg_delay_control = 16'hAAAA;
    uart_rg_interrupt_en = 16'hAAAA;
    uart_rg_parity = 2'h2;
    uart_rg_rx_threshold = 5'h0A;
    uart_rg_stopbits = 2'h2;
    uart_uart_error_status_register = 4'hA;
    uart_uart_fifoRecv_countReg = 5'h0A;
    uart_uart_fifoXmit_countReg = 5'h0A;
    uart_uart_fifo_almost_full = 1'h0;
    uart_uart_out_enable = 1'h0;
    uart_uart_rRecvBitCount = 6'h2A;
    uart_uart_rRecvCellCount = 4'hA;
    uart_uart_rRecvData = 1'h0;
    uart_uart_rRecvParity = 1'h0;
    uart_uart_rRecvState = 3'h2;
    uart_uart_rXmitBitCount = 6'h2A;
    uart_uart_rXmitCellCount = 4'hA;
    uart_uart_rXmitDataOut = 1'h0;
    uart_uart_rXmitParity = 1'h0;
    uart_uart_rXmitState = 4'hA;
    uart_uart_rg_delay_count = 16'hAAAA;
    uart_uart_vrRecvBuffer_0 = 1'h0;
    uart_uart_vrRecvBuffer_1 = 1'h0;
    uart_uart_vrRecvBuffer_10 = 1'h0;
    uart_uart_vrRecvBuffer_11 = 1'h0;
    uart_uart_vrRecvBuffer_12 = 1'h0;
    uart_uart_vrRecvBuffer_13 = 1'h0;
    uart_uart_vrRecvBuffer_14 = 1'h0;
    uart_uart_vrRecvBuffer_15 = 1'h0;
    uart_uart_vrRecvBuffer_16 = 1'h0;
    uart_uart_vrRecvBuffer_17 = 1'h0;
    uart_uart_vrRecvBuffer_18 = 1'h0;
    uart_uart_vrRecvBuffer_19 = 1'h0;
    uart_uart_vrRecvBuffer_2 = 1'h0;
    uart_uart_vrRecvBuffer_20 = 1'h0;
    uart_uart_vrRecvBuffer_21 = 1'h0;
    uart_uart_vrRecvBuffer_22 = 1'h0;
    uart_uart_vrRecvBuffer_23 = 1'h0;
    uart_uart_vrRecvBuffer_24 = 1'h0;
    uart_uart_vrRecvBuffer_25 = 1'h0;
    uart_uart_vrRecvBuffer_26 = 1'h0;
    uart_uart_vrRecvBuffer_27 = 1'h0;
    uart_uart_vrRecvBuffer_28 = 1'h0;
    uart_uart_vrRecvBuffer_29 = 1'h0;
    uart_uart_vrRecvBuffer_3 = 1'h0;
    uart_uart_vrRecvBuffer_30 = 1'h0;
    uart_uart_vrRecvBuffer_31 = 1'h0;
    uart_uart_vrRecvBuffer_4 = 1'h0;
    uart_uart_vrRecvBuffer_5 = 1'h0;
    uart_uart_vrRecvBuffer_6 = 1'h0;
    uart_uart_vrRecvBuffer_7 = 1'h0;
    uart_uart_vrRecvBuffer_8 = 1'h0;
    uart_uart_vrRecvBuffer_9 = 1'h0;
    uart_uart_vrXmitBuffer_0 = 1'h0;
    uart_uart_vrXmitBuffer_1 = 1'h0;
    uart_uart_vrXmitBuffer_10 = 1'h0;
    uart_uart_vrXmitBuffer_11 = 1'h0;
    uart_uart_vrXmitBuffer_12 = 1'h0;
    uart_uart_vrXmitBuffer_13 = 1'h0;
    uart_uart_vrXmitBuffer_14 = 1'h0;
    uart_uart_vrXmitBuffer_15 = 1'h0;
    uart_uart_vrXmitBuffer_16 = 1'h0;
    uart_uart_vrXmitBuffer_17 = 1'h0;
    uart_uart_vrXmitBuffer_18 = 1'h0;
    uart_uart_vrXmitBuffer_19 = 1'h0;
    uart_uart_vrXmitBuffer_2 = 1'h0;
    uart_uart_vrXmitBuffer_20 = 1'h0;
    uart_uart_vrXmitBuffer_21 = 1'h0;
    uart_uart_vrXmitBuffer_22 = 1'h0;
    uart_uart_vrXmitBuffer_23 = 1'h0;
    uart_uart_vrXmitBuffer_24 = 1'h0;
    uart_uart_vrXmitBuffer_25 = 1'h0;
    uart_uart_vrXmitBuffer_26 = 1'h0;
    uart_uart_vrXmitBuffer_27 = 1'h0;
    uart_uart_vrXmitBuffer_28 = 1'h0;
    uart_uart_vrXmitBuffer_29 = 1'h0;
    uart_uart_vrXmitBuffer_3 = 1'h0;
    uart_uart_vrXmitBuffer_30 = 1'h0;
    uart_uart_vrXmitBuffer_31 = 1'h0;
    uart_uart_vrXmitBuffer_4 = 1'h0;
    uart_uart_vrXmitBuffer_5 = 1'h0;
    uart_uart_vrXmitBuffer_6 = 1'h0;
    uart_uart_vrXmitBuffer_7 = 1'h0;
    uart_uart_vrXmitBuffer_8 = 1'h0;
    uart_uart_vrXmitBuffer_9 = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    begin
      Task__time__avValue1 = $time;
      #0;
    end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_open_file_rtldump)
	begin
	  TASK_testplusargs___d368 = $test$plusargs("rtldump");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_open_file_rtldump && TASK_testplusargs___d368)
	begin
	  TASK_fopen___d369 = $fopen("rtl.dump", "w");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_open_file_rtldump && TASK_testplusargs___d368 &&
	  TASK_fopen___d369 == 32'd0)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_received_character)
	$fwrite(dump1, "%c", data__h39642);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file)
	begin
	  TASK_testplusargs___d399 = $test$plusargs("rtldump");
	  #0;
	end
    NOT_soc_soc_sb_commitlog__89_BITS_242_TO_211_9_ETC___d407 =
	soc_soc_sb_commitlog[242:211] != 32'h0000006F &&
	soc_soc_sb_commitlog[242:211] != 32'h0000A001 &&
	TASK_testplusargs___d399 &&
	x__h40214 == 32'd0 &&
	rg_inst_count != 32'd0;
    NOT_soc_soc_sb_commitlog__89_BITS_242_TO_211_9_ETC___d949 =
	soc_soc_sb_commitlog[242:211] != 32'h0000006F &&
	soc_soc_sb_commitlog[242:211] != 32'h0000A001 &&
	TASK_testplusargs___d399 &&
	soc_soc_sb_commitlog[210:209] == 2'd2 &&
	(soc_soc_sb_commitlog[1:0] != 2'b10 ||
	 soc_soc_sb_commitlog[230:226] != 5'd0) &&
	_theResult_____2__h46826 == 12'h301 &&
	wdata__h47052 != rg_prev_misa;
    soc_soc_sb_commitlog__89_BIT_309_90_AND_NOT_so_ETC___d533 =
	soc_soc_sb_commitlog[309] &&
	soc_soc_sb_commitlog[242:211] != 32'h0000006F &&
	soc_soc_sb_commitlog[242:211] != 32'h0000A001 &&
	TASK_testplusargs___d399 &&
	soc_soc_sb_commitlog[210:209] == 2'd2 &&
	(soc_soc_sb_commitlog[1:0] != 2'b10 ||
	 soc_soc_sb_commitlog[230:226] != 5'd0) &&
	_theResult_____2__h46826 != 12'h003 &&
	_theResult_____2__h46826 != 12'h301;
    soc_soc_sb_commitlog__89_BIT_309_90_AND_NOT_so_ETC___d955 =
	soc_soc_sb_commitlog[309] &&
	soc_soc_sb_commitlog[242:211] != 32'h0000006F &&
	soc_soc_sb_commitlog[242:211] != 32'h0000A001 &&
	TASK_testplusargs___d399 &&
	soc_soc_sb_commitlog[210:209] == 2'd2 &&
	_theResult_____2__h46826 == 12'h003 &&
	(soc_soc_sb_commitlog[1:0] != 2'b10 ||
	 soc_soc_sb_commitlog[230:226] != 5'd0);
    soc_soc_sb_commitlog__89_BIT_309_90_AND_NOT_so_ETC___d969 =
	soc_soc_sb_commitlog[309] &&
	soc_soc_sb_commitlog[242:211] != 32'h0000006F &&
	soc_soc_sb_commitlog[242:211] != 32'h0000A001 &&
	TASK_testplusargs___d399 &&
	soc_soc_sb_commitlog[210:209] == 2'd2 &&
	(_theResult_____2__h46826 == 12'h003 ||
	 _theResult_____2__h46826 == 12'h002 ||
	 _theResult_____2__h46826 == 12'h001) &&
	NOT_rg_prev_mstatus_valid_58_59_OR_NOT_soc_soc_ETC___d964;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file)
	begin
	  Task__stime__avValue2 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file && soc_soc_sb_commitlog[309] &&
	  (soc_soc_sb_commitlog[242:211] == 32'h0000006F ||
	   soc_soc_sb_commitlog[242:211] == 32'h0000A001))
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file && soc_soc_sb_commitlog[309] &&
	  NOT_soc_soc_sb_commitlog__89_BITS_242_TO_211_9_ETC___d407)
	if (x__h40270 == 32'd0)
	  begin
	    TASK_fopen___d412 = $fopen("rtl0.dump", "w");
	    #0;
	  end
	else
	  if (x__h40270 == 32'd1)
	    begin
	      TASK_fopen___d412 = $fopen("rtl1.dump", "w");
	      #0;
	    end
	  else
	    if (x__h40270 == 32'd2)
	      begin
	        TASK_fopen___d412 = $fopen("rtl2.dump", "w");
		#0;
	      end
	    else
	      if (x__h40270 == 32'd3)
		begin
		  TASK_fopen___d412 = $fopen("rtl3.dump", "w");
		  #0;
		end
	      else
		if (x__h40270 == 32'd4)
		  begin
		    TASK_fopen___d412 = $fopen("rtl4.dump", "w");
		    #0;
		  end
		else
		  if (x__h40270 == 32'd5)
		    begin
		      TASK_fopen___d412 = $fopen("rtl5.dump", "w");
		      #0;
		    end
		  else
		    if (x__h40270 == 32'd6)
		      begin
		        TASK_fopen___d412 = $fopen("rtl6.dump", "w");
			#0;
		      end
		    else
		      if (x__h40270 == 32'd7)
			begin
			  TASK_fopen___d412 = $fopen("rtl7.dump", "w");
			  #0;
			end
		      else
			if (x__h40270 == 32'd8)
			  begin
			    TASK_fopen___d412 = $fopen("rtl8.dump", "w");
			    #0;
			  end
			else
			  if (x__h40270 == 32'd9)
			    begin
			      TASK_fopen___d412 = $fopen("rtl9.dump", "w");
			      #0;
			    end
			  else
			    if (x__h40270 == 32'd10)
			      begin
			        TASK_fopen___d412 = $fopen("rtl10.dump", "w");
				#0;
			      end
			    else
			      if (x__h40270 == 32'd11)
				begin
				  TASK_fopen___d412 =
				      $fopen("rtl11.dump", "w");
				  #0;
				end
			      else
				if (x__h40270 == 32'd12)
				  begin
				    TASK_fopen___d412 =
					$fopen("rtl12.dump", "w");
				    #0;
				  end
				else
				  if (x__h40270 == 32'd13)
				    begin
				      TASK_fopen___d412 =
					  $fopen("rtl13.dump", "w");
				      #0;
				    end
				  else
				    if (x__h40270 == 32'd14)
				      begin
				        TASK_fopen___d412 =
					    $fopen("rtl14.dump", "w");
					#0;
				      end
				    else
				      if (x__h40270 == 32'd15)
					begin
					  TASK_fopen___d412 =
					      $fopen("rtl15.dump", "w");
					  #0;
					end
				      else
					if (x__h40270 == 32'd16)
					  begin
					    TASK_fopen___d412 =
						$fopen("rtl16.dump", "w");
					    #0;
					  end
					else
					  if (x__h40270 == 32'd17)
					    begin
					      TASK_fopen___d412 =
						  $fopen("rtl17.dump", "w");
					      #0;
					    end
					  else
					    if (x__h40270 == 32'd18)
					      begin
					        TASK_fopen___d412 =
						    $fopen("rtl18.dump", "w");
						#0;
					      end
					    else
					      if (x__h40270 == 32'd19)
						begin
						  TASK_fopen___d412 =
						      $fopen("rtl19.dump",
							     "w");
						  #0;
						end
					      else
						if (x__h40270 == 32'd20)
						  begin
						    TASK_fopen___d412 =
							$fopen("rtl20.dump",
							       "w");
						    #0;
						  end
						else
						  if (x__h40270 == 32'd21)
						    begin
						      TASK_fopen___d412 =
							  $fopen("rtl21.dump",
								 "w");
						      #0;
						    end
						  else
						    if (x__h40270 == 32'd22)
						      begin
						        TASK_fopen___d412 =
							    $fopen("rtl22.dump",
								   "w");
							#0;
						      end
						    else
						      if (x__h40270 == 32'd23)
							begin
							  TASK_fopen___d412 =
							      $fopen("rtl23.dump",
								     "w");
							  #0;
							end
						      else
							if (x__h40270 ==
							    32'd24)
							  begin
							    TASK_fopen___d412 =
								$fopen("rtl24.dump",
								       "w");
							    #0;
							  end
							else
							  if (x__h40270 ==
							      32'd25)
							    begin
							      TASK_fopen___d412 =
								  $fopen("rtl25.dump",
									 "w");
							      #0;
							    end
							  else
							    if (x__h40270 ==
								32'd26)
							      begin
							        TASK_fopen___d412 =
								    $fopen("rtl26.dump",
									   "w");
								#0;
							      end
							    else
							      if (x__h40270 ==
								  32'd27)
								begin
								  TASK_fopen___d412 =
								      $fopen("rtl27.dump",
									     "w");
								  #0;
								end
							      else
								if (x__h40270 ==
								    32'd28)
								  begin
								    TASK_fopen___d412 =
									$fopen("rtl28.dump",
									       "w");
								    #0;
								  end
								else
								  if (x__h40270 ==
								      32'd29)
								    begin
								      TASK_fopen___d412 =
									  $fopen("rtl29.dump",
										 "w");
								      #0;
								    end
								  else
								    if (x__h40270 ==
									32'd30)
								      begin
								        TASK_fopen___d412 =
									    $fopen("rtl30.dump",
										   "w");
									#0;
								      end
								    else
								      if (x__h40270 ==
									  32'd31)
									begin
									  TASK_fopen___d412 =
									      $fopen("rtl31.dump",
										     "w");
									  #0;
									end
								      else
									if (x__h40270 ==
									    32'd32)
									  begin
									    TASK_fopen___d412 =
										$fopen("rtl32.dump",
										       "w");
									    #0;
									  end
									else
									  if (x__h40270 ==
									      32'd33)
									    begin
									      TASK_fopen___d412 =
										  $fopen("rtl33.dump",
											 "w");
									      #0;
									    end
									  else
									    if (x__h40270 ==
										32'd34)
									      begin
									        TASK_fopen___d412 =
										    $fopen("rtl34.dump",
											   "w");
										#0;
									      end
									    else
									      if (x__h40270 ==
										  32'd35)
										begin
										  TASK_fopen___d412 =
										      $fopen("rtl35.dump",
											     "w");
										  #0;
										end
									      else
										if (x__h40270 ==
										    32'd36)
										  begin
										    TASK_fopen___d412 =
											$fopen("rtl36.dump",
											       "w");
										    #0;
										  end
										else
										  if (x__h40270 ==
										      32'd37)
										    begin
										      TASK_fopen___d412 =
											  $fopen("rtl37.dump",
												 "w");
										      #0;
										    end
										  else
										    if (x__h40270 ==
											32'd38)
										      begin
										        TASK_fopen___d412 =
											    $fopen("rtl38.dump",
												   "w");
											#0;
										      end
										    else
										      if (x__h40270 ==
											  32'd39)
											begin
											  TASK_fopen___d412 =
											      $fopen("rtl39.dump",
												     "w");
											  #0;
											end
										      else
											if (x__h40270 ==
											    32'd40)
											  begin
											    TASK_fopen___d412 =
												$fopen("rtl40.dump",
												       "w");
											    #0;
											  end
											else
											  if (x__h40270 ==
											      32'd41)
											    begin
											      TASK_fopen___d412 =
												  $fopen("rtl41.dump",
													 "w");
											      #0;
											    end
											  else
											    if (x__h40270 ==
												32'd42)
											      begin
											        TASK_fopen___d412 =
												    $fopen("rtl42.dump",
													   "w");
												#0;
											      end
											    else
											      if (x__h40270 ==
												  32'd43)
												begin
												  TASK_fopen___d412 =
												      $fopen("rtl43.dump",
													     "w");
												  #0;
												end
											      else
												if (x__h40270 ==
												    32'd44)
												  begin
												    TASK_fopen___d412 =
													$fopen("rtl44.dump",
													       "w");
												    #0;
												  end
												else
												  if (x__h40270 ==
												      32'd45)
												    begin
												      TASK_fopen___d412 =
													  $fopen("rtl45.dump",
														 "w");
												      #0;
												    end
												  else
												    if (x__h40270 ==
													32'd46)
												      begin
												        TASK_fopen___d412 =
													    $fopen("rtl46.dump",
														   "w");
													#0;
												      end
												    else
												      if (x__h40270 ==
													  32'd47)
													begin
													  TASK_fopen___d412 =
													      $fopen("rtl47.dump",
														     "w");
													  #0;
													end
												      else
													if (x__h40270 ==
													    32'd48)
													  begin
													    TASK_fopen___d412 =
														$fopen("rtl48.dump",
														       "w");
													    #0;
													  end
													else
													  if (x__h40270 ==
													      32'd49)
													    begin
													      TASK_fopen___d412 =
														  $fopen("rtl49.dump",
															 "w");
													      #0;
													    end
													  else
													    if (x__h40270 ==
														32'd50)
													      begin
													        TASK_fopen___d412 =
														    $fopen("rtl50.dump",
															   "w");
														#0;
													      end
													    else
													      if (x__h40270 ==
														  32'd51)
														begin
														  TASK_fopen___d412 =
														      $fopen("rtl51.dump",
															     "w");
														  #0;
														end
													      else
														if (x__h40270 ==
														    32'd52)
														  begin
														    TASK_fopen___d412 =
															$fopen("rtl52.dump",
															       "w");
														    #0;
														  end
														else
														  if (x__h40270 ==
														      32'd53)
														    begin
														      TASK_fopen___d412 =
															  $fopen("rtl53.dump",
																 "w");
														      #0;
														    end
														  else
														    if (x__h40270 ==
															32'd54)
														      begin
														        TASK_fopen___d412 =
															    $fopen("rtl54.dump",
																   "w");
															#0;
														      end
														    else
														      if (x__h40270 ==
															  32'd55)
															begin
															  TASK_fopen___d412 =
															      $fopen("rtl55.dump",
																     "w");
															  #0;
															end
														      else
															if (x__h40270 ==
															    32'd56)
															  begin
															    TASK_fopen___d412 =
																$fopen("rtl56.dump",
																       "w");
															    #0;
															  end
															else
															  if (x__h40270 ==
															      32'd57)
															    begin
															      TASK_fopen___d412 =
																  $fopen("rtl57.dump",
																	 "w");
															      #0;
															    end
															  else
															    if (x__h40270 ==
																32'd58)
															      begin
															        TASK_fopen___d412 =
																    $fopen("rtl58.dump",
																	   "w");
																#0;
															      end
															    else
															      if (x__h40270 ==
																  32'd59)
																begin
																  TASK_fopen___d412 =
																      $fopen("rtl59.dump",
																	     "w");
																  #0;
																end
															      else
																if (x__h40270 ==
																    32'd60)
																  begin
																    TASK_fopen___d412 =
																	$fopen("rtl60.dump",
																	       "w");
																    #0;
																  end
																else
																  if (x__h40270 ==
																      32'd61)
																    begin
																      TASK_fopen___d412 =
																	  $fopen("rtl61.dump",
																		 "w");
																      #0;
																    end
																  else
																    if (x__h40270 ==
																	32'd62)
																      begin
																        TASK_fopen___d412 =
																	    $fopen("rtl62.dump",
																		   "w");
																	#0;
																      end
																    else
																      if (x__h40270 ==
																	  32'd63)
																	begin
																	  TASK_fopen___d412 =
																	      $fopen("rtl63.dump",
																		     "w");
																	  #0;
																	end
																      else
																	if (x__h40270 ==
																	    32'd64)
																	  begin
																	    TASK_fopen___d412 =
																		$fopen("rtl64.dump",
																		       "w");
																	    #0;
																	  end
																	else
																	  if (x__h40270 ==
																	      32'd65)
																	    begin
																	      TASK_fopen___d412 =
																		  $fopen("rtl65.dump",
																			 "w");
																	      #0;
																	    end
																	  else
																	    if (x__h40270 ==
																		32'd66)
																	      begin
																	        TASK_fopen___d412 =
																		    $fopen("rtl66.dump",
																			   "w");
																		#0;
																	      end
																	    else
																	      if (x__h40270 ==
																		  32'd67)
																		begin
																		  TASK_fopen___d412 =
																		      $fopen("rtl67.dump",
																			     "w");
																		  #0;
																		end
																	      else
																		if (x__h40270 ==
																		    32'd68)
																		  begin
																		    TASK_fopen___d412 =
																			$fopen("rtl68.dump",
																			       "w");
																		    #0;
																		  end
																		else
																		  if (x__h40270 ==
																		      32'd69)
																		    begin
																		      TASK_fopen___d412 =
																			  $fopen("rtl69.dump",
																				 "w");
																		      #0;
																		    end
																		  else
																		    if (x__h40270 ==
																			32'd70)
																		      begin
																		        TASK_fopen___d412 =
																			    $fopen("rtl70.dump",
																				   "w");
																			#0;
																		      end
																		    else
																		      if (x__h40270 ==
																			  32'd71)
																			begin
																			  TASK_fopen___d412 =
																			      $fopen("rtl71.dump",
																				     "w");
																			  #0;
																			end
																		      else
																			if (x__h40270 ==
																			    32'd72)
																			  begin
																			    TASK_fopen___d412 =
																				$fopen("rtl72.dump",
																				       "w");
																			    #0;
																			  end
																			else
																			  if (x__h40270 ==
																			      32'd73)
																			    begin
																			      TASK_fopen___d412 =
																				  $fopen("rtl73.dump",
																					 "w");
																			      #0;
																			    end
																			  else
																			    if (x__h40270 ==
																				32'd74)
																			      begin
																			        TASK_fopen___d412 =
																				    $fopen("rtl74.dump",
																					   "w");
																				#0;
																			      end
																			    else
																			      if (x__h40270 ==
																				  32'd75)
																				begin
																				  TASK_fopen___d412 =
																				      $fopen("rtl75.dump",
																					     "w");
																				  #0;
																				end
																			      else
																				if (x__h40270 ==
																				    32'd76)
																				  begin
																				    TASK_fopen___d412 =
																					$fopen("rtl76.dump",
																					       "w");
																				    #0;
																				  end
																				else
																				  if (x__h40270 ==
																				      32'd77)
																				    begin
																				      TASK_fopen___d412 =
																					  $fopen("rtl77.dump",
																						 "w");
																				      #0;
																				    end
																				  else
																				    if (x__h40270 ==
																					32'd78)
																				      begin
																				        TASK_fopen___d412 =
																					    $fopen("rtl78.dump",
																						   "w");
																					#0;
																				      end
																				    else
																				      if (x__h40270 ==
																					  32'd79)
																					begin
																					  TASK_fopen___d412 =
																					      $fopen("rtl79.dump",
																						     "w");
																					  #0;
																					end
																				      else
																					if (x__h40270 ==
																					    32'd80)
																					  begin
																					    TASK_fopen___d412 =
																						$fopen("rtl80.dump",
																						       "w");
																					    #0;
																					  end
																					else
																					  if (x__h40270 ==
																					      32'd81)
																					    begin
																					      TASK_fopen___d412 =
																						  $fopen("rtl81.dump",
																							 "w");
																					      #0;
																					    end
																					  else
																					    if (x__h40270 ==
																						32'd82)
																					      begin
																					        TASK_fopen___d412 =
																						    $fopen("rtl82.dump",
																							   "w");
																						#0;
																					      end
																					    else
																					      if (x__h40270 ==
																						  32'd83)
																						begin
																						  TASK_fopen___d412 =
																						      $fopen("rtl83.dump",
																							     "w");
																						  #0;
																						end
																					      else
																						if (x__h40270 ==
																						    32'd84)
																						  begin
																						    TASK_fopen___d412 =
																							$fopen("rtl84.dump",
																							       "w");
																						    #0;
																						  end
																						else
																						  if (x__h40270 ==
																						      32'd85)
																						    begin
																						      TASK_fopen___d412 =
																							  $fopen("rtl85.dump",
																								 "w");
																						      #0;
																						    end
																						  else
																						    if (x__h40270 ==
																							32'd86)
																						      begin
																						        TASK_fopen___d412 =
																							    $fopen("rtl86.dump",
																								   "w");
																							#0;
																						      end
																						    else
																						      if (x__h40270 ==
																							  32'd87)
																							begin
																							  TASK_fopen___d412 =
																							      $fopen("rtl87.dump",
																								     "w");
																							  #0;
																							end
																						      else
																							if (x__h40270 ==
																							    32'd88)
																							  begin
																							    TASK_fopen___d412 =
																								$fopen("rtl88.dump",
																								       "w");
																							    #0;
																							  end
																							else
																							  if (x__h40270 ==
																							      32'd89)
																							    begin
																							      TASK_fopen___d412 =
																								  $fopen("rtl89.dump",
																									 "w");
																							      #0;
																							    end
																							  else
																							    if (x__h40270 ==
																								32'd90)
																							      begin
																							        TASK_fopen___d412 =
																								    $fopen("rtl90.dump",
																									   "w");
																								#0;
																							      end
																							    else
																							      if (x__h40270 ==
																								  32'd91)
																								begin
																								  TASK_fopen___d412 =
																								      $fopen("rtl91.dump",
																									     "w");
																								  #0;
																								end
																							      else
																								if (x__h40270 ==
																								    32'd92)
																								  begin
																								    TASK_fopen___d412 =
																									$fopen("rtl92.dump",
																									       "w");
																								    #0;
																								  end
																								else
																								  if (x__h40270 ==
																								      32'd93)
																								    begin
																								      TASK_fopen___d412 =
																									  $fopen("rtl93.dump",
																										 "w");
																								      #0;
																								    end
																								  else
																								    if (x__h40270 ==
																									32'd94)
																								      begin
																								        TASK_fopen___d412 =
																									    $fopen("rtl94.dump",
																										   "w");
																									#0;
																								      end
																								    else
																								      if (x__h40270 ==
																									  32'd95)
																									begin
																									  TASK_fopen___d412 =
																									      $fopen("rtl95.dump",
																										     "w");
																									  #0;
																									end
																								      else
																									if (x__h40270 ==
																									    32'd96)
																									  begin
																									    TASK_fopen___d412 =
																										$fopen("rtl96.dump",
																										       "w");
																									    #0;
																									  end
																									else
																									  if (x__h40270 ==
																									      32'd97)
																									    begin
																									      TASK_fopen___d412 =
																										  $fopen("rtl97.dump",
																											 "w");
																									      #0;
																									    end
																									  else
																									    if (x__h40270 ==
																										32'd98)
																									      begin
																									        TASK_fopen___d412 =
																										    $fopen("rtl98.dump",
																											   "w");
																										#0;
																									      end
																									    else
																									      begin
																									        TASK_fopen___d412 =
																										    $fopen("rtl99.dump",
																											   "w");
																										#0;
																									      end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file && soc_soc_sb_commitlog[309] &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000006F &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000A001 &&
	  TASK_testplusargs___d399 &&
	  soc_soc_sb_commitlog[212:211] == 2'b11)
	$fwrite(dump,
		"core   0: ",
		soc_soc_sb_commitlog[308:307],
		" 0x%16h",
		soc_soc_sb_commitlog[306:243],
		" (0x%8h",
		soc_soc_sb_commitlog[242:211],
		")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file && soc_soc_sb_commitlog[309] &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000006F &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000A001 &&
	  TASK_testplusargs___d399 &&
	  soc_soc_sb_commitlog[212:211] != 2'b11)
	$fwrite(dump,
		"core   0: ",
		soc_soc_sb_commitlog[308:307],
		" 0x%16h",
		soc_soc_sb_commitlog[306:243],
		" (0x%4h",
		soc_soc_sb_commitlog[226:211],
		")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file && soc_soc_sb_commitlog[309] &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000006F &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000A001 &&
	  TASK_testplusargs___d399 &&
	  soc_soc_sb_commitlog[210:209] == 2'd3 &&
	  (soc_soc_sb_commitlog[242:236] != 7'b0001001 ||
	   soc_soc_sb_commitlog[225:211] != 15'b000000001110011) &&
	  soc_soc_sb_commitlog[4:0] != 5'd0 &&
	  (!soc_soc_sb_commitlog[5] ||
	   soc_soc_sb_commitlog[242:237] == 6'b110000 ||
	   soc_soc_sb_commitlog[242:237] == 6'b101000) &&
	  (soc_soc_sb_commitlog[242:237] != 6'b111000 ||
	   soc_soc_sb_commitlog[217:211] != 7'b1010011) &&
	  (soc_soc_sb_commitlog[242:237] != 6'b111100 ||
	   soc_soc_sb_commitlog[217:211] != 7'b1010011) &&
	  (soc_soc_sb_commitlog[242:237] != 6'b001000 ||
	   soc_soc_sb_commitlog[217:211] != 7'b1010011))
	$fwrite(dump, " ", "c1_fflags", " 0x%16h", wdata_fflags__h49796);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file && soc_soc_sb_commitlog[309] &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000006F &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000A001 &&
	  TASK_testplusargs___d399 &&
	  soc_soc_sb_commitlog[210:209] == 2'd3 &&
	  (soc_soc_sb_commitlog[242:236] != 7'b0001001 &&
	   soc_soc_sb_commitlog[242:236] != 7'b0010001 &&
	   soc_soc_sb_commitlog[242:236] != 7'b0110001 ||
	   soc_soc_sb_commitlog[225:211] != 15'b000000001110011) &&
	  soc_soc_sb_commitlog[5] &&
	  soc_soc_sb_commitlog[10:6] != 5'd0)
	$fwrite(dump,
		" x%0d",
		soc_soc_sb_commitlog[10:6],
		" 0x%16h",
		soc_soc_sb_commitlog[74:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file && soc_soc_sb_commitlog[309] &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000006F &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000A001 &&
	  TASK_testplusargs___d399 &&
	  soc_soc_sb_commitlog[210:209] == 2'd3 &&
	  (soc_soc_sb_commitlog[242:236] != 7'b0001001 &&
	   soc_soc_sb_commitlog[242:236] != 7'b0010001 &&
	   soc_soc_sb_commitlog[242:236] != 7'b0110001 ||
	   soc_soc_sb_commitlog[225:211] != 15'b000000001110011) &&
	  !soc_soc_sb_commitlog[5])
	$fwrite(dump,
		" f%0d",
		soc_soc_sb_commitlog[10:6],
		" 0x%16h",
		soc_soc_sb_commitlog[74:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file && soc_soc_sb_commitlog[309] &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000006F &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000A001 &&
	  TASK_testplusargs___d399 &&
	  soc_soc_sb_commitlog[210:209] == 2'd2 &&
	  soc_soc_sb_commitlog[70:66] != 5'd0)
	$fwrite(dump,
		" x%0d",
		soc_soc_sb_commitlog[70:66],
		" 0x%16h",
		soc_soc_sb_commitlog[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file &&
	  soc_soc_sb_commitlog__89_BIT_309_90_AND_NOT_so_ETC___d533)
	if (_theResult_____2__h46826 == 12'h301)
	  $fwrite(dump, " ", "c769_misa", " 0x%16h", wdata__h47052);
	else
	  if (_theResult_____2__h46826 == 12'hF11)
	    $fwrite(dump, " ", "c3857_mvendorid", " 0x%16h", wdata__h47052);
	  else
	    if (_theResult_____2__h46826 == 12'h105)
	      $fwrite(dump, " ", "c261_stvec", " 0x%16h", wdata__h47052);
	    else
	      if (_theResult_____2__h46826 == 12'h305)
		$fwrite(dump, " ", "c773_mtvec", " 0x%16h", wdata__h47052);
	      else
		if (_theResult_____2__h46826 == 12'h300)
		  $fwrite(dump,
			  " ",
			  "c768_mstatus",
			  " 0x%16h",
			  wdata__h47052);
		else
		  if (_theResult_____2__h46826 == 12'h100)
		    $fwrite(dump,
			    " ",
			    "c256_sstatus",
			    " 0x%16h",
			    wdata__h47052);
		  else
		    if (_theResult_____2__h46826 == 12'hF12)
		      $fwrite(dump,
			      " ",
			      "c3858_marchid",
			      " 0x%16h",
			      wdata__h47052);
		    else
		      if (_theResult_____2__h46826 == 12'hF13)
			$fwrite(dump,
				" ",
				"c3859_mimpid",
				" 0x%16h",
				wdata__h47052);
		      else
			if (_theResult_____2__h46826 == 12'hF14)
			  $fwrite(dump,
				  " ",
				  "c3860_mhartid",
				  " 0x%16h",
				  wdata__h47052);
			else
			  if (_theResult_____2__h46826 == 12'h344)
			    $fwrite(dump,
				    " ",
				    "c836_mip",
				    " 0x%16h",
				    wdata__h47052);
			  else
			    if (_theResult_____2__h46826 == 12'h144)
			      $fwrite(dump,
				      " ",
				      "c324_sip",
				      " 0x%16h",
				      wdata__h47052);
			    else
			      if (_theResult_____2__h46826 == 12'h304)
				$fwrite(dump,
					" ",
					"c772_mie",
					" 0x%16h",
					wdata__h47052);
			      else
				if (_theResult_____2__h46826 == 12'h104)
				  $fwrite(dump,
					  " ",
					  "c260_sie",
					  " 0x%16h",
					  wdata__h47052);
				else
				  if (_theResult_____2__h46826 == 12'h340)
				    $fwrite(dump,
					    " ",
					    "c832_mscratch",
					    " 0x%16h",
					    wdata__h47052);
				  else
				    if (_theResult_____2__h46826 == 12'h140)
				      $fwrite(dump,
					      " ",
					      "c320_sscratch",
					      " 0x%16h",
					      wdata__h47052);
				    else
				      if (_theResult_____2__h46826 == 12'h141)
					$fwrite(dump,
						" ",
						"c321_sepc",
						" 0x%16h",
						wdata__h47052);
				      else
					if (_theResult_____2__h46826 ==
					    12'h143)
					  $fwrite(dump,
						  " ",
						  "c323_stval",
						  " 0x%16h",
						  wdata__h47052);
					else
					  if (_theResult_____2__h46826 ==
					      12'h142)
					    $fwrite(dump,
						    " ",
						    "c322_scause",
						    " 0x%16h",
						    wdata__h47052);
					  else
					    if (_theResult_____2__h46826 ==
						12'h341)
					      $fwrite(dump,
						      " ",
						      "c833_mepc",
						      " 0x%16h",
						      wdata__h47052);
					    else
					      if (_theResult_____2__h46826 ==
						  12'h343)
						$fwrite(dump,
							" ",
							"c835_mtval",
							" 0x%16h",
							wdata__h47052);
					      else
						if (_theResult_____2__h46826 ==
						    12'h342)
						  $fwrite(dump,
							  " ",
							  "c834_mcause",
							  " 0x%16h",
							  wdata__h47052);
						else
						  if (_theResult_____2__h46826 ==
						      12'hB00)
						    $fwrite(dump,
							    " ",
							    "c2816_mcycle",
							    " 0x%16h",
							    wdata__h47052);
						  else
						    if (_theResult_____2__h46826 ==
							12'hB02)
						      $fwrite(dump,
							      " ",
							      "c2818_minstret",
							      " 0x%16h",
							      wdata__h47052);
						    else
						      if (_theResult_____2__h46826 ==
							  12'h003)
							$fwrite(dump,
								" ",
								"c3_fcsr",
								" 0x%16h",
								wdata__h47052);
						      else
							if (_theResult_____2__h46826 ==
							    12'hC01)
							  $fwrite(dump,
								  " ",
								  "c3073_time",
								  " 0x%16h",
								  wdata__h47052);
							else
							  if (_theResult_____2__h46826 ==
							      12'h303)
							    $fwrite(dump,
								    " ",
								    "c771_mideleg",
								    " 0x%16h",
								    wdata__h47052);
							  else
							    if (_theResult_____2__h46826 ==
								12'h302)
							      $fwrite(dump,
								      " ",
								      "c770_medeleg",
								      " 0x%16h",
								      wdata__h47052);
							    else
							      if (_theResult_____2__h46826 ==
								  12'h3A0)
								$fwrite(dump,
									" ",
									"c928_pmpcfg0",
									" 0x%16h",
									wdata__h47052);
							      else
								if (_theResult_____2__h46826 ==
								    12'h3A2)
								  $fwrite(dump,
									  " ",
									  "c930_pmpcfg2",
									  " 0x%16h",
									  wdata__h47052);
								else
								  if (_theResult_____2__h46826 ==
								      12'h3B0)
								    $fwrite(dump,
									    " ",
									    "c944_pmpaddr0",
									    " 0x%16h",
									    wdata__h47052);
								  else
								    if (_theResult_____2__h46826 ==
									12'h3B1)
								      $fwrite(dump,
									      " ",
									      "c945_pmpaddr1",
									      " 0x%16h",
									      wdata__h47052);
								    else
								      if (_theResult_____2__h46826 ==
									  12'h3B2)
									$fwrite(dump,
										" ",
										"c946_pmpaddr2",
										" 0x%16h",
										wdata__h47052);
								      else
									if (_theResult_____2__h46826 ==
									    12'h3B3)
									  $fwrite(dump,
										  " ",
										  "c947_pmpaddr3",
										  " 0x%16h",
										  wdata__h47052);
									else
									  if (_theResult_____2__h46826 ==
									      12'h3B4)
									    $fwrite(dump,
										    " ",
										    "c948_pmpaddr4",
										    " 0x%16h",
										    wdata__h47052);
									  else
									    if (_theResult_____2__h46826 ==
										12'h3B5)
									      $fwrite(dump,
										      " ",
										      "c949_pmpaddr5",
										      " 0x%16h",
										      wdata__h47052);
									    else
									      if (_theResult_____2__h46826 ==
										  12'h3B6)
										$fwrite(dump,
											" ",
											"c950_pmpaddr6",
											" 0x%16h",
											wdata__h47052);
									      else
										if (_theResult_____2__h46826 ==
										    12'h3B7)
										  $fwrite(dump,
											  " ",
											  "c951_pmpaddr7",
											  " 0x%16h",
											  wdata__h47052);
										else
										  if (_theResult_____2__h46826 ==
										      12'h3B8)
										    $fwrite(dump,
											    " ",
											    "c952_pmpaddr8",
											    " 0x%16h",
											    wdata__h47052);
										  else
										    if (_theResult_____2__h46826 ==
											12'h3B9)
										      $fwrite(dump,
											      " ",
											      "c953_pmpaddr9",
											      " 0x%16h",
											      wdata__h47052);
										    else
										      if (_theResult_____2__h46826 ==
											  12'h3BA)
											$fwrite(dump,
												" ",
												"c954_pmpaddr10",
												" 0x%16h",
												wdata__h47052);
										      else
											if (_theResult_____2__h46826 ==
											    12'h3BB)
											  $fwrite(dump,
												  " ",
												  "c955_pmpaddr11",
												  " 0x%16h",
												  wdata__h47052);
											else
											  if (_theResult_____2__h46826 ==
											      12'h3BC)
											    $fwrite(dump,
												    " ",
												    "c956_pmpaddr12",
												    " 0x%16h",
												    wdata__h47052);
											  else
											    if (_theResult_____2__h46826 ==
												12'h3BD)
											      $fwrite(dump,
												      " ",
												      "c957_pmpaddr13",
												      " 0x%16h",
												      wdata__h47052);
											    else
											      if (_theResult_____2__h46826 ==
												  12'h3BE)
												$fwrite(dump,
													" ",
													"c958_pmpaddr14",
													" 0x%16h",
													wdata__h47052);
											      else
												if (_theResult_____2__h46826 ==
												    12'h3BF)
												  $fwrite(dump,
													  " ",
													  "c959_pmpaddr15",
													  " 0x%16h",
													  wdata__h47052);
												else
												  if (_theResult_____2__h46826 ==
												      12'h306)
												    $fwrite(dump,
													    " ",
													    "c774_mcounteren",
													    " 0x%16h",
													    wdata__h47052);
												  else
												    if (_theResult_____2__h46826 ==
													12'h106)
												      $fwrite(dump,
													      " ",
													      "c262_scounteren",
													      " 0x%16h",
													      wdata__h47052);
												    else
												      if (_theResult_____2__h46826 ==
													  12'h30A)
													$fwrite(dump,
														" ",
														"c778_menvcfg",
														" 0x%16h",
														wdata__h47052);
												      else
													if (_theResult_____2__h46826 ==
													    12'h10A)
													  $fwrite(dump,
														  " ",
														  "c266_senvcfg",
														  " 0x%16h",
														  wdata__h47052);
													else
													  if (_theResult_____2__h46826 ==
													      12'hB03)
													    $fwrite(dump,
														    " ",
														    "c2819_mhpmcounter3",
														    " 0x%16h",
														    wdata__h47052);
													  else
													    if (_theResult_____2__h46826 ==
														12'hB04)
													      $fwrite(dump,
														      " ",
														      "c2820_mhpmcounter4",
														      " 0x%16h",
														      wdata__h47052);
													    else
													      if (_theResult_____2__h46826 ==
														  12'hB05)
														$fwrite(dump,
															" ",
															"c2821_mhpmcounter5",
															" 0x%16h",
															wdata__h47052);
													      else
														if (_theResult_____2__h46826 ==
														    12'hB06)
														  $fwrite(dump,
															  " ",
															  "c2822_mhpmcounter6",
															  " 0x%16h",
															  wdata__h47052);
														else
														  if (_theResult_____2__h46826 ==
														      12'hC03)
														    $fwrite(dump,
															    " ",
															    "c3075_hpmcounter3",
															    " 0x%16h",
															    wdata__h47052);
														  else
														    if (_theResult_____2__h46826 ==
															12'hC04)
														      $fwrite(dump,
															      " ",
															      "c3076_hpmcounter4",
															      " 0x%16h",
															      wdata__h47052);
														    else
														      if (_theResult_____2__h46826 ==
															  12'hC05)
															$fwrite(dump,
																" ",
																"c3077_hpmcounter5",
																" 0x%16h",
																wdata__h47052);
														      else
															if (_theResult_____2__h46826 ==
															    12'hC06)
															  $fwrite(dump,
																  " ",
																  "c3078_hpmcounter6",
																  " 0x%16h",
																  wdata__h47052);
															else
															  if (_theResult_____2__h46826 ==
															      12'h323)
															    $fwrite(dump,
																    " ",
																    "c803_mhpmevent3",
																    " 0x%16h",
																    wdata__h47052);
															  else
															    if (_theResult_____2__h46826 ==
																12'h324)
															      $fwrite(dump,
																      " ",
																      "c804_mhpmevent4",
																      " 0x%16h",
																      wdata__h47052);
															    else
															      if (_theResult_____2__h46826 ==
																  12'h325)
																$fwrite(dump,
																	" ",
																	"c805_mhpmevent5",
																	" 0x%16h",
																	wdata__h47052);
															      else
																if (_theResult_____2__h46826 ==
																    12'h326)
																  $fwrite(dump,
																	  " ",
																	  "c806_mhpmevent6",
																	  " 0x%16h",
																	  wdata__h47052);
																else
																  if (_theResult_____2__h46826 ==
																      12'h180)
																    $fwrite(dump,
																	    " ",
																	    "c384_satp",
																	    " 0x%16h",
																	    wdata__h47052);
																  else
																    if (_theResult_____2__h46826 ==
																	12'h320)
																      $fwrite(dump,
																	      " ",
																	      "c800_mcountinhibit",
																	      " 0x%16h",
																	      wdata__h47052);
																    else
																      if (_theResult_____2__h46826 ==
																	  12'h327)
																	$fwrite(dump,
																		" ",
																		"c807_mhpmevent7",
																		" 0x%16h",
																		wdata__h47052);
																      else
																	if (_theResult_____2__h46826 ==
																	    12'hB07)
																	  $fwrite(dump,
																		  " ",
																		  "c2823_mhpmcounter7",
																		  " 0x%16h",
																		  wdata__h47052);
																	else
																	  if (_theResult_____2__h46826 ==
																	      12'h328)
																	    $fwrite(dump,
																		    " ",
																		    "c808_mhpmevent8",
																		    " 0x%16h",
																		    wdata__h47052);
																	  else
																	    if (_theResult_____2__h46826 ==
																		12'hB08)
																	      $fwrite(dump,
																		      " ",
																		      "c2824_mhpmcounter8",
																		      " 0x%16h",
																		      wdata__h47052);
																	    else
																	      if (_theResult_____2__h46826 ==
																		  12'h329)
																		$fwrite(dump,
																			" ",
																			"c809_mhpmevent9",
																			" 0x%16h",
																			wdata__h47052);
																	      else
																		if (_theResult_____2__h46826 ==
																		    12'hB09)
																		  $fwrite(dump,
																			  " ",
																			  "c2825_mhpmcounter9",
																			  " 0x%16h",
																			  wdata__h47052);
																		else
																		  if (_theResult_____2__h46826 ==
																		      12'h32A)
																		    $fwrite(dump,
																			    " ",
																			    "c810_mhpmevent10",
																			    " 0x%16h",
																			    wdata__h47052);
																		  else
																		    if (_theResult_____2__h46826 ==
																			12'hB0A)
																		      $fwrite(dump,
																			      " ",
																			      "c2826_mhpmcounter10",
																			      " 0x%16h",
																			      wdata__h47052);
																		    else
																		      if (_theResult_____2__h46826 ==
																			  12'h32B)
																			$fwrite(dump,
																				" ",
																				"c811_mhpmevent11",
																				" 0x%16h",
																				wdata__h47052);
																		      else
																			if (_theResult_____2__h46826 ==
																			    12'hB0B)
																			  $fwrite(dump,
																				  " ",
																				  "c2827_mhpmcounter11",
																				  " 0x%16h",
																				  wdata__h47052);
																			else
																			  if (_theResult_____2__h46826 ==
																			      12'h32C)
																			    $fwrite(dump,
																				    " ",
																				    "c812_mhpmevent12",
																				    " 0x%16h",
																				    wdata__h47052);
																			  else
																			    if (_theResult_____2__h46826 ==
																				12'hB0C)
																			      $fwrite(dump,
																				      " ",
																				      "c2828_mhpmcounter12",
																				      " 0x%16h",
																				      wdata__h47052);
																			    else
																			      if (_theResult_____2__h46826 ==
																				  12'h32D)
																				$fwrite(dump,
																					" ",
																					"c813_mhpmevent13",
																					" 0x%16h",
																					wdata__h47052);
																			      else
																				if (_theResult_____2__h46826 ==
																				    12'hB0D)
																				  $fwrite(dump,
																					  " ",
																					  "c2829_mhpmcounter13",
																					  " 0x%16h",
																					  wdata__h47052);
																				else
																				  if (_theResult_____2__h46826 ==
																				      12'h32E)
																				    $fwrite(dump,
																					    " ",
																					    "c814_mhpmevent14",
																					    " 0x%16h",
																					    wdata__h47052);
																				  else
																				    if (_theResult_____2__h46826 ==
																					12'hB0E)
																				      $fwrite(dump,
																					      " ",
																					      "c2830_mhpmcounter14",
																					      " 0x%16h",
																					      wdata__h47052);
																				    else
																				      if (_theResult_____2__h46826 ==
																					  12'h32F)
																					$fwrite(dump,
																						" ",
																						"c815_mhpmevent15",
																						" 0x%16h",
																						wdata__h47052);
																				      else
																					if (_theResult_____2__h46826 ==
																					    12'hB0F)
																					  $fwrite(dump,
																						  " ",
																						  "c2831_mhpmcounter15",
																						  " 0x%16h",
																						  wdata__h47052);
																					else
																					  if (_theResult_____2__h46826 ==
																					      12'h330)
																					    $fwrite(dump,
																						    " ",
																						    "c816_mhpmevent16",
																						    " 0x%16h",
																						    wdata__h47052);
																					  else
																					    if (_theResult_____2__h46826 ==
																						12'hB10)
																					      $fwrite(dump,
																						      " ",
																						      "c2832_mhpmcounter16",
																						      " 0x%16h",
																						      wdata__h47052);
																					    else
																					      if (_theResult_____2__h46826 ==
																						  12'h331)
																						$fwrite(dump,
																							" ",
																							"c817_mhpmevent17",
																							" 0x%16h",
																							wdata__h47052);
																					      else
																						if (_theResult_____2__h46826 ==
																						    12'hB11)
																						  $fwrite(dump,
																							  " ",
																							  "c2833_mhpmcounter17",
																							  " 0x%16h",
																							  wdata__h47052);
																						else
																						  if (_theResult_____2__h46826 ==
																						      12'h332)
																						    $fwrite(dump,
																							    " ",
																							    "c818_mhpmevent18",
																							    " 0x%16h",
																							    wdata__h47052);
																						  else
																						    if (_theResult_____2__h46826 ==
																							12'hB12)
																						      $fwrite(dump,
																							      " ",
																							      "c2834_mhpmcounter18",
																							      " 0x%16h",
																							      wdata__h47052);
																						    else
																						      if (_theResult_____2__h46826 ==
																							  12'h333)
																							$fwrite(dump,
																								" ",
																								"c819_mhpmevent19",
																								" 0x%16h",
																								wdata__h47052);
																						      else
																							if (_theResult_____2__h46826 ==
																							    12'hB13)
																							  $fwrite(dump,
																								  " ",
																								  "c2835_mhpmcounter19",
																								  " 0x%16h",
																								  wdata__h47052);
																							else
																							  if (_theResult_____2__h46826 ==
																							      12'h334)
																							    $fwrite(dump,
																								    " ",
																								    "c820_mhpmevent20",
																								    " 0x%16h",
																								    wdata__h47052);
																							  else
																							    if (_theResult_____2__h46826 ==
																								12'hB14)
																							      $fwrite(dump,
																								      " ",
																								      "c2836_mhpmcounter20",
																								      " 0x%16h",
																								      wdata__h47052);
																							    else
																							      if (_theResult_____2__h46826 ==
																								  12'h335)
																								$fwrite(dump,
																									" ",
																									"c821_mhpmevent21",
																									" 0x%16h",
																									wdata__h47052);
																							      else
																								if (_theResult_____2__h46826 ==
																								    12'hB15)
																								  $fwrite(dump,
																									  " ",
																									  "c2837_mhpmcounter21",
																									  " 0x%16h",
																									  wdata__h47052);
																								else
																								  if (_theResult_____2__h46826 ==
																								      12'h336)
																								    $fwrite(dump,
																									    " ",
																									    "c822_mhpmevent22",
																									    " 0x%16h",
																									    wdata__h47052);
																								  else
																								    if (_theResult_____2__h46826 ==
																									12'hB16)
																								      $fwrite(dump,
																									      " ",
																									      "c2838_mhpmcounter22",
																									      " 0x%16h",
																									      wdata__h47052);
																								    else
																								      if (_theResult_____2__h46826 ==
																									  12'h337)
																									$fwrite(dump,
																										" ",
																										"c823_mhpmevent23",
																										" 0x%16h",
																										wdata__h47052);
																								      else
																									if (_theResult_____2__h46826 ==
																									    12'hB17)
																									  $fwrite(dump,
																										  " ",
																										  "c2839_mhpmcounter23",
																										  " 0x%16h",
																										  wdata__h47052);
																									else
																									  if (_theResult_____2__h46826 ==
																									      12'h338)
																									    $fwrite(dump,
																										    " ",
																										    "c824_mhpmevent24",
																										    " 0x%16h",
																										    wdata__h47052);
																									  else
																									    if (_theResult_____2__h46826 ==
																										12'hB18)
																									      $fwrite(dump,
																										      " ",
																										      "c2840_mhpmcounter24",
																										      " 0x%16h",
																										      wdata__h47052);
																									    else
																									      if (_theResult_____2__h46826 ==
																										  12'h339)
																										$fwrite(dump,
																											" ",
																											"c825_mhpmevent25",
																											" 0x%16h",
																											wdata__h47052);
																									      else
																										if (_theResult_____2__h46826 ==
																										    12'hB19)
																										  $fwrite(dump,
																											  " ",
																											  "c2841_mhpmcounter25",
																											  " 0x%16h",
																											  wdata__h47052);
																										else
																										  if (_theResult_____2__h46826 ==
																										      12'h33A)
																										    $fwrite(dump,
																											    " ",
																											    "c826_mhpmevent26",
																											    " 0x%16h",
																											    wdata__h47052);
																										  else
																										    if (_theResult_____2__h46826 ==
																											12'hB1A)
																										      $fwrite(dump,
																											      " ",
																											      "c2842_mhpmcounter26",
																											      " 0x%16h",
																											      wdata__h47052);
																										    else
																										      if (_theResult_____2__h46826 ==
																											  12'h33B)
																											$fwrite(dump,
																												" ",
																												"c827_mhpmevent27",
																												" 0x%16h",
																												wdata__h47052);
																										      else
																											if (_theResult_____2__h46826 ==
																											    12'hB1B)
																											  $fwrite(dump,
																												  " ",
																												  "c2843_mhpmcounter27",
																												  " 0x%16h",
																												  wdata__h47052);
																											else
																											  if (_theResult_____2__h46826 ==
																											      12'h33C)
																											    $fwrite(dump,
																												    " ",
																												    "c828_mhpmevent28",
																												    " 0x%16h",
																												    wdata__h47052);
																											  else
																											    if (_theResult_____2__h46826 ==
																												12'hB1C)
																											      $fwrite(dump,
																												      " ",
																												      "c2844_mhpmcounter28",
																												      " 0x%16h",
																												      wdata__h47052);
																											    else
																											      if (_theResult_____2__h46826 ==
																												  12'h33D)
																												$fwrite(dump,
																													" ",
																													"c829_mhpmevent29",
																													" 0x%16h",
																													wdata__h47052);
																											      else
																												if (_theResult_____2__h46826 ==
																												    12'hB1D)
																												  $fwrite(dump,
																													  " ",
																													  "c2845_mhpmcounter29",
																													  " 0x%16h",
																													  wdata__h47052);
																												else
																												  if (_theResult_____2__h46826 ==
																												      12'h33E)
																												    $fwrite(dump,
																													    " ",
																													    "c830_mhpmevent30",
																													    " 0x%16h",
																													    wdata__h47052);
																												  else
																												    if (_theResult_____2__h46826 ==
																													12'hB1E)
																												      $fwrite(dump,
																													      " ",
																													      "c2846_mhpmcounter30",
																													      " 0x%16h",
																													      wdata__h47052);
																												    else
																												      if (_theResult_____2__h46826 ==
																													  12'h33F)
																													$fwrite(dump,
																														" ",
																														"c831_mhpmevent31",
																														" 0x%16h",
																														wdata__h47052);
																												      else
																													if (_theResult_____2__h46826 ==
																													    12'hB1F)
																													  $fwrite(dump,
																														  " ",
																														  "c2847_mhpmcounter31",
																														  " 0x%16h",
																														  wdata__h47052);
																													else
																													  if (_theResult_____2__h46826 ==
																													      12'h001)
																													    $fwrite(dump,
																														    " ",
																														    "c1_fflags",
																														    " 0x%16h",
																														    wdata__h47052);
																													  else
																													    if (_theResult_____2__h46826 ==
																														12'h002)
																													      $fwrite(dump,
																														      " ",
																														      "c2_frm",
																														      " 0x%16h",
																														      wdata__h47052);
																													    else
																													      if (_theResult_____2__h46826 ==
																														  12'hC00)
																														$fwrite(dump,
																															" ",
																															"c3072_cycle",
																															" 0x%16h",
																															wdata__h47052);
																													      else
																														if (_theResult_____2__h46826 ==
																														    12'hC02)
																														  $fwrite(dump,
																															  " ",
																															  "c3074_instret",
																															  " 0x%16h",
																															  wdata__h47052);
																														else
																														  if (_theResult_____2__h46826 ==
																														      12'hC07)
																														    $fwrite(dump,
																															    " ",
																															    "c3079_hpmcounter7",
																															    " 0x%16h",
																															    wdata__h47052);
																														  else
																														    if (_theResult_____2__h46826 ==
																															12'hC08)
																														      $fwrite(dump,
																															      " ",
																															      "c3080_hpmcounter8",
																															      " 0x%16h",
																															      wdata__h47052);
																														    else
																														      if (_theResult_____2__h46826 ==
																															  12'hC09)
																															$fwrite(dump,
																																" ",
																																"c3081_hpmcounter9",
																																" 0x%16h",
																																wdata__h47052);
																														      else
																															if (_theResult_____2__h46826 ==
																															    12'hC0A)
																															  $fwrite(dump,
																																  " ",
																																  "c3082_hpmcounter10",
																																  " 0x%16h",
																																  wdata__h47052);
																															else
																															  if (_theResult_____2__h46826 ==
																															      12'hC0B)
																															    $fwrite(dump,
																																    " ",
																																    "c3083_hpmcounter11",
																																    " 0x%16h",
																																    wdata__h47052);
																															  else
																															    if (_theResult_____2__h46826 ==
																																12'hC0C)
																															      $fwrite(dump,
																																      " ",
																																      "c3084_hpmcounter12",
																																      " 0x%16h",
																																      wdata__h47052);
																															    else
																															      if (_theResult_____2__h46826 ==
																																  12'hC0D)
																																$fwrite(dump,
																																	" ",
																																	"c3085_hpmcounter13",
																																	" 0x%16h",
																																	wdata__h47052);
																															      else
																																if (_theResult_____2__h46826 ==
																																    12'hC0E)
																																  $fwrite(dump,
																																	  " ",
																																	  "c3086_hpmcounter14",
																																	  " 0x%16h",
																																	  wdata__h47052);
																																else
																																  if (_theResult_____2__h46826 ==
																																      12'hC0F)
																																    $fwrite(dump,
																																	    " ",
																																	    "c3087_hpmcounter15",
																																	    " 0x%16h",
																																	    wdata__h47052);
																																  else
																																    if (_theResult_____2__h46826 ==
																																	12'hC10)
																																      $fwrite(dump,
																																	      " ",
																																	      "c3088_hpmcounter16",
																																	      " 0x%16h",
																																	      wdata__h47052);
																																    else
																																      if (_theResult_____2__h46826 ==
																																	  12'hC11)
																																	$fwrite(dump,
																																		" ",
																																		"c3089_hpmcounter17",
																																		" 0x%16h",
																																		wdata__h47052);
																																      else
																																	if (_theResult_____2__h46826 ==
																																	    12'hC12)
																																	  $fwrite(dump,
																																		  " ",
																																		  "c3090_hpmcounter18",
																																		  " 0x%16h",
																																		  wdata__h47052);
																																	else
																																	  if (_theResult_____2__h46826 ==
																																	      12'hC13)
																																	    $fwrite(dump,
																																		    " ",
																																		    "c3091_hpmcounter19",
																																		    " 0x%16h",
																																		    wdata__h47052);
																																	  else
																																	    if (_theResult_____2__h46826 ==
																																		12'hC14)
																																	      $fwrite(dump,
																																		      " ",
																																		      "c3092_hpmcounter20",
																																		      " 0x%16h",
																																		      wdata__h47052);
																																	    else
																																	      if (_theResult_____2__h46826 ==
																																		  12'hC15)
																																		$fwrite(dump,
																																			" ",
																																			"c3093_hpmcounter21",
																																			" 0x%16h",
																																			wdata__h47052);
																																	      else
																																		if (_theResult_____2__h46826 ==
																																		    12'hC16)
																																		  $fwrite(dump,
																																			  " ",
																																			  "c3094_hpmcounter22",
																																			  " 0x%16h",
																																			  wdata__h47052);
																																		else
																																		  if (_theResult_____2__h46826 ==
																																		      12'hC17)
																																		    $fwrite(dump,
																																			    " ",
																																			    "c3095_hpmcounter23",
																																			    " 0x%16h",
																																			    wdata__h47052);
																																		  else
																																		    if (_theResult_____2__h46826 ==
																																			12'hC18)
																																		      $fwrite(dump,
																																			      " ",
																																			      "c3096_hpmcounter24",
																																			      " 0x%16h",
																																			      wdata__h47052);
																																		    else
																																		      if (_theResult_____2__h46826 ==
																																			  12'hC19)
																																			$fwrite(dump,
																																				" ",
																																				"c3097_hpmcounter25",
																																				" 0x%16h",
																																				wdata__h47052);
																																		      else
																																			if (_theResult_____2__h46826 ==
																																			    12'hC1A)
																																			  $fwrite(dump,
																																				  " ",
																																				  "c3098_hpmcounter26",
																																				  " 0x%16h",
																																				  wdata__h47052);
																																			else
																																			  if (_theResult_____2__h46826 ==
																																			      12'hC1B)
																																			    $fwrite(dump,
																																				    " ",
																																				    "c3099_hpmcounter27",
																																				    " 0x%16h",
																																				    wdata__h47052);
																																			  else
																																			    if (_theResult_____2__h46826 ==
																																				12'hC1C)
																																			      $fwrite(dump,
																																				      " ",
																																				      "c3100_hpmcounter28",
																																				      " 0x%16h",
																																				      wdata__h47052);
																																			    else
																																			      if (_theResult_____2__h46826 ==
																																				  12'hC1D)
																																				$fwrite(dump,
																																					" ",
																																					"c3101_hpmcounter29",
																																					" 0x%16h",
																																					wdata__h47052);
																																			      else
																																				if (_theResult_____2__h46826 ==
																																				    12'hC1E)
																																				  $fwrite(dump,
																																					  " ",
																																					  "c3102_hpmcounter30",
																																					  " 0x%16h",
																																					  wdata__h47052);
																																				else
																																				  if (_theResult_____2__h46826 ==
																																				      12'hC1F)
																																				    $fwrite(dump,
																																					    " ",
																																					    "c3103_hpmcounter31",
																																					    " 0x%16h",
																																					    wdata__h47052);
																																				  else
																																				    if (_theResult_____2__h46826 ==
																																					12'h800)
																																				      $fwrite(dump,
																																					      " ",
																																					      "c2048_customcontrol",
																																					      " 0x%16h",
																																					      wdata__h47052);
																																				    else
																																				      if (_theResult_____2__h46826 ==
																																					  12'h7B0)
																																					$fwrite(dump,
																																						" ",
																																						"c1968_dcsr",
																																						" 0x%16h",
																																						wdata__h47052);
																																				      else
																																					if (_theResult_____2__h46826 ==
																																					    12'h7B1)
																																					  $fwrite(dump,
																																						  " ",
																																						  "c1969_dpc",
																																						  " 0x%16h",
																																						  wdata__h47052);
																																					else
																																					  if (_theResult_____2__h46826 ==
																																					      12'h7B2)
																																					    $fwrite(dump,
																																						    " ",
																																						    "c1970_dscratch0",
																																						    " 0x%16h",
																																						    wdata__h47052);
																																					  else
																																					    $fwrite(dump,
																																						    " ",
																																						    "c1971_dscratch1",
																																						    " 0x%16h",
																																						    wdata__h47052);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file && soc_soc_sb_commitlog[309] &&
	  NOT_soc_soc_sb_commitlog__89_BITS_242_TO_211_9_ETC___d949)
	if (_theResult_____2__h46826 == 12'h301)
	  $fwrite(dump, " ", "c769_misa", " 0x%16h", wdata__h47052);
	else
	  if (_theResult_____2__h46826 == 12'hF11)
	    $fwrite(dump, " ", "c3857_mvendorid", " 0x%16h", wdata__h47052);
	  else
	    if (_theResult_____2__h46826 == 12'h105)
	      $fwrite(dump, " ", "c261_stvec", " 0x%16h", wdata__h47052);
	    else
	      if (_theResult_____2__h46826 == 12'h305)
		$fwrite(dump, " ", "c773_mtvec", " 0x%16h", wdata__h47052);
	      else
		if (_theResult_____2__h46826 == 12'h300)
		  $fwrite(dump,
			  " ",
			  "c768_mstatus",
			  " 0x%16h",
			  wdata__h47052);
		else
		  if (_theResult_____2__h46826 == 12'h100)
		    $fwrite(dump,
			    " ",
			    "c256_sstatus",
			    " 0x%16h",
			    wdata__h47052);
		  else
		    if (_theResult_____2__h46826 == 12'hF12)
		      $fwrite(dump,
			      " ",
			      "c3858_marchid",
			      " 0x%16h",
			      wdata__h47052);
		    else
		      if (_theResult_____2__h46826 == 12'hF13)
			$fwrite(dump,
				" ",
				"c3859_mimpid",
				" 0x%16h",
				wdata__h47052);
		      else
			if (_theResult_____2__h46826 == 12'hF14)
			  $fwrite(dump,
				  " ",
				  "c3860_mhartid",
				  " 0x%16h",
				  wdata__h47052);
			else
			  if (_theResult_____2__h46826 == 12'h344)
			    $fwrite(dump,
				    " ",
				    "c836_mip",
				    " 0x%16h",
				    wdata__h47052);
			  else
			    if (_theResult_____2__h46826 == 12'h144)
			      $fwrite(dump,
				      " ",
				      "c324_sip",
				      " 0x%16h",
				      wdata__h47052);
			    else
			      if (_theResult_____2__h46826 == 12'h304)
				$fwrite(dump,
					" ",
					"c772_mie",
					" 0x%16h",
					wdata__h47052);
			      else
				if (_theResult_____2__h46826 == 12'h104)
				  $fwrite(dump,
					  " ",
					  "c260_sie",
					  " 0x%16h",
					  wdata__h47052);
				else
				  if (_theResult_____2__h46826 == 12'h340)
				    $fwrite(dump,
					    " ",
					    "c832_mscratch",
					    " 0x%16h",
					    wdata__h47052);
				  else
				    if (_theResult_____2__h46826 == 12'h140)
				      $fwrite(dump,
					      " ",
					      "c320_sscratch",
					      " 0x%16h",
					      wdata__h47052);
				    else
				      if (_theResult_____2__h46826 == 12'h141)
					$fwrite(dump,
						" ",
						"c321_sepc",
						" 0x%16h",
						wdata__h47052);
				      else
					if (_theResult_____2__h46826 ==
					    12'h143)
					  $fwrite(dump,
						  " ",
						  "c323_stval",
						  " 0x%16h",
						  wdata__h47052);
					else
					  if (_theResult_____2__h46826 ==
					      12'h142)
					    $fwrite(dump,
						    " ",
						    "c322_scause",
						    " 0x%16h",
						    wdata__h47052);
					  else
					    if (_theResult_____2__h46826 ==
						12'h341)
					      $fwrite(dump,
						      " ",
						      "c833_mepc",
						      " 0x%16h",
						      wdata__h47052);
					    else
					      if (_theResult_____2__h46826 ==
						  12'h343)
						$fwrite(dump,
							" ",
							"c835_mtval",
							" 0x%16h",
							wdata__h47052);
					      else
						if (_theResult_____2__h46826 ==
						    12'h342)
						  $fwrite(dump,
							  " ",
							  "c834_mcause",
							  " 0x%16h",
							  wdata__h47052);
						else
						  if (_theResult_____2__h46826 ==
						      12'hB00)
						    $fwrite(dump,
							    " ",
							    "c2816_mcycle",
							    " 0x%16h",
							    wdata__h47052);
						  else
						    if (_theResult_____2__h46826 ==
							12'hB02)
						      $fwrite(dump,
							      " ",
							      "c2818_minstret",
							      " 0x%16h",
							      wdata__h47052);
						    else
						      if (_theResult_____2__h46826 ==
							  12'h003)
							$fwrite(dump,
								" ",
								"c3_fcsr",
								" 0x%16h",
								wdata__h47052);
						      else
							if (_theResult_____2__h46826 ==
							    12'hC01)
							  $fwrite(dump,
								  " ",
								  "c3073_time",
								  " 0x%16h",
								  wdata__h47052);
							else
							  if (_theResult_____2__h46826 ==
							      12'h303)
							    $fwrite(dump,
								    " ",
								    "c771_mideleg",
								    " 0x%16h",
								    wdata__h47052);
							  else
							    if (_theResult_____2__h46826 ==
								12'h302)
							      $fwrite(dump,
								      " ",
								      "c770_medeleg",
								      " 0x%16h",
								      wdata__h47052);
							    else
							      if (_theResult_____2__h46826 ==
								  12'h3A0)
								$fwrite(dump,
									" ",
									"c928_pmpcfg0",
									" 0x%16h",
									wdata__h47052);
							      else
								if (_theResult_____2__h46826 ==
								    12'h3A2)
								  $fwrite(dump,
									  " ",
									  "c930_pmpcfg2",
									  " 0x%16h",
									  wdata__h47052);
								else
								  if (_theResult_____2__h46826 ==
								      12'h3B0)
								    $fwrite(dump,
									    " ",
									    "c944_pmpaddr0",
									    " 0x%16h",
									    wdata__h47052);
								  else
								    if (_theResult_____2__h46826 ==
									12'h3B1)
								      $fwrite(dump,
									      " ",
									      "c945_pmpaddr1",
									      " 0x%16h",
									      wdata__h47052);
								    else
								      if (_theResult_____2__h46826 ==
									  12'h3B2)
									$fwrite(dump,
										" ",
										"c946_pmpaddr2",
										" 0x%16h",
										wdata__h47052);
								      else
									if (_theResult_____2__h46826 ==
									    12'h3B3)
									  $fwrite(dump,
										  " ",
										  "c947_pmpaddr3",
										  " 0x%16h",
										  wdata__h47052);
									else
									  if (_theResult_____2__h46826 ==
									      12'h3B4)
									    $fwrite(dump,
										    " ",
										    "c948_pmpaddr4",
										    " 0x%16h",
										    wdata__h47052);
									  else
									    if (_theResult_____2__h46826 ==
										12'h3B5)
									      $fwrite(dump,
										      " ",
										      "c949_pmpaddr5",
										      " 0x%16h",
										      wdata__h47052);
									    else
									      if (_theResult_____2__h46826 ==
										  12'h3B6)
										$fwrite(dump,
											" ",
											"c950_pmpaddr6",
											" 0x%16h",
											wdata__h47052);
									      else
										if (_theResult_____2__h46826 ==
										    12'h3B7)
										  $fwrite(dump,
											  " ",
											  "c951_pmpaddr7",
											  " 0x%16h",
											  wdata__h47052);
										else
										  if (_theResult_____2__h46826 ==
										      12'h3B8)
										    $fwrite(dump,
											    " ",
											    "c952_pmpaddr8",
											    " 0x%16h",
											    wdata__h47052);
										  else
										    if (_theResult_____2__h46826 ==
											12'h3B9)
										      $fwrite(dump,
											      " ",
											      "c953_pmpaddr9",
											      " 0x%16h",
											      wdata__h47052);
										    else
										      if (_theResult_____2__h46826 ==
											  12'h3BA)
											$fwrite(dump,
												" ",
												"c954_pmpaddr10",
												" 0x%16h",
												wdata__h47052);
										      else
											if (_theResult_____2__h46826 ==
											    12'h3BB)
											  $fwrite(dump,
												  " ",
												  "c955_pmpaddr11",
												  " 0x%16h",
												  wdata__h47052);
											else
											  if (_theResult_____2__h46826 ==
											      12'h3BC)
											    $fwrite(dump,
												    " ",
												    "c956_pmpaddr12",
												    " 0x%16h",
												    wdata__h47052);
											  else
											    if (_theResult_____2__h46826 ==
												12'h3BD)
											      $fwrite(dump,
												      " ",
												      "c957_pmpaddr13",
												      " 0x%16h",
												      wdata__h47052);
											    else
											      if (_theResult_____2__h46826 ==
												  12'h3BE)
												$fwrite(dump,
													" ",
													"c958_pmpaddr14",
													" 0x%16h",
													wdata__h47052);
											      else
												if (_theResult_____2__h46826 ==
												    12'h3BF)
												  $fwrite(dump,
													  " ",
													  "c959_pmpaddr15",
													  " 0x%16h",
													  wdata__h47052);
												else
												  if (_theResult_____2__h46826 ==
												      12'h306)
												    $fwrite(dump,
													    " ",
													    "c774_mcounteren",
													    " 0x%16h",
													    wdata__h47052);
												  else
												    if (_theResult_____2__h46826 ==
													12'h106)
												      $fwrite(dump,
													      " ",
													      "c262_scounteren",
													      " 0x%16h",
													      wdata__h47052);
												    else
												      if (_theResult_____2__h46826 ==
													  12'h30A)
													$fwrite(dump,
														" ",
														"c778_menvcfg",
														" 0x%16h",
														wdata__h47052);
												      else
													if (_theResult_____2__h46826 ==
													    12'h10A)
													  $fwrite(dump,
														  " ",
														  "c266_senvcfg",
														  " 0x%16h",
														  wdata__h47052);
													else
													  if (_theResult_____2__h46826 ==
													      12'hB03)
													    $fwrite(dump,
														    " ",
														    "c2819_mhpmcounter3",
														    " 0x%16h",
														    wdata__h47052);
													  else
													    if (_theResult_____2__h46826 ==
														12'hB04)
													      $fwrite(dump,
														      " ",
														      "c2820_mhpmcounter4",
														      " 0x%16h",
														      wdata__h47052);
													    else
													      if (_theResult_____2__h46826 ==
														  12'hB05)
														$fwrite(dump,
															" ",
															"c2821_mhpmcounter5",
															" 0x%16h",
															wdata__h47052);
													      else
														if (_theResult_____2__h46826 ==
														    12'hB06)
														  $fwrite(dump,
															  " ",
															  "c2822_mhpmcounter6",
															  " 0x%16h",
															  wdata__h47052);
														else
														  if (_theResult_____2__h46826 ==
														      12'hC03)
														    $fwrite(dump,
															    " ",
															    "c3075_hpmcounter3",
															    " 0x%16h",
															    wdata__h47052);
														  else
														    if (_theResult_____2__h46826 ==
															12'hC04)
														      $fwrite(dump,
															      " ",
															      "c3076_hpmcounter4",
															      " 0x%16h",
															      wdata__h47052);
														    else
														      if (_theResult_____2__h46826 ==
															  12'hC05)
															$fwrite(dump,
																" ",
																"c3077_hpmcounter5",
																" 0x%16h",
																wdata__h47052);
														      else
															if (_theResult_____2__h46826 ==
															    12'hC06)
															  $fwrite(dump,
																  " ",
																  "c3078_hpmcounter6",
																  " 0x%16h",
																  wdata__h47052);
															else
															  if (_theResult_____2__h46826 ==
															      12'h323)
															    $fwrite(dump,
																    " ",
																    "c803_mhpmevent3",
																    " 0x%16h",
																    wdata__h47052);
															  else
															    if (_theResult_____2__h46826 ==
																12'h324)
															      $fwrite(dump,
																      " ",
																      "c804_mhpmevent4",
																      " 0x%16h",
																      wdata__h47052);
															    else
															      if (_theResult_____2__h46826 ==
																  12'h325)
																$fwrite(dump,
																	" ",
																	"c805_mhpmevent5",
																	" 0x%16h",
																	wdata__h47052);
															      else
																if (_theResult_____2__h46826 ==
																    12'h326)
																  $fwrite(dump,
																	  " ",
																	  "c806_mhpmevent6",
																	  " 0x%16h",
																	  wdata__h47052);
																else
																  if (_theResult_____2__h46826 ==
																      12'h180)
																    $fwrite(dump,
																	    " ",
																	    "c384_satp",
																	    " 0x%16h",
																	    wdata__h47052);
																  else
																    if (_theResult_____2__h46826 ==
																	12'h320)
																      $fwrite(dump,
																	      " ",
																	      "c800_mcountinhibit",
																	      " 0x%16h",
																	      wdata__h47052);
																    else
																      if (_theResult_____2__h46826 ==
																	  12'h327)
																	$fwrite(dump,
																		" ",
																		"c807_mhpmevent7",
																		" 0x%16h",
																		wdata__h47052);
																      else
																	if (_theResult_____2__h46826 ==
																	    12'hB07)
																	  $fwrite(dump,
																		  " ",
																		  "c2823_mhpmcounter7",
																		  " 0x%16h",
																		  wdata__h47052);
																	else
																	  if (_theResult_____2__h46826 ==
																	      12'h328)
																	    $fwrite(dump,
																		    " ",
																		    "c808_mhpmevent8",
																		    " 0x%16h",
																		    wdata__h47052);
																	  else
																	    if (_theResult_____2__h46826 ==
																		12'hB08)
																	      $fwrite(dump,
																		      " ",
																		      "c2824_mhpmcounter8",
																		      " 0x%16h",
																		      wdata__h47052);
																	    else
																	      if (_theResult_____2__h46826 ==
																		  12'h329)
																		$fwrite(dump,
																			" ",
																			"c809_mhpmevent9",
																			" 0x%16h",
																			wdata__h47052);
																	      else
																		if (_theResult_____2__h46826 ==
																		    12'hB09)
																		  $fwrite(dump,
																			  " ",
																			  "c2825_mhpmcounter9",
																			  " 0x%16h",
																			  wdata__h47052);
																		else
																		  if (_theResult_____2__h46826 ==
																		      12'h32A)
																		    $fwrite(dump,
																			    " ",
																			    "c810_mhpmevent10",
																			    " 0x%16h",
																			    wdata__h47052);
																		  else
																		    if (_theResult_____2__h46826 ==
																			12'hB0A)
																		      $fwrite(dump,
																			      " ",
																			      "c2826_mhpmcounter10",
																			      " 0x%16h",
																			      wdata__h47052);
																		    else
																		      if (_theResult_____2__h46826 ==
																			  12'h32B)
																			$fwrite(dump,
																				" ",
																				"c811_mhpmevent11",
																				" 0x%16h",
																				wdata__h47052);
																		      else
																			if (_theResult_____2__h46826 ==
																			    12'hB0B)
																			  $fwrite(dump,
																				  " ",
																				  "c2827_mhpmcounter11",
																				  " 0x%16h",
																				  wdata__h47052);
																			else
																			  if (_theResult_____2__h46826 ==
																			      12'h32C)
																			    $fwrite(dump,
																				    " ",
																				    "c812_mhpmevent12",
																				    " 0x%16h",
																				    wdata__h47052);
																			  else
																			    if (_theResult_____2__h46826 ==
																				12'hB0C)
																			      $fwrite(dump,
																				      " ",
																				      "c2828_mhpmcounter12",
																				      " 0x%16h",
																				      wdata__h47052);
																			    else
																			      if (_theResult_____2__h46826 ==
																				  12'h32D)
																				$fwrite(dump,
																					" ",
																					"c813_mhpmevent13",
																					" 0x%16h",
																					wdata__h47052);
																			      else
																				if (_theResult_____2__h46826 ==
																				    12'hB0D)
																				  $fwrite(dump,
																					  " ",
																					  "c2829_mhpmcounter13",
																					  " 0x%16h",
																					  wdata__h47052);
																				else
																				  if (_theResult_____2__h46826 ==
																				      12'h32E)
																				    $fwrite(dump,
																					    " ",
																					    "c814_mhpmevent14",
																					    " 0x%16h",
																					    wdata__h47052);
																				  else
																				    if (_theResult_____2__h46826 ==
																					12'hB0E)
																				      $fwrite(dump,
																					      " ",
																					      "c2830_mhpmcounter14",
																					      " 0x%16h",
																					      wdata__h47052);
																				    else
																				      if (_theResult_____2__h46826 ==
																					  12'h32F)
																					$fwrite(dump,
																						" ",
																						"c815_mhpmevent15",
																						" 0x%16h",
																						wdata__h47052);
																				      else
																					if (_theResult_____2__h46826 ==
																					    12'hB0F)
																					  $fwrite(dump,
																						  " ",
																						  "c2831_mhpmcounter15",
																						  " 0x%16h",
																						  wdata__h47052);
																					else
																					  if (_theResult_____2__h46826 ==
																					      12'h330)
																					    $fwrite(dump,
																						    " ",
																						    "c816_mhpmevent16",
																						    " 0x%16h",
																						    wdata__h47052);
																					  else
																					    if (_theResult_____2__h46826 ==
																						12'hB10)
																					      $fwrite(dump,
																						      " ",
																						      "c2832_mhpmcounter16",
																						      " 0x%16h",
																						      wdata__h47052);
																					    else
																					      if (_theResult_____2__h46826 ==
																						  12'h331)
																						$fwrite(dump,
																							" ",
																							"c817_mhpmevent17",
																							" 0x%16h",
																							wdata__h47052);
																					      else
																						if (_theResult_____2__h46826 ==
																						    12'hB11)
																						  $fwrite(dump,
																							  " ",
																							  "c2833_mhpmcounter17",
																							  " 0x%16h",
																							  wdata__h47052);
																						else
																						  if (_theResult_____2__h46826 ==
																						      12'h332)
																						    $fwrite(dump,
																							    " ",
																							    "c818_mhpmevent18",
																							    " 0x%16h",
																							    wdata__h47052);
																						  else
																						    if (_theResult_____2__h46826 ==
																							12'hB12)
																						      $fwrite(dump,
																							      " ",
																							      "c2834_mhpmcounter18",
																							      " 0x%16h",
																							      wdata__h47052);
																						    else
																						      if (_theResult_____2__h46826 ==
																							  12'h333)
																							$fwrite(dump,
																								" ",
																								"c819_mhpmevent19",
																								" 0x%16h",
																								wdata__h47052);
																						      else
																							if (_theResult_____2__h46826 ==
																							    12'hB13)
																							  $fwrite(dump,
																								  " ",
																								  "c2835_mhpmcounter19",
																								  " 0x%16h",
																								  wdata__h47052);
																							else
																							  if (_theResult_____2__h46826 ==
																							      12'h334)
																							    $fwrite(dump,
																								    " ",
																								    "c820_mhpmevent20",
																								    " 0x%16h",
																								    wdata__h47052);
																							  else
																							    if (_theResult_____2__h46826 ==
																								12'hB14)
																							      $fwrite(dump,
																								      " ",
																								      "c2836_mhpmcounter20",
																								      " 0x%16h",
																								      wdata__h47052);
																							    else
																							      if (_theResult_____2__h46826 ==
																								  12'h335)
																								$fwrite(dump,
																									" ",
																									"c821_mhpmevent21",
																									" 0x%16h",
																									wdata__h47052);
																							      else
																								if (_theResult_____2__h46826 ==
																								    12'hB15)
																								  $fwrite(dump,
																									  " ",
																									  "c2837_mhpmcounter21",
																									  " 0x%16h",
																									  wdata__h47052);
																								else
																								  if (_theResult_____2__h46826 ==
																								      12'h336)
																								    $fwrite(dump,
																									    " ",
																									    "c822_mhpmevent22",
																									    " 0x%16h",
																									    wdata__h47052);
																								  else
																								    if (_theResult_____2__h46826 ==
																									12'hB16)
																								      $fwrite(dump,
																									      " ",
																									      "c2838_mhpmcounter22",
																									      " 0x%16h",
																									      wdata__h47052);
																								    else
																								      if (_theResult_____2__h46826 ==
																									  12'h337)
																									$fwrite(dump,
																										" ",
																										"c823_mhpmevent23",
																										" 0x%16h",
																										wdata__h47052);
																								      else
																									if (_theResult_____2__h46826 ==
																									    12'hB17)
																									  $fwrite(dump,
																										  " ",
																										  "c2839_mhpmcounter23",
																										  " 0x%16h",
																										  wdata__h47052);
																									else
																									  if (_theResult_____2__h46826 ==
																									      12'h338)
																									    $fwrite(dump,
																										    " ",
																										    "c824_mhpmevent24",
																										    " 0x%16h",
																										    wdata__h47052);
																									  else
																									    if (_theResult_____2__h46826 ==
																										12'hB18)
																									      $fwrite(dump,
																										      " ",
																										      "c2840_mhpmcounter24",
																										      " 0x%16h",
																										      wdata__h47052);
																									    else
																									      if (_theResult_____2__h46826 ==
																										  12'h339)
																										$fwrite(dump,
																											" ",
																											"c825_mhpmevent25",
																											" 0x%16h",
																											wdata__h47052);
																									      else
																										if (_theResult_____2__h46826 ==
																										    12'hB19)
																										  $fwrite(dump,
																											  " ",
																											  "c2841_mhpmcounter25",
																											  " 0x%16h",
																											  wdata__h47052);
																										else
																										  if (_theResult_____2__h46826 ==
																										      12'h33A)
																										    $fwrite(dump,
																											    " ",
																											    "c826_mhpmevent26",
																											    " 0x%16h",
																											    wdata__h47052);
																										  else
																										    if (_theResult_____2__h46826 ==
																											12'hB1A)
																										      $fwrite(dump,
																											      " ",
																											      "c2842_mhpmcounter26",
																											      " 0x%16h",
																											      wdata__h47052);
																										    else
																										      if (_theResult_____2__h46826 ==
																											  12'h33B)
																											$fwrite(dump,
																												" ",
																												"c827_mhpmevent27",
																												" 0x%16h",
																												wdata__h47052);
																										      else
																											if (_theResult_____2__h46826 ==
																											    12'hB1B)
																											  $fwrite(dump,
																												  " ",
																												  "c2843_mhpmcounter27",
																												  " 0x%16h",
																												  wdata__h47052);
																											else
																											  if (_theResult_____2__h46826 ==
																											      12'h33C)
																											    $fwrite(dump,
																												    " ",
																												    "c828_mhpmevent28",
																												    " 0x%16h",
																												    wdata__h47052);
																											  else
																											    if (_theResult_____2__h46826 ==
																												12'hB1C)
																											      $fwrite(dump,
																												      " ",
																												      "c2844_mhpmcounter28",
																												      " 0x%16h",
																												      wdata__h47052);
																											    else
																											      if (_theResult_____2__h46826 ==
																												  12'h33D)
																												$fwrite(dump,
																													" ",
																													"c829_mhpmevent29",
																													" 0x%16h",
																													wdata__h47052);
																											      else
																												if (_theResult_____2__h46826 ==
																												    12'hB1D)
																												  $fwrite(dump,
																													  " ",
																													  "c2845_mhpmcounter29",
																													  " 0x%16h",
																													  wdata__h47052);
																												else
																												  if (_theResult_____2__h46826 ==
																												      12'h33E)
																												    $fwrite(dump,
																													    " ",
																													    "c830_mhpmevent30",
																													    " 0x%16h",
																													    wdata__h47052);
																												  else
																												    if (_theResult_____2__h46826 ==
																													12'hB1E)
																												      $fwrite(dump,
																													      " ",
																													      "c2846_mhpmcounter30",
																													      " 0x%16h",
																													      wdata__h47052);
																												    else
																												      if (_theResult_____2__h46826 ==
																													  12'h33F)
																													$fwrite(dump,
																														" ",
																														"c831_mhpmevent31",
																														" 0x%16h",
																														wdata__h47052);
																												      else
																													if (_theResult_____2__h46826 ==
																													    12'hB1F)
																													  $fwrite(dump,
																														  " ",
																														  "c2847_mhpmcounter31",
																														  " 0x%16h",
																														  wdata__h47052);
																													else
																													  if (_theResult_____2__h46826 ==
																													      12'h001)
																													    $fwrite(dump,
																														    " ",
																														    "c1_fflags",
																														    " 0x%16h",
																														    wdata__h47052);
																													  else
																													    if (_theResult_____2__h46826 ==
																														12'h002)
																													      $fwrite(dump,
																														      " ",
																														      "c2_frm",
																														      " 0x%16h",
																														      wdata__h47052);
																													    else
																													      if (_theResult_____2__h46826 ==
																														  12'hC00)
																														$fwrite(dump,
																															" ",
																															"c3072_cycle",
																															" 0x%16h",
																															wdata__h47052);
																													      else
																														if (_theResult_____2__h46826 ==
																														    12'hC02)
																														  $fwrite(dump,
																															  " ",
																															  "c3074_instret",
																															  " 0x%16h",
																															  wdata__h47052);
																														else
																														  if (_theResult_____2__h46826 ==
																														      12'hC07)
																														    $fwrite(dump,
																															    " ",
																															    "c3079_hpmcounter7",
																															    " 0x%16h",
																															    wdata__h47052);
																														  else
																														    if (_theResult_____2__h46826 ==
																															12'hC08)
																														      $fwrite(dump,
																															      " ",
																															      "c3080_hpmcounter8",
																															      " 0x%16h",
																															      wdata__h47052);
																														    else
																														      if (_theResult_____2__h46826 ==
																															  12'hC09)
																															$fwrite(dump,
																																" ",
																																"c3081_hpmcounter9",
																																" 0x%16h",
																																wdata__h47052);
																														      else
																															if (_theResult_____2__h46826 ==
																															    12'hC0A)
																															  $fwrite(dump,
																																  " ",
																																  "c3082_hpmcounter10",
																																  " 0x%16h",
																																  wdata__h47052);
																															else
																															  if (_theResult_____2__h46826 ==
																															      12'hC0B)
																															    $fwrite(dump,
																																    " ",
																																    "c3083_hpmcounter11",
																																    " 0x%16h",
																																    wdata__h47052);
																															  else
																															    if (_theResult_____2__h46826 ==
																																12'hC0C)
																															      $fwrite(dump,
																																      " ",
																																      "c3084_hpmcounter12",
																																      " 0x%16h",
																																      wdata__h47052);
																															    else
																															      if (_theResult_____2__h46826 ==
																																  12'hC0D)
																																$fwrite(dump,
																																	" ",
																																	"c3085_hpmcounter13",
																																	" 0x%16h",
																																	wdata__h47052);
																															      else
																																if (_theResult_____2__h46826 ==
																																    12'hC0E)
																																  $fwrite(dump,
																																	  " ",
																																	  "c3086_hpmcounter14",
																																	  " 0x%16h",
																																	  wdata__h47052);
																																else
																																  if (_theResult_____2__h46826 ==
																																      12'hC0F)
																																    $fwrite(dump,
																																	    " ",
																																	    "c3087_hpmcounter15",
																																	    " 0x%16h",
																																	    wdata__h47052);
																																  else
																																    if (_theResult_____2__h46826 ==
																																	12'hC10)
																																      $fwrite(dump,
																																	      " ",
																																	      "c3088_hpmcounter16",
																																	      " 0x%16h",
																																	      wdata__h47052);
																																    else
																																      if (_theResult_____2__h46826 ==
																																	  12'hC11)
																																	$fwrite(dump,
																																		" ",
																																		"c3089_hpmcounter17",
																																		" 0x%16h",
																																		wdata__h47052);
																																      else
																																	if (_theResult_____2__h46826 ==
																																	    12'hC12)
																																	  $fwrite(dump,
																																		  " ",
																																		  "c3090_hpmcounter18",
																																		  " 0x%16h",
																																		  wdata__h47052);
																																	else
																																	  if (_theResult_____2__h46826 ==
																																	      12'hC13)
																																	    $fwrite(dump,
																																		    " ",
																																		    "c3091_hpmcounter19",
																																		    " 0x%16h",
																																		    wdata__h47052);
																																	  else
																																	    if (_theResult_____2__h46826 ==
																																		12'hC14)
																																	      $fwrite(dump,
																																		      " ",
																																		      "c3092_hpmcounter20",
																																		      " 0x%16h",
																																		      wdata__h47052);
																																	    else
																																	      if (_theResult_____2__h46826 ==
																																		  12'hC15)
																																		$fwrite(dump,
																																			" ",
																																			"c3093_hpmcounter21",
																																			" 0x%16h",
																																			wdata__h47052);
																																	      else
																																		if (_theResult_____2__h46826 ==
																																		    12'hC16)
																																		  $fwrite(dump,
																																			  " ",
																																			  "c3094_hpmcounter22",
																																			  " 0x%16h",
																																			  wdata__h47052);
																																		else
																																		  if (_theResult_____2__h46826 ==
																																		      12'hC17)
																																		    $fwrite(dump,
																																			    " ",
																																			    "c3095_hpmcounter23",
																																			    " 0x%16h",
																																			    wdata__h47052);
																																		  else
																																		    if (_theResult_____2__h46826 ==
																																			12'hC18)
																																		      $fwrite(dump,
																																			      " ",
																																			      "c3096_hpmcounter24",
																																			      " 0x%16h",
																																			      wdata__h47052);
																																		    else
																																		      if (_theResult_____2__h46826 ==
																																			  12'hC19)
																																			$fwrite(dump,
																																				" ",
																																				"c3097_hpmcounter25",
																																				" 0x%16h",
																																				wdata__h47052);
																																		      else
																																			if (_theResult_____2__h46826 ==
																																			    12'hC1A)
																																			  $fwrite(dump,
																																				  " ",
																																				  "c3098_hpmcounter26",
																																				  " 0x%16h",
																																				  wdata__h47052);
																																			else
																																			  if (_theResult_____2__h46826 ==
																																			      12'hC1B)
																																			    $fwrite(dump,
																																				    " ",
																																				    "c3099_hpmcounter27",
																																				    " 0x%16h",
																																				    wdata__h47052);
																																			  else
																																			    if (_theResult_____2__h46826 ==
																																				12'hC1C)
																																			      $fwrite(dump,
																																				      " ",
																																				      "c3100_hpmcounter28",
																																				      " 0x%16h",
																																				      wdata__h47052);
																																			    else
																																			      if (_theResult_____2__h46826 ==
																																				  12'hC1D)
																																				$fwrite(dump,
																																					" ",
																																					"c3101_hpmcounter29",
																																					" 0x%16h",
																																					wdata__h47052);
																																			      else
																																				if (_theResult_____2__h46826 ==
																																				    12'hC1E)
																																				  $fwrite(dump,
																																					  " ",
																																					  "c3102_hpmcounter30",
																																					  " 0x%16h",
																																					  wdata__h47052);
																																				else
																																				  if (_theResult_____2__h46826 ==
																																				      12'hC1F)
																																				    $fwrite(dump,
																																					    " ",
																																					    "c3103_hpmcounter31",
																																					    " 0x%16h",
																																					    wdata__h47052);
																																				  else
																																				    if (_theResult_____2__h46826 ==
																																					12'h800)
																																				      $fwrite(dump,
																																					      " ",
																																					      "c2048_customcontrol",
																																					      " 0x%16h",
																																					      wdata__h47052);
																																				    else
																																				      if (_theResult_____2__h46826 ==
																																					  12'h7B0)
																																					$fwrite(dump,
																																						" ",
																																						"c1968_dcsr",
																																						" 0x%16h",
																																						wdata__h47052);
																																				      else
																																					if (_theResult_____2__h46826 ==
																																					    12'h7B1)
																																					  $fwrite(dump,
																																						  " ",
																																						  "c1969_dpc",
																																						  " 0x%16h",
																																						  wdata__h47052);
																																					else
																																					  if (_theResult_____2__h46826 ==
																																					      12'h7B2)
																																					    $fwrite(dump,
																																						    " ",
																																						    "c1970_dscratch0",
																																						    " 0x%16h",
																																						    wdata__h47052);
																																					  else
																																					    $fwrite(dump,
																																						    " ",
																																						    "c1971_dscratch1",
																																						    " 0x%16h",
																																						    wdata__h47052);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file &&
	  soc_soc_sb_commitlog__89_BIT_309_90_AND_NOT_so_ETC___d955)
	$fwrite(dump, " ", "c1_fflags", " 0x%16h", wdata_fflags__h49796);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file &&
	  soc_soc_sb_commitlog__89_BIT_309_90_AND_NOT_so_ETC___d955)
	$fwrite(dump, " ", "c2_frm", " 0x%16h", wdata_frm__h49797);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file &&
	  soc_soc_sb_commitlog__89_BIT_309_90_AND_NOT_so_ETC___d969)
	$fwrite(dump,
		" ",
		"c768_mstatus",
		" 0x%16h",
		soc_soc_sb_sbread_mv_csr_mstatus);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file && soc_soc_sb_commitlog[309] &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000006F &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000A001 &&
	  TASK_testplusargs___d399 &&
	  soc_soc_sb_commitlog[210:209] == 2'd1 &&
	  (soc_soc_sb_commitlog[16:14] == 3'd0 ||
	   soc_soc_sb_commitlog[16:14] == 3'd2) &&
	  soc_soc_sb_commitlog[8] &&
	  soc_soc_sb_commitlog[13:9] != 5'd0)
	$fwrite(dump,
		" x%0d",
		soc_soc_sb_commitlog[13:9],
		" 0x%16h",
		soc_soc_sb_commitlog[80:17]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file && soc_soc_sb_commitlog[309] &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000006F &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000A001 &&
	  TASK_testplusargs___d399 &&
	  soc_soc_sb_commitlog[210:209] == 2'd1 &&
	  (soc_soc_sb_commitlog[16:14] == 3'd0 ||
	   soc_soc_sb_commitlog[16:14] == 3'd2) &&
	  !soc_soc_sb_commitlog[8])
	$fwrite(dump,
		" f%0d",
		soc_soc_sb_commitlog[13:9],
		" 0x%16h",
		soc_soc_sb_commitlog[80:17]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file && soc_soc_sb_commitlog[309] &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000006F &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000A001 &&
	  TASK_testplusargs___d399 &&
	  soc_soc_sb_commitlog[210:209] == 2'd1 &&
	  soc_soc_sb_commitlog[16:14] != 3'd3 &&
	  soc_soc_sb_commitlog[16:14] != 3'd4)
	$fwrite(dump, " mem 0x%16h", soc_soc_sb_commitlog[208:145]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file && soc_soc_sb_commitlog[309] &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000006F &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000A001 &&
	  TASK_testplusargs___d399 &&
	  soc_soc_sb_commitlog[210:209] == 2'd1 &&
	  soc_soc_sb_commitlog[16:14] == 3'd2 &&
	  socsoc_sb_commitlog_BITS_4_TO_0__q3[3:0] != 4'd5 &&
	  socsoc_sb_commitlog_BITS_4_TO_0__q3[3:0] != 4'd7)
	$fwrite(dump, " mem 0x%16h", soc_soc_sb_commitlog[208:145]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file && soc_soc_sb_commitlog[309] &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000006F &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000A001 &&
	  TASK_testplusargs___d399 &&
	  soc_soc_sb_commitlog[210:209] == 2'd1 &&
	  (soc_soc_sb_commitlog[16:14] == 3'd1 ||
	   soc_soc_sb_commitlog[16:14] == 3'd2 &&
	   socsoc_sb_commitlog_BITS_4_TO_0__q3[3:0] != 4'd5) &&
	  soc_soc_sb_commitlog[7:5] == 3'd0)
	$fwrite(dump, " 0x%2h", _theResult_____2__h51166[7:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file && soc_soc_sb_commitlog[309] &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000006F &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000A001 &&
	  TASK_testplusargs___d399 &&
	  soc_soc_sb_commitlog[210:209] == 2'd1 &&
	  (soc_soc_sb_commitlog[16:14] == 3'd1 ||
	   soc_soc_sb_commitlog[16:14] == 3'd2 &&
	   socsoc_sb_commitlog_BITS_4_TO_0__q3[3:0] != 4'd5) &&
	  soc_soc_sb_commitlog[7:5] == 3'd1)
	$fwrite(dump, " 0x%4h", _theResult_____2__h51166[15:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file && soc_soc_sb_commitlog[309] &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000006F &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000A001 &&
	  TASK_testplusargs___d399 &&
	  soc_soc_sb_commitlog[210:209] == 2'd1 &&
	  (soc_soc_sb_commitlog[16:14] == 3'd1 ||
	   soc_soc_sb_commitlog[16:14] == 3'd2 &&
	   socsoc_sb_commitlog_BITS_4_TO_0__q3[3:0] != 4'd5) &&
	  soc_soc_sb_commitlog[7:5] == 3'd2)
	$fwrite(dump, " 0x%8h", _theResult_____2__h51166[31:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file && soc_soc_sb_commitlog[309] &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000006F &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000A001 &&
	  TASK_testplusargs___d399 &&
	  soc_soc_sb_commitlog[210:209] == 2'd1 &&
	  (soc_soc_sb_commitlog[16:14] == 3'd1 ||
	   soc_soc_sb_commitlog[16:14] == 3'd2 &&
	   socsoc_sb_commitlog_BITS_4_TO_0__q3[3:0] != 4'd5) &&
	  soc_soc_sb_commitlog[7:5] == 3'd3)
	$fwrite(dump, " 0x%16h", _theResult_____2__h51166);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_write_dump_file && soc_soc_sb_commitlog[309] &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000006F &&
	  soc_soc_sb_commitlog[242:211] != 32'h0000A001 &&
	  TASK_testplusargs___d399)
	$fwrite(dump, "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_open_file_app)
	begin
	  TASK_fopen___d373 = $fopen("app_log", "w");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_open_file_app && TASK_fopen___d373 == 32'd0)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_1.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_2.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_3.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_4.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_5.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_6.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_7.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_8.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_9.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_10.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_11.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_12.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_13.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_14.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_15.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_16.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_17.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_18.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_19.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_20.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_21.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_22.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_23.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_24.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_25.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_26.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_27.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_28.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_29.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_30.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_uart_uart_receive_buffer_shift &&
	  WILL_FIRE_RL_uart_uart_receive_wait_for_start_bit &&
	  !uart_uart_rRecvData)
	$display("Error: \"devices/uart_v2/RS232_modified.bsv\", line 505, column 9: (R0002)\n  Conflict-free rules RL_uart_uart_receive_buffer_shift and\n  RL_uart_uart_receive_wait_for_start_bit called conflicting methods read and\n  write of module instance uart_uart_vrRecvBuffer_31.\n");
  end
  // synopsys translate_on
endmodule  // mkTbSoc

