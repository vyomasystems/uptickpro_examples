//
// Generated by Bluespec Compiler, version 2023.07 (build 0eb551dc)
//
// On Tue Jul 29 14:28:04 +04 2025
//
//
// Ports:
// Name                         I/O  size props
// ma_lock_rd                     O     4 reg
// RDY_ma_lock_rd                 O     1 const
// RDY_ma_release_rd              O     1 const
// mv_board                       O   320
// RDY_mv_board                   O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// ma_lock_rd_lock                I    10
// ma_release_rd_rls              I    10
// EN_ma_release_rd               I     1
// EN_ma_lock_rd                  I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkscoreboard(CLK,
		    RST_N,

		    ma_lock_rd_lock,
		    EN_ma_lock_rd,
		    ma_lock_rd,
		    RDY_ma_lock_rd,

		    ma_release_rd_rls,
		    EN_ma_release_rd,
		    RDY_ma_release_rd,

		    mv_board,
		    RDY_mv_board);
  parameter [63 : 0] hartid = 64'b0;
  input  CLK;
  input  RST_N;

  // actionvalue method ma_lock_rd
  input  [9 : 0] ma_lock_rd_lock;
  input  EN_ma_lock_rd;
  output [3 : 0] ma_lock_rd;
  output RDY_ma_lock_rd;

  // action method ma_release_rd
  input  [9 : 0] ma_release_rd_rls;
  input  EN_ma_release_rd;
  output RDY_ma_release_rd;

  // value method mv_board
  output [319 : 0] mv_board;
  output RDY_mv_board;

  // signals for module outputs
  wire [319 : 0] mv_board;
  wire [3 : 0] ma_lock_rd;
  wire RDY_ma_lock_rd, RDY_ma_release_rd, RDY_mv_board;

  // inlined wires
  wire [4 : 0] rg_rf_board_0_port0__write_1,
	       rg_rf_board_0_port1__write_1,
	       rg_rf_board_1_port1__read,
	       rg_rf_board_1_port2__read,
	       rg_rf_board_10_port1__read,
	       rg_rf_board_10_port2__read,
	       rg_rf_board_11_port1__read,
	       rg_rf_board_11_port2__read,
	       rg_rf_board_12_port1__read,
	       rg_rf_board_12_port2__read,
	       rg_rf_board_13_port1__read,
	       rg_rf_board_13_port2__read,
	       rg_rf_board_14_port1__read,
	       rg_rf_board_14_port2__read,
	       rg_rf_board_15_port1__read,
	       rg_rf_board_15_port2__read,
	       rg_rf_board_16_port1__read,
	       rg_rf_board_16_port2__read,
	       rg_rf_board_17_port1__read,
	       rg_rf_board_17_port2__read,
	       rg_rf_board_18_port1__read,
	       rg_rf_board_18_port2__read,
	       rg_rf_board_19_port1__read,
	       rg_rf_board_19_port2__read,
	       rg_rf_board_2_port1__read,
	       rg_rf_board_2_port2__read,
	       rg_rf_board_20_port1__read,
	       rg_rf_board_20_port2__read,
	       rg_rf_board_21_port1__read,
	       rg_rf_board_21_port2__read,
	       rg_rf_board_22_port1__read,
	       rg_rf_board_22_port2__read,
	       rg_rf_board_23_port1__read,
	       rg_rf_board_23_port2__read,
	       rg_rf_board_24_port1__read,
	       rg_rf_board_24_port2__read,
	       rg_rf_board_25_port1__read,
	       rg_rf_board_25_port2__read,
	       rg_rf_board_26_port1__read,
	       rg_rf_board_26_port2__read,
	       rg_rf_board_27_port1__read,
	       rg_rf_board_27_port2__read,
	       rg_rf_board_28_port1__read,
	       rg_rf_board_28_port2__read,
	       rg_rf_board_29_port1__read,
	       rg_rf_board_29_port2__read,
	       rg_rf_board_3_port1__read,
	       rg_rf_board_3_port2__read,
	       rg_rf_board_30_port1__read,
	       rg_rf_board_30_port2__read,
	       rg_rf_board_31_port1__read,
	       rg_rf_board_31_port2__read,
	       rg_rf_board_32_port1__read,
	       rg_rf_board_32_port2__read,
	       rg_rf_board_33_port1__read,
	       rg_rf_board_33_port2__read,
	       rg_rf_board_34_port1__read,
	       rg_rf_board_34_port2__read,
	       rg_rf_board_35_port1__read,
	       rg_rf_board_35_port2__read,
	       rg_rf_board_36_port1__read,
	       rg_rf_board_36_port2__read,
	       rg_rf_board_37_port1__read,
	       rg_rf_board_37_port2__read,
	       rg_rf_board_38_port1__read,
	       rg_rf_board_38_port2__read,
	       rg_rf_board_39_port1__read,
	       rg_rf_board_39_port2__read,
	       rg_rf_board_4_port1__read,
	       rg_rf_board_4_port2__read,
	       rg_rf_board_40_port1__read,
	       rg_rf_board_40_port2__read,
	       rg_rf_board_41_port1__read,
	       rg_rf_board_41_port2__read,
	       rg_rf_board_42_port1__read,
	       rg_rf_board_42_port2__read,
	       rg_rf_board_43_port1__read,
	       rg_rf_board_43_port2__read,
	       rg_rf_board_44_port1__read,
	       rg_rf_board_44_port2__read,
	       rg_rf_board_45_port1__read,
	       rg_rf_board_45_port2__read,
	       rg_rf_board_46_port1__read,
	       rg_rf_board_46_port2__read,
	       rg_rf_board_47_port1__read,
	       rg_rf_board_47_port2__read,
	       rg_rf_board_48_port1__read,
	       rg_rf_board_48_port2__read,
	       rg_rf_board_49_port1__read,
	       rg_rf_board_49_port2__read,
	       rg_rf_board_5_port1__read,
	       rg_rf_board_5_port2__read,
	       rg_rf_board_50_port1__read,
	       rg_rf_board_50_port2__read,
	       rg_rf_board_51_port1__read,
	       rg_rf_board_51_port2__read,
	       rg_rf_board_52_port1__read,
	       rg_rf_board_52_port2__read,
	       rg_rf_board_53_port1__read,
	       rg_rf_board_53_port2__read,
	       rg_rf_board_54_port1__read,
	       rg_rf_board_54_port2__read,
	       rg_rf_board_55_port1__read,
	       rg_rf_board_55_port2__read,
	       rg_rf_board_56_port1__read,
	       rg_rf_board_56_port2__read,
	       rg_rf_board_57_port1__read,
	       rg_rf_board_57_port2__read,
	       rg_rf_board_58_port1__read,
	       rg_rf_board_58_port2__read,
	       rg_rf_board_59_port1__read,
	       rg_rf_board_59_port2__read,
	       rg_rf_board_6_port1__read,
	       rg_rf_board_6_port2__read,
	       rg_rf_board_60_port1__read,
	       rg_rf_board_60_port2__read,
	       rg_rf_board_61_port1__read,
	       rg_rf_board_61_port2__read,
	       rg_rf_board_62_port1__read,
	       rg_rf_board_62_port2__read,
	       rg_rf_board_63_port1__read,
	       rg_rf_board_63_port2__read,
	       rg_rf_board_7_port1__read,
	       rg_rf_board_7_port2__read,
	       rg_rf_board_8_port1__read,
	       rg_rf_board_8_port2__read,
	       rg_rf_board_9_port1__read,
	       rg_rf_board_9_port2__read;
  wire rg_rf_board_1_EN_port0__write,
       rg_rf_board_1_EN_port1__write,
       rg_rf_board_10_EN_port0__write,
       rg_rf_board_10_EN_port1__write,
       rg_rf_board_11_EN_port0__write,
       rg_rf_board_11_EN_port1__write,
       rg_rf_board_12_EN_port0__write,
       rg_rf_board_12_EN_port1__write,
       rg_rf_board_13_EN_port0__write,
       rg_rf_board_13_EN_port1__write,
       rg_rf_board_14_EN_port0__write,
       rg_rf_board_14_EN_port1__write,
       rg_rf_board_15_EN_port0__write,
       rg_rf_board_15_EN_port1__write,
       rg_rf_board_16_EN_port0__write,
       rg_rf_board_16_EN_port1__write,
       rg_rf_board_17_EN_port0__write,
       rg_rf_board_17_EN_port1__write,
       rg_rf_board_18_EN_port0__write,
       rg_rf_board_18_EN_port1__write,
       rg_rf_board_19_EN_port0__write,
       rg_rf_board_19_EN_port1__write,
       rg_rf_board_2_EN_port0__write,
       rg_rf_board_2_EN_port1__write,
       rg_rf_board_20_EN_port0__write,
       rg_rf_board_20_EN_port1__write,
       rg_rf_board_21_EN_port0__write,
       rg_rf_board_21_EN_port1__write,
       rg_rf_board_22_EN_port0__write,
       rg_rf_board_22_EN_port1__write,
       rg_rf_board_23_EN_port0__write,
       rg_rf_board_23_EN_port1__write,
       rg_rf_board_24_EN_port0__write,
       rg_rf_board_24_EN_port1__write,
       rg_rf_board_25_EN_port0__write,
       rg_rf_board_25_EN_port1__write,
       rg_rf_board_26_EN_port0__write,
       rg_rf_board_26_EN_port1__write,
       rg_rf_board_27_EN_port0__write,
       rg_rf_board_27_EN_port1__write,
       rg_rf_board_28_EN_port0__write,
       rg_rf_board_28_EN_port1__write,
       rg_rf_board_29_EN_port0__write,
       rg_rf_board_29_EN_port1__write,
       rg_rf_board_3_EN_port0__write,
       rg_rf_board_3_EN_port1__write,
       rg_rf_board_30_EN_port0__write,
       rg_rf_board_30_EN_port1__write,
       rg_rf_board_31_EN_port0__write,
       rg_rf_board_31_EN_port1__write,
       rg_rf_board_32_EN_port0__write,
       rg_rf_board_32_EN_port1__write,
       rg_rf_board_33_EN_port0__write,
       rg_rf_board_33_EN_port1__write,
       rg_rf_board_34_EN_port0__write,
       rg_rf_board_34_EN_port1__write,
       rg_rf_board_35_EN_port0__write,
       rg_rf_board_35_EN_port1__write,
       rg_rf_board_36_EN_port0__write,
       rg_rf_board_36_EN_port1__write,
       rg_rf_board_37_EN_port0__write,
       rg_rf_board_37_EN_port1__write,
       rg_rf_board_38_EN_port0__write,
       rg_rf_board_38_EN_port1__write,
       rg_rf_board_39_EN_port0__write,
       rg_rf_board_39_EN_port1__write,
       rg_rf_board_4_EN_port0__write,
       rg_rf_board_4_EN_port1__write,
       rg_rf_board_40_EN_port0__write,
       rg_rf_board_40_EN_port1__write,
       rg_rf_board_41_EN_port0__write,
       rg_rf_board_41_EN_port1__write,
       rg_rf_board_42_EN_port0__write,
       rg_rf_board_42_EN_port1__write,
       rg_rf_board_43_EN_port0__write,
       rg_rf_board_43_EN_port1__write,
       rg_rf_board_44_EN_port0__write,
       rg_rf_board_44_EN_port1__write,
       rg_rf_board_45_EN_port0__write,
       rg_rf_board_45_EN_port1__write,
       rg_rf_board_46_EN_port0__write,
       rg_rf_board_46_EN_port1__write,
       rg_rf_board_47_EN_port0__write,
       rg_rf_board_47_EN_port1__write,
       rg_rf_board_48_EN_port0__write,
       rg_rf_board_48_EN_port1__write,
       rg_rf_board_49_EN_port0__write,
       rg_rf_board_49_EN_port1__write,
       rg_rf_board_5_EN_port0__write,
       rg_rf_board_5_EN_port1__write,
       rg_rf_board_50_EN_port0__write,
       rg_rf_board_50_EN_port1__write,
       rg_rf_board_51_EN_port0__write,
       rg_rf_board_51_EN_port1__write,
       rg_rf_board_52_EN_port0__write,
       rg_rf_board_52_EN_port1__write,
       rg_rf_board_53_EN_port0__write,
       rg_rf_board_53_EN_port1__write,
       rg_rf_board_54_EN_port0__write,
       rg_rf_board_54_EN_port1__write,
       rg_rf_board_55_EN_port0__write,
       rg_rf_board_55_EN_port1__write,
       rg_rf_board_56_EN_port0__write,
       rg_rf_board_56_EN_port1__write,
       rg_rf_board_57_EN_port0__write,
       rg_rf_board_57_EN_port1__write,
       rg_rf_board_58_EN_port0__write,
       rg_rf_board_58_EN_port1__write,
       rg_rf_board_59_EN_port0__write,
       rg_rf_board_59_EN_port1__write,
       rg_rf_board_6_EN_port0__write,
       rg_rf_board_6_EN_port1__write,
       rg_rf_board_60_EN_port0__write,
       rg_rf_board_60_EN_port1__write,
       rg_rf_board_61_EN_port0__write,
       rg_rf_board_61_EN_port1__write,
       rg_rf_board_62_EN_port0__write,
       rg_rf_board_62_EN_port1__write,
       rg_rf_board_63_EN_port0__write,
       rg_rf_board_63_EN_port1__write,
       rg_rf_board_7_EN_port0__write,
       rg_rf_board_7_EN_port1__write,
       rg_rf_board_8_EN_port0__write,
       rg_rf_board_8_EN_port1__write,
       rg_rf_board_9_EN_port0__write,
       rg_rf_board_9_EN_port1__write;

  // register rg_renameid
  reg [3 : 0] rg_renameid;
  wire [3 : 0] rg_renameid_D_IN;
  wire rg_renameid_EN;

  // register rg_rf_board_0
  reg [4 : 0] rg_rf_board_0;
  wire [4 : 0] rg_rf_board_0_D_IN;
  wire rg_rf_board_0_EN;

  // register rg_rf_board_1
  reg [4 : 0] rg_rf_board_1;
  wire [4 : 0] rg_rf_board_1_D_IN;
  wire rg_rf_board_1_EN;

  // register rg_rf_board_10
  reg [4 : 0] rg_rf_board_10;
  wire [4 : 0] rg_rf_board_10_D_IN;
  wire rg_rf_board_10_EN;

  // register rg_rf_board_11
  reg [4 : 0] rg_rf_board_11;
  wire [4 : 0] rg_rf_board_11_D_IN;
  wire rg_rf_board_11_EN;

  // register rg_rf_board_12
  reg [4 : 0] rg_rf_board_12;
  wire [4 : 0] rg_rf_board_12_D_IN;
  wire rg_rf_board_12_EN;

  // register rg_rf_board_13
  reg [4 : 0] rg_rf_board_13;
  wire [4 : 0] rg_rf_board_13_D_IN;
  wire rg_rf_board_13_EN;

  // register rg_rf_board_14
  reg [4 : 0] rg_rf_board_14;
  wire [4 : 0] rg_rf_board_14_D_IN;
  wire rg_rf_board_14_EN;

  // register rg_rf_board_15
  reg [4 : 0] rg_rf_board_15;
  wire [4 : 0] rg_rf_board_15_D_IN;
  wire rg_rf_board_15_EN;

  // register rg_rf_board_16
  reg [4 : 0] rg_rf_board_16;
  wire [4 : 0] rg_rf_board_16_D_IN;
  wire rg_rf_board_16_EN;

  // register rg_rf_board_17
  reg [4 : 0] rg_rf_board_17;
  wire [4 : 0] rg_rf_board_17_D_IN;
  wire rg_rf_board_17_EN;

  // register rg_rf_board_18
  reg [4 : 0] rg_rf_board_18;
  wire [4 : 0] rg_rf_board_18_D_IN;
  wire rg_rf_board_18_EN;

  // register rg_rf_board_19
  reg [4 : 0] rg_rf_board_19;
  wire [4 : 0] rg_rf_board_19_D_IN;
  wire rg_rf_board_19_EN;

  // register rg_rf_board_2
  reg [4 : 0] rg_rf_board_2;
  wire [4 : 0] rg_rf_board_2_D_IN;
  wire rg_rf_board_2_EN;

  // register rg_rf_board_20
  reg [4 : 0] rg_rf_board_20;
  wire [4 : 0] rg_rf_board_20_D_IN;
  wire rg_rf_board_20_EN;

  // register rg_rf_board_21
  reg [4 : 0] rg_rf_board_21;
  wire [4 : 0] rg_rf_board_21_D_IN;
  wire rg_rf_board_21_EN;

  // register rg_rf_board_22
  reg [4 : 0] rg_rf_board_22;
  wire [4 : 0] rg_rf_board_22_D_IN;
  wire rg_rf_board_22_EN;

  // register rg_rf_board_23
  reg [4 : 0] rg_rf_board_23;
  wire [4 : 0] rg_rf_board_23_D_IN;
  wire rg_rf_board_23_EN;

  // register rg_rf_board_24
  reg [4 : 0] rg_rf_board_24;
  wire [4 : 0] rg_rf_board_24_D_IN;
  wire rg_rf_board_24_EN;

  // register rg_rf_board_25
  reg [4 : 0] rg_rf_board_25;
  wire [4 : 0] rg_rf_board_25_D_IN;
  wire rg_rf_board_25_EN;

  // register rg_rf_board_26
  reg [4 : 0] rg_rf_board_26;
  wire [4 : 0] rg_rf_board_26_D_IN;
  wire rg_rf_board_26_EN;

  // register rg_rf_board_27
  reg [4 : 0] rg_rf_board_27;
  wire [4 : 0] rg_rf_board_27_D_IN;
  wire rg_rf_board_27_EN;

  // register rg_rf_board_28
  reg [4 : 0] rg_rf_board_28;
  wire [4 : 0] rg_rf_board_28_D_IN;
  wire rg_rf_board_28_EN;

  // register rg_rf_board_29
  reg [4 : 0] rg_rf_board_29;
  wire [4 : 0] rg_rf_board_29_D_IN;
  wire rg_rf_board_29_EN;

  // register rg_rf_board_3
  reg [4 : 0] rg_rf_board_3;
  wire [4 : 0] rg_rf_board_3_D_IN;
  wire rg_rf_board_3_EN;

  // register rg_rf_board_30
  reg [4 : 0] rg_rf_board_30;
  wire [4 : 0] rg_rf_board_30_D_IN;
  wire rg_rf_board_30_EN;

  // register rg_rf_board_31
  reg [4 : 0] rg_rf_board_31;
  wire [4 : 0] rg_rf_board_31_D_IN;
  wire rg_rf_board_31_EN;

  // register rg_rf_board_32
  reg [4 : 0] rg_rf_board_32;
  wire [4 : 0] rg_rf_board_32_D_IN;
  wire rg_rf_board_32_EN;

  // register rg_rf_board_33
  reg [4 : 0] rg_rf_board_33;
  wire [4 : 0] rg_rf_board_33_D_IN;
  wire rg_rf_board_33_EN;

  // register rg_rf_board_34
  reg [4 : 0] rg_rf_board_34;
  wire [4 : 0] rg_rf_board_34_D_IN;
  wire rg_rf_board_34_EN;

  // register rg_rf_board_35
  reg [4 : 0] rg_rf_board_35;
  wire [4 : 0] rg_rf_board_35_D_IN;
  wire rg_rf_board_35_EN;

  // register rg_rf_board_36
  reg [4 : 0] rg_rf_board_36;
  wire [4 : 0] rg_rf_board_36_D_IN;
  wire rg_rf_board_36_EN;

  // register rg_rf_board_37
  reg [4 : 0] rg_rf_board_37;
  wire [4 : 0] rg_rf_board_37_D_IN;
  wire rg_rf_board_37_EN;

  // register rg_rf_board_38
  reg [4 : 0] rg_rf_board_38;
  wire [4 : 0] rg_rf_board_38_D_IN;
  wire rg_rf_board_38_EN;

  // register rg_rf_board_39
  reg [4 : 0] rg_rf_board_39;
  wire [4 : 0] rg_rf_board_39_D_IN;
  wire rg_rf_board_39_EN;

  // register rg_rf_board_4
  reg [4 : 0] rg_rf_board_4;
  wire [4 : 0] rg_rf_board_4_D_IN;
  wire rg_rf_board_4_EN;

  // register rg_rf_board_40
  reg [4 : 0] rg_rf_board_40;
  wire [4 : 0] rg_rf_board_40_D_IN;
  wire rg_rf_board_40_EN;

  // register rg_rf_board_41
  reg [4 : 0] rg_rf_board_41;
  wire [4 : 0] rg_rf_board_41_D_IN;
  wire rg_rf_board_41_EN;

  // register rg_rf_board_42
  reg [4 : 0] rg_rf_board_42;
  wire [4 : 0] rg_rf_board_42_D_IN;
  wire rg_rf_board_42_EN;

  // register rg_rf_board_43
  reg [4 : 0] rg_rf_board_43;
  wire [4 : 0] rg_rf_board_43_D_IN;
  wire rg_rf_board_43_EN;

  // register rg_rf_board_44
  reg [4 : 0] rg_rf_board_44;
  wire [4 : 0] rg_rf_board_44_D_IN;
  wire rg_rf_board_44_EN;

  // register rg_rf_board_45
  reg [4 : 0] rg_rf_board_45;
  wire [4 : 0] rg_rf_board_45_D_IN;
  wire rg_rf_board_45_EN;

  // register rg_rf_board_46
  reg [4 : 0] rg_rf_board_46;
  wire [4 : 0] rg_rf_board_46_D_IN;
  wire rg_rf_board_46_EN;

  // register rg_rf_board_47
  reg [4 : 0] rg_rf_board_47;
  wire [4 : 0] rg_rf_board_47_D_IN;
  wire rg_rf_board_47_EN;

  // register rg_rf_board_48
  reg [4 : 0] rg_rf_board_48;
  wire [4 : 0] rg_rf_board_48_D_IN;
  wire rg_rf_board_48_EN;

  // register rg_rf_board_49
  reg [4 : 0] rg_rf_board_49;
  wire [4 : 0] rg_rf_board_49_D_IN;
  wire rg_rf_board_49_EN;

  // register rg_rf_board_5
  reg [4 : 0] rg_rf_board_5;
  wire [4 : 0] rg_rf_board_5_D_IN;
  wire rg_rf_board_5_EN;

  // register rg_rf_board_50
  reg [4 : 0] rg_rf_board_50;
  wire [4 : 0] rg_rf_board_50_D_IN;
  wire rg_rf_board_50_EN;

  // register rg_rf_board_51
  reg [4 : 0] rg_rf_board_51;
  wire [4 : 0] rg_rf_board_51_D_IN;
  wire rg_rf_board_51_EN;

  // register rg_rf_board_52
  reg [4 : 0] rg_rf_board_52;
  wire [4 : 0] rg_rf_board_52_D_IN;
  wire rg_rf_board_52_EN;

  // register rg_rf_board_53
  reg [4 : 0] rg_rf_board_53;
  wire [4 : 0] rg_rf_board_53_D_IN;
  wire rg_rf_board_53_EN;

  // register rg_rf_board_54
  reg [4 : 0] rg_rf_board_54;
  wire [4 : 0] rg_rf_board_54_D_IN;
  wire rg_rf_board_54_EN;

  // register rg_rf_board_55
  reg [4 : 0] rg_rf_board_55;
  wire [4 : 0] rg_rf_board_55_D_IN;
  wire rg_rf_board_55_EN;

  // register rg_rf_board_56
  reg [4 : 0] rg_rf_board_56;
  wire [4 : 0] rg_rf_board_56_D_IN;
  wire rg_rf_board_56_EN;

  // register rg_rf_board_57
  reg [4 : 0] rg_rf_board_57;
  wire [4 : 0] rg_rf_board_57_D_IN;
  wire rg_rf_board_57_EN;

  // register rg_rf_board_58
  reg [4 : 0] rg_rf_board_58;
  wire [4 : 0] rg_rf_board_58_D_IN;
  wire rg_rf_board_58_EN;

  // register rg_rf_board_59
  reg [4 : 0] rg_rf_board_59;
  wire [4 : 0] rg_rf_board_59_D_IN;
  wire rg_rf_board_59_EN;

  // register rg_rf_board_6
  reg [4 : 0] rg_rf_board_6;
  wire [4 : 0] rg_rf_board_6_D_IN;
  wire rg_rf_board_6_EN;

  // register rg_rf_board_60
  reg [4 : 0] rg_rf_board_60;
  wire [4 : 0] rg_rf_board_60_D_IN;
  wire rg_rf_board_60_EN;

  // register rg_rf_board_61
  reg [4 : 0] rg_rf_board_61;
  wire [4 : 0] rg_rf_board_61_D_IN;
  wire rg_rf_board_61_EN;

  // register rg_rf_board_62
  reg [4 : 0] rg_rf_board_62;
  wire [4 : 0] rg_rf_board_62_D_IN;
  wire rg_rf_board_62_EN;

  // register rg_rf_board_63
  reg [4 : 0] rg_rf_board_63;
  wire [4 : 0] rg_rf_board_63_D_IN;
  wire rg_rf_board_63_EN;

  // register rg_rf_board_7
  reg [4 : 0] rg_rf_board_7;
  wire [4 : 0] rg_rf_board_7_D_IN;
  wire rg_rf_board_7_EN;

  // register rg_rf_board_8
  reg [4 : 0] rg_rf_board_8;
  wire [4 : 0] rg_rf_board_8_D_IN;
  wire rg_rf_board_8_EN;

  // register rg_rf_board_9
  reg [4 : 0] rg_rf_board_9;
  wire [4 : 0] rg_rf_board_9_D_IN;
  wire rg_rf_board_9_EN;

  // rule scheduling signals
  wire CAN_FIRE_ma_lock_rd,
       CAN_FIRE_ma_release_rd,
       WILL_FIRE_ma_lock_rd,
       WILL_FIRE_ma_release_rd;

  // remaining internal signals
  reg [3 : 0] SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198;
  reg SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267;

  // actionvalue method ma_lock_rd
  assign ma_lock_rd = rg_renameid ;
  assign RDY_ma_lock_rd = 1'd1 ;
  assign CAN_FIRE_ma_lock_rd = 1'd1 ;
  assign WILL_FIRE_ma_lock_rd = EN_ma_lock_rd ;

  // action method ma_release_rd
  assign RDY_ma_release_rd = 1'd1 ;
  assign CAN_FIRE_ma_release_rd = 1'd1 ;
  assign WILL_FIRE_ma_release_rd = EN_ma_release_rd ;

  // value method mv_board
  assign mv_board =
	     { rg_rf_board_63[0],
	       rg_rf_board_62[0],
	       rg_rf_board_61[0],
	       rg_rf_board_60[0],
	       rg_rf_board_59[0],
	       rg_rf_board_58[0],
	       rg_rf_board_57[0],
	       rg_rf_board_56[0],
	       rg_rf_board_55[0],
	       rg_rf_board_54[0],
	       rg_rf_board_53[0],
	       rg_rf_board_52[0],
	       rg_rf_board_51[0],
	       rg_rf_board_50[0],
	       rg_rf_board_49[0],
	       rg_rf_board_48[0],
	       rg_rf_board_47[0],
	       rg_rf_board_46[0],
	       rg_rf_board_45[0],
	       rg_rf_board_44[0],
	       rg_rf_board_43[0],
	       rg_rf_board_42[0],
	       rg_rf_board_41[0],
	       rg_rf_board_40[0],
	       rg_rf_board_39[0],
	       rg_rf_board_38[0],
	       rg_rf_board_37[0],
	       rg_rf_board_36[0],
	       rg_rf_board_35[0],
	       rg_rf_board_34[0],
	       rg_rf_board_33[0],
	       rg_rf_board_32[0],
	       rg_rf_board_31[0],
	       rg_rf_board_30[0],
	       rg_rf_board_29[0],
	       rg_rf_board_28[0],
	       rg_rf_board_27[0],
	       rg_rf_board_26[0],
	       rg_rf_board_25[0],
	       rg_rf_board_24[0],
	       rg_rf_board_23[0],
	       rg_rf_board_22[0],
	       rg_rf_board_21[0],
	       rg_rf_board_20[0],
	       rg_rf_board_19[0],
	       rg_rf_board_18[0],
	       rg_rf_board_17[0],
	       rg_rf_board_16[0],
	       rg_rf_board_15[0],
	       rg_rf_board_14[0],
	       rg_rf_board_13[0],
	       rg_rf_board_12[0],
	       rg_rf_board_11[0],
	       rg_rf_board_10[0],
	       rg_rf_board_9[0],
	       rg_rf_board_8[0],
	       rg_rf_board_7[0],
	       rg_rf_board_6[0],
	       rg_rf_board_5[0],
	       rg_rf_board_4[0],
	       rg_rf_board_3[0],
	       rg_rf_board_2[0],
	       rg_rf_board_1[0],
	       rg_rf_board_0[0],
	       rg_rf_board_63[4:1],
	       rg_rf_board_62[4:1],
	       rg_rf_board_61[4:1],
	       rg_rf_board_60[4:1],
	       rg_rf_board_59[4:1],
	       rg_rf_board_58[4:1],
	       rg_rf_board_57[4:1],
	       rg_rf_board_56[4:1],
	       rg_rf_board_55[4:1],
	       rg_rf_board_54[4:1],
	       rg_rf_board_53[4:1],
	       rg_rf_board_52[4:1],
	       rg_rf_board_51[4:1],
	       rg_rf_board_50[4:1],
	       rg_rf_board_49[4:1],
	       rg_rf_board_48[4:1],
	       rg_rf_board_47[4:1],
	       rg_rf_board_46[4:1],
	       rg_rf_board_45[4:1],
	       rg_rf_board_44[4:1],
	       rg_rf_board_43[4:1],
	       rg_rf_board_42[4:1],
	       rg_rf_board_41[4:1],
	       rg_rf_board_40[4:1],
	       rg_rf_board_39[4:1],
	       rg_rf_board_38[4:1],
	       rg_rf_board_37[4:1],
	       rg_rf_board_36[4:1],
	       rg_rf_board_35[4:1],
	       rg_rf_board_34[4:1],
	       rg_rf_board_33[4:1],
	       rg_rf_board_32[4:1],
	       rg_rf_board_31[4:1],
	       rg_rf_board_30[4:1],
	       rg_rf_board_29[4:1],
	       rg_rf_board_28[4:1],
	       rg_rf_board_27[4:1],
	       rg_rf_board_26[4:1],
	       rg_rf_board_25[4:1],
	       rg_rf_board_24[4:1],
	       rg_rf_board_23[4:1],
	       rg_rf_board_22[4:1],
	       rg_rf_board_21[4:1],
	       rg_rf_board_20[4:1],
	       rg_rf_board_19[4:1],
	       rg_rf_board_18[4:1],
	       rg_rf_board_17[4:1],
	       rg_rf_board_16[4:1],
	       rg_rf_board_15[4:1],
	       rg_rf_board_14[4:1],
	       rg_rf_board_13[4:1],
	       rg_rf_board_12[4:1],
	       rg_rf_board_11[4:1],
	       rg_rf_board_10[4:1],
	       rg_rf_board_9[4:1],
	       rg_rf_board_8[4:1],
	       rg_rf_board_7[4:1],
	       rg_rf_board_6[4:1],
	       rg_rf_board_5[4:1],
	       rg_rf_board_4[4:1],
	       rg_rf_board_3[4:1],
	       rg_rf_board_2[4:1],
	       rg_rf_board_1[4:1],
	       rg_rf_board_0[4:1] } ;
  assign RDY_mv_board = 1'd1 ;

  // inlined wires
  assign rg_rf_board_0_port0__write_1 = { rg_renameid, 1'd1 } ;
  assign rg_rf_board_0_port1__write_1 =
	     { SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198,
	       ma_release_rd_rls[9:6] !=
	       SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 &&
	       SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 } ;
  assign rg_rf_board_1_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd1 ;
  assign rg_rf_board_1_port1__read =
	     rg_rf_board_1_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_1 ;
  assign rg_rf_board_1_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd1 ;
  assign rg_rf_board_1_port2__read =
	     rg_rf_board_1_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_1_port1__read ;
  assign rg_rf_board_2_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd2 ;
  assign rg_rf_board_2_port1__read =
	     rg_rf_board_2_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_2 ;
  assign rg_rf_board_2_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd2 ;
  assign rg_rf_board_2_port2__read =
	     rg_rf_board_2_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_2_port1__read ;
  assign rg_rf_board_3_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd3 ;
  assign rg_rf_board_3_port1__read =
	     rg_rf_board_3_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_3 ;
  assign rg_rf_board_3_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd3 ;
  assign rg_rf_board_3_port2__read =
	     rg_rf_board_3_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_3_port1__read ;
  assign rg_rf_board_4_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd4 ;
  assign rg_rf_board_4_port1__read =
	     rg_rf_board_4_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_4 ;
  assign rg_rf_board_4_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd4 ;
  assign rg_rf_board_4_port2__read =
	     rg_rf_board_4_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_4_port1__read ;
  assign rg_rf_board_5_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd5 ;
  assign rg_rf_board_5_port1__read =
	     rg_rf_board_5_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_5 ;
  assign rg_rf_board_5_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd5 ;
  assign rg_rf_board_5_port2__read =
	     rg_rf_board_5_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_5_port1__read ;
  assign rg_rf_board_6_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd6 ;
  assign rg_rf_board_6_port1__read =
	     rg_rf_board_6_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_6 ;
  assign rg_rf_board_6_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd6 ;
  assign rg_rf_board_6_port2__read =
	     rg_rf_board_6_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_6_port1__read ;
  assign rg_rf_board_7_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd7 ;
  assign rg_rf_board_7_port1__read =
	     rg_rf_board_7_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_7 ;
  assign rg_rf_board_7_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd7 ;
  assign rg_rf_board_7_port2__read =
	     rg_rf_board_7_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_7_port1__read ;
  assign rg_rf_board_8_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd8 ;
  assign rg_rf_board_8_port1__read =
	     rg_rf_board_8_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_8 ;
  assign rg_rf_board_8_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd8 ;
  assign rg_rf_board_8_port2__read =
	     rg_rf_board_8_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_8_port1__read ;
  assign rg_rf_board_9_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd9 ;
  assign rg_rf_board_9_port1__read =
	     rg_rf_board_9_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_9 ;
  assign rg_rf_board_9_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd9 ;
  assign rg_rf_board_9_port2__read =
	     rg_rf_board_9_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_9_port1__read ;
  assign rg_rf_board_10_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd10 ;
  assign rg_rf_board_10_port1__read =
	     rg_rf_board_10_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_10 ;
  assign rg_rf_board_10_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd10 ;
  assign rg_rf_board_10_port2__read =
	     rg_rf_board_10_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_10_port1__read ;
  assign rg_rf_board_11_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd11 ;
  assign rg_rf_board_11_port1__read =
	     rg_rf_board_11_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_11 ;
  assign rg_rf_board_11_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd11 ;
  assign rg_rf_board_11_port2__read =
	     rg_rf_board_11_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_11_port1__read ;
  assign rg_rf_board_12_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd12 ;
  assign rg_rf_board_12_port1__read =
	     rg_rf_board_12_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_12 ;
  assign rg_rf_board_12_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd12 ;
  assign rg_rf_board_12_port2__read =
	     rg_rf_board_12_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_12_port1__read ;
  assign rg_rf_board_13_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd13 ;
  assign rg_rf_board_13_port1__read =
	     rg_rf_board_13_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_13 ;
  assign rg_rf_board_13_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd13 ;
  assign rg_rf_board_13_port2__read =
	     rg_rf_board_13_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_13_port1__read ;
  assign rg_rf_board_14_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd14 ;
  assign rg_rf_board_14_port1__read =
	     rg_rf_board_14_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_14 ;
  assign rg_rf_board_14_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd14 ;
  assign rg_rf_board_14_port2__read =
	     rg_rf_board_14_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_14_port1__read ;
  assign rg_rf_board_15_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd15 ;
  assign rg_rf_board_15_port1__read =
	     rg_rf_board_15_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_15 ;
  assign rg_rf_board_15_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd15 ;
  assign rg_rf_board_15_port2__read =
	     rg_rf_board_15_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_15_port1__read ;
  assign rg_rf_board_16_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd16 ;
  assign rg_rf_board_16_port1__read =
	     rg_rf_board_16_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_16 ;
  assign rg_rf_board_16_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd16 ;
  assign rg_rf_board_16_port2__read =
	     rg_rf_board_16_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_16_port1__read ;
  assign rg_rf_board_17_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd17 ;
  assign rg_rf_board_17_port1__read =
	     rg_rf_board_17_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_17 ;
  assign rg_rf_board_17_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd17 ;
  assign rg_rf_board_17_port2__read =
	     rg_rf_board_17_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_17_port1__read ;
  assign rg_rf_board_18_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd18 ;
  assign rg_rf_board_18_port1__read =
	     rg_rf_board_18_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_18 ;
  assign rg_rf_board_18_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd18 ;
  assign rg_rf_board_18_port2__read =
	     rg_rf_board_18_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_18_port1__read ;
  assign rg_rf_board_19_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd19 ;
  assign rg_rf_board_19_port1__read =
	     rg_rf_board_19_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_19 ;
  assign rg_rf_board_19_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd19 ;
  assign rg_rf_board_19_port2__read =
	     rg_rf_board_19_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_19_port1__read ;
  assign rg_rf_board_20_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd20 ;
  assign rg_rf_board_20_port1__read =
	     rg_rf_board_20_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_20 ;
  assign rg_rf_board_20_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd20 ;
  assign rg_rf_board_20_port2__read =
	     rg_rf_board_20_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_20_port1__read ;
  assign rg_rf_board_21_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd21 ;
  assign rg_rf_board_21_port1__read =
	     rg_rf_board_21_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_21 ;
  assign rg_rf_board_21_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd21 ;
  assign rg_rf_board_21_port2__read =
	     rg_rf_board_21_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_21_port1__read ;
  assign rg_rf_board_22_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd22 ;
  assign rg_rf_board_22_port1__read =
	     rg_rf_board_22_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_22 ;
  assign rg_rf_board_22_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd22 ;
  assign rg_rf_board_22_port2__read =
	     rg_rf_board_22_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_22_port1__read ;
  assign rg_rf_board_23_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd23 ;
  assign rg_rf_board_23_port1__read =
	     rg_rf_board_23_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_23 ;
  assign rg_rf_board_23_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd23 ;
  assign rg_rf_board_23_port2__read =
	     rg_rf_board_23_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_23_port1__read ;
  assign rg_rf_board_24_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd24 ;
  assign rg_rf_board_24_port1__read =
	     rg_rf_board_24_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_24 ;
  assign rg_rf_board_24_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd24 ;
  assign rg_rf_board_24_port2__read =
	     rg_rf_board_24_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_24_port1__read ;
  assign rg_rf_board_25_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd25 ;
  assign rg_rf_board_25_port1__read =
	     rg_rf_board_25_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_25 ;
  assign rg_rf_board_25_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd25 ;
  assign rg_rf_board_25_port2__read =
	     rg_rf_board_25_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_25_port1__read ;
  assign rg_rf_board_26_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd26 ;
  assign rg_rf_board_26_port1__read =
	     rg_rf_board_26_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_26 ;
  assign rg_rf_board_26_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd26 ;
  assign rg_rf_board_26_port2__read =
	     rg_rf_board_26_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_26_port1__read ;
  assign rg_rf_board_27_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd27 ;
  assign rg_rf_board_27_port1__read =
	     rg_rf_board_27_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_27 ;
  assign rg_rf_board_27_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd27 ;
  assign rg_rf_board_27_port2__read =
	     rg_rf_board_27_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_27_port1__read ;
  assign rg_rf_board_28_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd28 ;
  assign rg_rf_board_28_port1__read =
	     rg_rf_board_28_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_28 ;
  assign rg_rf_board_28_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd28 ;
  assign rg_rf_board_28_port2__read =
	     rg_rf_board_28_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_28_port1__read ;
  assign rg_rf_board_29_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd29 ;
  assign rg_rf_board_29_port1__read =
	     rg_rf_board_29_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_29 ;
  assign rg_rf_board_29_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd29 ;
  assign rg_rf_board_29_port2__read =
	     rg_rf_board_29_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_29_port1__read ;
  assign rg_rf_board_30_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd30 ;
  assign rg_rf_board_30_port1__read =
	     rg_rf_board_30_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_30 ;
  assign rg_rf_board_30_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd30 ;
  assign rg_rf_board_30_port2__read =
	     rg_rf_board_30_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_30_port1__read ;
  assign rg_rf_board_31_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd31 ;
  assign rg_rf_board_31_port1__read =
	     rg_rf_board_31_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_31 ;
  assign rg_rf_board_31_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd31 ;
  assign rg_rf_board_31_port2__read =
	     rg_rf_board_31_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_31_port1__read ;
  assign rg_rf_board_32_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd32 ;
  assign rg_rf_board_32_port1__read =
	     rg_rf_board_32_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_32 ;
  assign rg_rf_board_32_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd32 ;
  assign rg_rf_board_32_port2__read =
	     rg_rf_board_32_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_32_port1__read ;
  assign rg_rf_board_33_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd33 ;
  assign rg_rf_board_33_port1__read =
	     rg_rf_board_33_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_33 ;
  assign rg_rf_board_33_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd33 ;
  assign rg_rf_board_33_port2__read =
	     rg_rf_board_33_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_33_port1__read ;
  assign rg_rf_board_34_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd34 ;
  assign rg_rf_board_34_port1__read =
	     rg_rf_board_34_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_34 ;
  assign rg_rf_board_34_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd34 ;
  assign rg_rf_board_34_port2__read =
	     rg_rf_board_34_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_34_port1__read ;
  assign rg_rf_board_35_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd35 ;
  assign rg_rf_board_35_port1__read =
	     rg_rf_board_35_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_35 ;
  assign rg_rf_board_35_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd35 ;
  assign rg_rf_board_35_port2__read =
	     rg_rf_board_35_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_35_port1__read ;
  assign rg_rf_board_36_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd36 ;
  assign rg_rf_board_36_port1__read =
	     rg_rf_board_36_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_36 ;
  assign rg_rf_board_36_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd36 ;
  assign rg_rf_board_36_port2__read =
	     rg_rf_board_36_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_36_port1__read ;
  assign rg_rf_board_37_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd37 ;
  assign rg_rf_board_37_port1__read =
	     rg_rf_board_37_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_37 ;
  assign rg_rf_board_37_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd37 ;
  assign rg_rf_board_37_port2__read =
	     rg_rf_board_37_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_37_port1__read ;
  assign rg_rf_board_38_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd38 ;
  assign rg_rf_board_38_port1__read =
	     rg_rf_board_38_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_38 ;
  assign rg_rf_board_38_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd38 ;
  assign rg_rf_board_38_port2__read =
	     rg_rf_board_38_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_38_port1__read ;
  assign rg_rf_board_39_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd39 ;
  assign rg_rf_board_39_port1__read =
	     rg_rf_board_39_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_39 ;
  assign rg_rf_board_39_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd39 ;
  assign rg_rf_board_39_port2__read =
	     rg_rf_board_39_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_39_port1__read ;
  assign rg_rf_board_40_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd40 ;
  assign rg_rf_board_40_port1__read =
	     rg_rf_board_40_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_40 ;
  assign rg_rf_board_40_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd40 ;
  assign rg_rf_board_40_port2__read =
	     rg_rf_board_40_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_40_port1__read ;
  assign rg_rf_board_41_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd41 ;
  assign rg_rf_board_41_port1__read =
	     rg_rf_board_41_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_41 ;
  assign rg_rf_board_41_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd41 ;
  assign rg_rf_board_41_port2__read =
	     rg_rf_board_41_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_41_port1__read ;
  assign rg_rf_board_42_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd42 ;
  assign rg_rf_board_42_port1__read =
	     rg_rf_board_42_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_42 ;
  assign rg_rf_board_42_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd42 ;
  assign rg_rf_board_42_port2__read =
	     rg_rf_board_42_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_42_port1__read ;
  assign rg_rf_board_43_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd43 ;
  assign rg_rf_board_43_port1__read =
	     rg_rf_board_43_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_43 ;
  assign rg_rf_board_43_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd43 ;
  assign rg_rf_board_43_port2__read =
	     rg_rf_board_43_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_43_port1__read ;
  assign rg_rf_board_44_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd44 ;
  assign rg_rf_board_44_port1__read =
	     rg_rf_board_44_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_44 ;
  assign rg_rf_board_44_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd44 ;
  assign rg_rf_board_44_port2__read =
	     rg_rf_board_44_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_44_port1__read ;
  assign rg_rf_board_45_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd45 ;
  assign rg_rf_board_45_port1__read =
	     rg_rf_board_45_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_45 ;
  assign rg_rf_board_45_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd45 ;
  assign rg_rf_board_45_port2__read =
	     rg_rf_board_45_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_45_port1__read ;
  assign rg_rf_board_46_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd46 ;
  assign rg_rf_board_46_port1__read =
	     rg_rf_board_46_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_46 ;
  assign rg_rf_board_46_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd46 ;
  assign rg_rf_board_46_port2__read =
	     rg_rf_board_46_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_46_port1__read ;
  assign rg_rf_board_47_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd47 ;
  assign rg_rf_board_47_port1__read =
	     rg_rf_board_47_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_47 ;
  assign rg_rf_board_47_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd47 ;
  assign rg_rf_board_47_port2__read =
	     rg_rf_board_47_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_47_port1__read ;
  assign rg_rf_board_48_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd48 ;
  assign rg_rf_board_48_port1__read =
	     rg_rf_board_48_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_48 ;
  assign rg_rf_board_48_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd48 ;
  assign rg_rf_board_48_port2__read =
	     rg_rf_board_48_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_48_port1__read ;
  assign rg_rf_board_49_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd49 ;
  assign rg_rf_board_49_port1__read =
	     rg_rf_board_49_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_49 ;
  assign rg_rf_board_49_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd49 ;
  assign rg_rf_board_49_port2__read =
	     rg_rf_board_49_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_49_port1__read ;
  assign rg_rf_board_50_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd50 ;
  assign rg_rf_board_50_port1__read =
	     rg_rf_board_50_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_50 ;
  assign rg_rf_board_50_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd50 ;
  assign rg_rf_board_50_port2__read =
	     rg_rf_board_50_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_50_port1__read ;
  assign rg_rf_board_51_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd51 ;
  assign rg_rf_board_51_port1__read =
	     rg_rf_board_51_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_51 ;
  assign rg_rf_board_51_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd51 ;
  assign rg_rf_board_51_port2__read =
	     rg_rf_board_51_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_51_port1__read ;
  assign rg_rf_board_52_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd52 ;
  assign rg_rf_board_52_port1__read =
	     rg_rf_board_52_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_52 ;
  assign rg_rf_board_52_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd52 ;
  assign rg_rf_board_52_port2__read =
	     rg_rf_board_52_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_52_port1__read ;
  assign rg_rf_board_53_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd53 ;
  assign rg_rf_board_53_port1__read =
	     rg_rf_board_53_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_53 ;
  assign rg_rf_board_53_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd53 ;
  assign rg_rf_board_53_port2__read =
	     rg_rf_board_53_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_53_port1__read ;
  assign rg_rf_board_54_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd54 ;
  assign rg_rf_board_54_port1__read =
	     rg_rf_board_54_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_54 ;
  assign rg_rf_board_54_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd54 ;
  assign rg_rf_board_54_port2__read =
	     rg_rf_board_54_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_54_port1__read ;
  assign rg_rf_board_55_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd55 ;
  assign rg_rf_board_55_port1__read =
	     rg_rf_board_55_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_55 ;
  assign rg_rf_board_55_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd55 ;
  assign rg_rf_board_55_port2__read =
	     rg_rf_board_55_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_55_port1__read ;
  assign rg_rf_board_56_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd56 ;
  assign rg_rf_board_56_port1__read =
	     rg_rf_board_56_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_56 ;
  assign rg_rf_board_56_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd56 ;
  assign rg_rf_board_56_port2__read =
	     rg_rf_board_56_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_56_port1__read ;
  assign rg_rf_board_57_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd57 ;
  assign rg_rf_board_57_port1__read =
	     rg_rf_board_57_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_57 ;
  assign rg_rf_board_57_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd57 ;
  assign rg_rf_board_57_port2__read =
	     rg_rf_board_57_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_57_port1__read ;
  assign rg_rf_board_58_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd58 ;
  assign rg_rf_board_58_port1__read =
	     rg_rf_board_58_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_58 ;
  assign rg_rf_board_58_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd58 ;
  assign rg_rf_board_58_port2__read =
	     rg_rf_board_58_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_58_port1__read ;
  assign rg_rf_board_59_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd59 ;
  assign rg_rf_board_59_port1__read =
	     rg_rf_board_59_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_59 ;
  assign rg_rf_board_59_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd59 ;
  assign rg_rf_board_59_port2__read =
	     rg_rf_board_59_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_59_port1__read ;
  assign rg_rf_board_60_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd60 ;
  assign rg_rf_board_60_port1__read =
	     rg_rf_board_60_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_60 ;
  assign rg_rf_board_60_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd60 ;
  assign rg_rf_board_60_port2__read =
	     rg_rf_board_60_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_60_port1__read ;
  assign rg_rf_board_61_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd61 ;
  assign rg_rf_board_61_port1__read =
	     rg_rf_board_61_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_61 ;
  assign rg_rf_board_61_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd61 ;
  assign rg_rf_board_61_port2__read =
	     rg_rf_board_61_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_61_port1__read ;
  assign rg_rf_board_62_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd62 ;
  assign rg_rf_board_62_port1__read =
	     rg_rf_board_62_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_62 ;
  assign rg_rf_board_62_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd62 ;
  assign rg_rf_board_62_port2__read =
	     rg_rf_board_62_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_62_port1__read ;
  assign rg_rf_board_63_EN_port0__write =
	     EN_ma_lock_rd && ma_lock_rd_lock[5:0] == 6'd63 ;
  assign rg_rf_board_63_port1__read =
	     rg_rf_board_63_EN_port0__write ?
	       rg_rf_board_0_port0__write_1 :
	       rg_rf_board_63 ;
  assign rg_rf_board_63_EN_port1__write =
	     EN_ma_release_rd && ma_release_rd_rls[5:0] == 6'd63 ;
  assign rg_rf_board_63_port2__read =
	     rg_rf_board_63_EN_port1__write ?
	       rg_rf_board_0_port1__write_1 :
	       rg_rf_board_63_port1__read ;

  // register rg_renameid
  assign rg_renameid_D_IN = rg_renameid + 4'd1 ;
  assign rg_renameid_EN = EN_ma_lock_rd ;

  // register rg_rf_board_0
  assign rg_rf_board_0_D_IN = rg_rf_board_0 ;
  assign rg_rf_board_0_EN = 1'b1 ;

  // register rg_rf_board_1
  assign rg_rf_board_1_D_IN = rg_rf_board_1_port2__read ;
  assign rg_rf_board_1_EN = 1'b1 ;

  // register rg_rf_board_10
  assign rg_rf_board_10_D_IN = rg_rf_board_10_port2__read ;
  assign rg_rf_board_10_EN = 1'b1 ;

  // register rg_rf_board_11
  assign rg_rf_board_11_D_IN = rg_rf_board_11_port2__read ;
  assign rg_rf_board_11_EN = 1'b1 ;

  // register rg_rf_board_12
  assign rg_rf_board_12_D_IN = rg_rf_board_12_port2__read ;
  assign rg_rf_board_12_EN = 1'b1 ;

  // register rg_rf_board_13
  assign rg_rf_board_13_D_IN = rg_rf_board_13_port2__read ;
  assign rg_rf_board_13_EN = 1'b1 ;

  // register rg_rf_board_14
  assign rg_rf_board_14_D_IN = rg_rf_board_14_port2__read ;
  assign rg_rf_board_14_EN = 1'b1 ;

  // register rg_rf_board_15
  assign rg_rf_board_15_D_IN = rg_rf_board_15_port2__read ;
  assign rg_rf_board_15_EN = 1'b1 ;

  // register rg_rf_board_16
  assign rg_rf_board_16_D_IN = rg_rf_board_16_port2__read ;
  assign rg_rf_board_16_EN = 1'b1 ;

  // register rg_rf_board_17
  assign rg_rf_board_17_D_IN = rg_rf_board_17_port2__read ;
  assign rg_rf_board_17_EN = 1'b1 ;

  // register rg_rf_board_18
  assign rg_rf_board_18_D_IN = rg_rf_board_18_port2__read ;
  assign rg_rf_board_18_EN = 1'b1 ;

  // register rg_rf_board_19
  assign rg_rf_board_19_D_IN = rg_rf_board_19_port2__read ;
  assign rg_rf_board_19_EN = 1'b1 ;

  // register rg_rf_board_2
  assign rg_rf_board_2_D_IN = rg_rf_board_2_port2__read ;
  assign rg_rf_board_2_EN = 1'b1 ;

  // register rg_rf_board_20
  assign rg_rf_board_20_D_IN = rg_rf_board_20_port2__read ;
  assign rg_rf_board_20_EN = 1'b1 ;

  // register rg_rf_board_21
  assign rg_rf_board_21_D_IN = rg_rf_board_21_port2__read ;
  assign rg_rf_board_21_EN = 1'b1 ;

  // register rg_rf_board_22
  assign rg_rf_board_22_D_IN = rg_rf_board_22_port2__read ;
  assign rg_rf_board_22_EN = 1'b1 ;

  // register rg_rf_board_23
  assign rg_rf_board_23_D_IN = rg_rf_board_23_port2__read ;
  assign rg_rf_board_23_EN = 1'b1 ;

  // register rg_rf_board_24
  assign rg_rf_board_24_D_IN = rg_rf_board_24_port2__read ;
  assign rg_rf_board_24_EN = 1'b1 ;

  // register rg_rf_board_25
  assign rg_rf_board_25_D_IN = rg_rf_board_25_port2__read ;
  assign rg_rf_board_25_EN = 1'b1 ;

  // register rg_rf_board_26
  assign rg_rf_board_26_D_IN = rg_rf_board_26_port2__read ;
  assign rg_rf_board_26_EN = 1'b1 ;

  // register rg_rf_board_27
  assign rg_rf_board_27_D_IN = rg_rf_board_27_port2__read ;
  assign rg_rf_board_27_EN = 1'b1 ;

  // register rg_rf_board_28
  assign rg_rf_board_28_D_IN = rg_rf_board_28_port2__read ;
  assign rg_rf_board_28_EN = 1'b1 ;

  // register rg_rf_board_29
  assign rg_rf_board_29_D_IN = rg_rf_board_29_port2__read ;
  assign rg_rf_board_29_EN = 1'b1 ;

  // register rg_rf_board_3
  assign rg_rf_board_3_D_IN = rg_rf_board_3_port2__read ;
  assign rg_rf_board_3_EN = 1'b1 ;

  // register rg_rf_board_30
  assign rg_rf_board_30_D_IN = rg_rf_board_30_port2__read ;
  assign rg_rf_board_30_EN = 1'b1 ;

  // register rg_rf_board_31
  assign rg_rf_board_31_D_IN = rg_rf_board_31_port2__read ;
  assign rg_rf_board_31_EN = 1'b1 ;

  // register rg_rf_board_32
  assign rg_rf_board_32_D_IN = rg_rf_board_32_port2__read ;
  assign rg_rf_board_32_EN = 1'b1 ;

  // register rg_rf_board_33
  assign rg_rf_board_33_D_IN = rg_rf_board_33_port2__read ;
  assign rg_rf_board_33_EN = 1'b1 ;

  // register rg_rf_board_34
  assign rg_rf_board_34_D_IN = rg_rf_board_34_port2__read ;
  assign rg_rf_board_34_EN = 1'b1 ;

  // register rg_rf_board_35
  assign rg_rf_board_35_D_IN = rg_rf_board_35_port2__read ;
  assign rg_rf_board_35_EN = 1'b1 ;

  // register rg_rf_board_36
  assign rg_rf_board_36_D_IN = rg_rf_board_36_port2__read ;
  assign rg_rf_board_36_EN = 1'b1 ;

  // register rg_rf_board_37
  assign rg_rf_board_37_D_IN = rg_rf_board_37_port2__read ;
  assign rg_rf_board_37_EN = 1'b1 ;

  // register rg_rf_board_38
  assign rg_rf_board_38_D_IN = rg_rf_board_38_port2__read ;
  assign rg_rf_board_38_EN = 1'b1 ;

  // register rg_rf_board_39
  assign rg_rf_board_39_D_IN = rg_rf_board_39_port2__read ;
  assign rg_rf_board_39_EN = 1'b1 ;

  // register rg_rf_board_4
  assign rg_rf_board_4_D_IN = rg_rf_board_4_port2__read ;
  assign rg_rf_board_4_EN = 1'b1 ;

  // register rg_rf_board_40
  assign rg_rf_board_40_D_IN = rg_rf_board_40_port2__read ;
  assign rg_rf_board_40_EN = 1'b1 ;

  // register rg_rf_board_41
  assign rg_rf_board_41_D_IN = rg_rf_board_41_port2__read ;
  assign rg_rf_board_41_EN = 1'b1 ;

  // register rg_rf_board_42
  assign rg_rf_board_42_D_IN = rg_rf_board_42_port2__read ;
  assign rg_rf_board_42_EN = 1'b1 ;

  // register rg_rf_board_43
  assign rg_rf_board_43_D_IN = rg_rf_board_43_port2__read ;
  assign rg_rf_board_43_EN = 1'b1 ;

  // register rg_rf_board_44
  assign rg_rf_board_44_D_IN = rg_rf_board_44_port2__read ;
  assign rg_rf_board_44_EN = 1'b1 ;

  // register rg_rf_board_45
  assign rg_rf_board_45_D_IN = rg_rf_board_45_port2__read ;
  assign rg_rf_board_45_EN = 1'b1 ;

  // register rg_rf_board_46
  assign rg_rf_board_46_D_IN = rg_rf_board_46_port2__read ;
  assign rg_rf_board_46_EN = 1'b1 ;

  // register rg_rf_board_47
  assign rg_rf_board_47_D_IN = rg_rf_board_47_port2__read ;
  assign rg_rf_board_47_EN = 1'b1 ;

  // register rg_rf_board_48
  assign rg_rf_board_48_D_IN = rg_rf_board_48_port2__read ;
  assign rg_rf_board_48_EN = 1'b1 ;

  // register rg_rf_board_49
  assign rg_rf_board_49_D_IN = rg_rf_board_49_port2__read ;
  assign rg_rf_board_49_EN = 1'b1 ;

  // register rg_rf_board_5
  assign rg_rf_board_5_D_IN = rg_rf_board_5_port2__read ;
  assign rg_rf_board_5_EN = 1'b1 ;

  // register rg_rf_board_50
  assign rg_rf_board_50_D_IN = rg_rf_board_50_port2__read ;
  assign rg_rf_board_50_EN = 1'b1 ;

  // register rg_rf_board_51
  assign rg_rf_board_51_D_IN = rg_rf_board_51_port2__read ;
  assign rg_rf_board_51_EN = 1'b1 ;

  // register rg_rf_board_52
  assign rg_rf_board_52_D_IN = rg_rf_board_52_port2__read ;
  assign rg_rf_board_52_EN = 1'b1 ;

  // register rg_rf_board_53
  assign rg_rf_board_53_D_IN = rg_rf_board_53_port2__read ;
  assign rg_rf_board_53_EN = 1'b1 ;

  // register rg_rf_board_54
  assign rg_rf_board_54_D_IN = rg_rf_board_54_port2__read ;
  assign rg_rf_board_54_EN = 1'b1 ;

  // register rg_rf_board_55
  assign rg_rf_board_55_D_IN = rg_rf_board_55_port2__read ;
  assign rg_rf_board_55_EN = 1'b1 ;

  // register rg_rf_board_56
  assign rg_rf_board_56_D_IN = rg_rf_board_56_port2__read ;
  assign rg_rf_board_56_EN = 1'b1 ;

  // register rg_rf_board_57
  assign rg_rf_board_57_D_IN = rg_rf_board_57_port2__read ;
  assign rg_rf_board_57_EN = 1'b1 ;

  // register rg_rf_board_58
  assign rg_rf_board_58_D_IN = rg_rf_board_58_port2__read ;
  assign rg_rf_board_58_EN = 1'b1 ;

  // register rg_rf_board_59
  assign rg_rf_board_59_D_IN = rg_rf_board_59_port2__read ;
  assign rg_rf_board_59_EN = 1'b1 ;

  // register rg_rf_board_6
  assign rg_rf_board_6_D_IN = rg_rf_board_6_port2__read ;
  assign rg_rf_board_6_EN = 1'b1 ;

  // register rg_rf_board_60
  assign rg_rf_board_60_D_IN = rg_rf_board_60_port2__read ;
  assign rg_rf_board_60_EN = 1'b1 ;

  // register rg_rf_board_61
  assign rg_rf_board_61_D_IN = rg_rf_board_61_port2__read ;
  assign rg_rf_board_61_EN = 1'b1 ;

  // register rg_rf_board_62
  assign rg_rf_board_62_D_IN = rg_rf_board_62_port2__read ;
  assign rg_rf_board_62_EN = 1'b1 ;

  // register rg_rf_board_63
  assign rg_rf_board_63_D_IN = rg_rf_board_63_port2__read ;
  assign rg_rf_board_63_EN = 1'b1 ;

  // register rg_rf_board_7
  assign rg_rf_board_7_D_IN = rg_rf_board_7_port2__read ;
  assign rg_rf_board_7_EN = 1'b1 ;

  // register rg_rf_board_8
  assign rg_rf_board_8_D_IN = rg_rf_board_8_port2__read ;
  assign rg_rf_board_8_EN = 1'b1 ;

  // register rg_rf_board_9
  assign rg_rf_board_9_D_IN = rg_rf_board_9_port2__read ;
  assign rg_rf_board_9_EN = 1'b1 ;

  // remaining internal signals
  always@(ma_release_rd_rls or
	  rg_rf_board_0 or
	  rg_rf_board_1_port1__read or
	  rg_rf_board_2_port1__read or
	  rg_rf_board_3_port1__read or
	  rg_rf_board_4_port1__read or
	  rg_rf_board_5_port1__read or
	  rg_rf_board_6_port1__read or
	  rg_rf_board_7_port1__read or
	  rg_rf_board_8_port1__read or
	  rg_rf_board_9_port1__read or
	  rg_rf_board_10_port1__read or
	  rg_rf_board_11_port1__read or
	  rg_rf_board_12_port1__read or
	  rg_rf_board_13_port1__read or
	  rg_rf_board_14_port1__read or
	  rg_rf_board_15_port1__read or
	  rg_rf_board_16_port1__read or
	  rg_rf_board_17_port1__read or
	  rg_rf_board_18_port1__read or
	  rg_rf_board_19_port1__read or
	  rg_rf_board_20_port1__read or
	  rg_rf_board_21_port1__read or
	  rg_rf_board_22_port1__read or
	  rg_rf_board_23_port1__read or
	  rg_rf_board_24_port1__read or
	  rg_rf_board_25_port1__read or
	  rg_rf_board_26_port1__read or
	  rg_rf_board_27_port1__read or
	  rg_rf_board_28_port1__read or
	  rg_rf_board_29_port1__read or
	  rg_rf_board_30_port1__read or
	  rg_rf_board_31_port1__read or
	  rg_rf_board_32_port1__read or
	  rg_rf_board_33_port1__read or
	  rg_rf_board_34_port1__read or
	  rg_rf_board_35_port1__read or
	  rg_rf_board_36_port1__read or
	  rg_rf_board_37_port1__read or
	  rg_rf_board_38_port1__read or
	  rg_rf_board_39_port1__read or
	  rg_rf_board_40_port1__read or
	  rg_rf_board_41_port1__read or
	  rg_rf_board_42_port1__read or
	  rg_rf_board_43_port1__read or
	  rg_rf_board_44_port1__read or
	  rg_rf_board_45_port1__read or
	  rg_rf_board_46_port1__read or
	  rg_rf_board_47_port1__read or
	  rg_rf_board_48_port1__read or
	  rg_rf_board_49_port1__read or
	  rg_rf_board_50_port1__read or
	  rg_rf_board_51_port1__read or
	  rg_rf_board_52_port1__read or
	  rg_rf_board_53_port1__read or
	  rg_rf_board_54_port1__read or
	  rg_rf_board_55_port1__read or
	  rg_rf_board_56_port1__read or
	  rg_rf_board_57_port1__read or
	  rg_rf_board_58_port1__read or
	  rg_rf_board_59_port1__read or
	  rg_rf_board_60_port1__read or
	  rg_rf_board_61_port1__read or
	  rg_rf_board_62_port1__read or rg_rf_board_63_port1__read)
  begin
    case (ma_release_rd_rls[5:0])
      6'd0:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_0[4:1];
      6'd1:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_1_port1__read[4:1];
      6'd2:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_2_port1__read[4:1];
      6'd3:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_3_port1__read[4:1];
      6'd4:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_4_port1__read[4:1];
      6'd5:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_5_port1__read[4:1];
      6'd6:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_6_port1__read[4:1];
      6'd7:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_7_port1__read[4:1];
      6'd8:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_8_port1__read[4:1];
      6'd9:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_9_port1__read[4:1];
      6'd10:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_10_port1__read[4:1];
      6'd11:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_11_port1__read[4:1];
      6'd12:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_12_port1__read[4:1];
      6'd13:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_13_port1__read[4:1];
      6'd14:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_14_port1__read[4:1];
      6'd15:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_15_port1__read[4:1];
      6'd16:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_16_port1__read[4:1];
      6'd17:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_17_port1__read[4:1];
      6'd18:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_18_port1__read[4:1];
      6'd19:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_19_port1__read[4:1];
      6'd20:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_20_port1__read[4:1];
      6'd21:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_21_port1__read[4:1];
      6'd22:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_22_port1__read[4:1];
      6'd23:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_23_port1__read[4:1];
      6'd24:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_24_port1__read[4:1];
      6'd25:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_25_port1__read[4:1];
      6'd26:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_26_port1__read[4:1];
      6'd27:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_27_port1__read[4:1];
      6'd28:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_28_port1__read[4:1];
      6'd29:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_29_port1__read[4:1];
      6'd30:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_30_port1__read[4:1];
      6'd31:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_31_port1__read[4:1];
      6'd32:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_32_port1__read[4:1];
      6'd33:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_33_port1__read[4:1];
      6'd34:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_34_port1__read[4:1];
      6'd35:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_35_port1__read[4:1];
      6'd36:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_36_port1__read[4:1];
      6'd37:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_37_port1__read[4:1];
      6'd38:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_38_port1__read[4:1];
      6'd39:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_39_port1__read[4:1];
      6'd40:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_40_port1__read[4:1];
      6'd41:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_41_port1__read[4:1];
      6'd42:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_42_port1__read[4:1];
      6'd43:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_43_port1__read[4:1];
      6'd44:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_44_port1__read[4:1];
      6'd45:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_45_port1__read[4:1];
      6'd46:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_46_port1__read[4:1];
      6'd47:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_47_port1__read[4:1];
      6'd48:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_48_port1__read[4:1];
      6'd49:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_49_port1__read[4:1];
      6'd50:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_50_port1__read[4:1];
      6'd51:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_51_port1__read[4:1];
      6'd52:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_52_port1__read[4:1];
      6'd53:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_53_port1__read[4:1];
      6'd54:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_54_port1__read[4:1];
      6'd55:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_55_port1__read[4:1];
      6'd56:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_56_port1__read[4:1];
      6'd57:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_57_port1__read[4:1];
      6'd58:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_58_port1__read[4:1];
      6'd59:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_59_port1__read[4:1];
      6'd60:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_60_port1__read[4:1];
      6'd61:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_61_port1__read[4:1];
      6'd62:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_62_port1__read[4:1];
      6'd63:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BITS_4_TO_ETC___d198 =
	      rg_rf_board_63_port1__read[4:1];
    endcase
  end
  always@(ma_release_rd_rls or
	  rg_rf_board_0 or
	  rg_rf_board_1_port1__read or
	  rg_rf_board_2_port1__read or
	  rg_rf_board_3_port1__read or
	  rg_rf_board_4_port1__read or
	  rg_rf_board_5_port1__read or
	  rg_rf_board_6_port1__read or
	  rg_rf_board_7_port1__read or
	  rg_rf_board_8_port1__read or
	  rg_rf_board_9_port1__read or
	  rg_rf_board_10_port1__read or
	  rg_rf_board_11_port1__read or
	  rg_rf_board_12_port1__read or
	  rg_rf_board_13_port1__read or
	  rg_rf_board_14_port1__read or
	  rg_rf_board_15_port1__read or
	  rg_rf_board_16_port1__read or
	  rg_rf_board_17_port1__read or
	  rg_rf_board_18_port1__read or
	  rg_rf_board_19_port1__read or
	  rg_rf_board_20_port1__read or
	  rg_rf_board_21_port1__read or
	  rg_rf_board_22_port1__read or
	  rg_rf_board_23_port1__read or
	  rg_rf_board_24_port1__read or
	  rg_rf_board_25_port1__read or
	  rg_rf_board_26_port1__read or
	  rg_rf_board_27_port1__read or
	  rg_rf_board_28_port1__read or
	  rg_rf_board_29_port1__read or
	  rg_rf_board_30_port1__read or
	  rg_rf_board_31_port1__read or
	  rg_rf_board_32_port1__read or
	  rg_rf_board_33_port1__read or
	  rg_rf_board_34_port1__read or
	  rg_rf_board_35_port1__read or
	  rg_rf_board_36_port1__read or
	  rg_rf_board_37_port1__read or
	  rg_rf_board_38_port1__read or
	  rg_rf_board_39_port1__read or
	  rg_rf_board_40_port1__read or
	  rg_rf_board_41_port1__read or
	  rg_rf_board_42_port1__read or
	  rg_rf_board_43_port1__read or
	  rg_rf_board_44_port1__read or
	  rg_rf_board_45_port1__read or
	  rg_rf_board_46_port1__read or
	  rg_rf_board_47_port1__read or
	  rg_rf_board_48_port1__read or
	  rg_rf_board_49_port1__read or
	  rg_rf_board_50_port1__read or
	  rg_rf_board_51_port1__read or
	  rg_rf_board_52_port1__read or
	  rg_rf_board_53_port1__read or
	  rg_rf_board_54_port1__read or
	  rg_rf_board_55_port1__read or
	  rg_rf_board_56_port1__read or
	  rg_rf_board_57_port1__read or
	  rg_rf_board_58_port1__read or
	  rg_rf_board_59_port1__read or
	  rg_rf_board_60_port1__read or
	  rg_rf_board_61_port1__read or
	  rg_rf_board_62_port1__read or rg_rf_board_63_port1__read)
  begin
    case (ma_release_rd_rls[5:0])
      6'd0:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_0[0];
      6'd1:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_1_port1__read[0];
      6'd2:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_2_port1__read[0];
      6'd3:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_3_port1__read[0];
      6'd4:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_4_port1__read[0];
      6'd5:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_5_port1__read[0];
      6'd6:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_6_port1__read[0];
      6'd7:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_7_port1__read[0];
      6'd8:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_8_port1__read[0];
      6'd9:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_9_port1__read[0];
      6'd10:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_10_port1__read[0];
      6'd11:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_11_port1__read[0];
      6'd12:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_12_port1__read[0];
      6'd13:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_13_port1__read[0];
      6'd14:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_14_port1__read[0];
      6'd15:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_15_port1__read[0];
      6'd16:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_16_port1__read[0];
      6'd17:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_17_port1__read[0];
      6'd18:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_18_port1__read[0];
      6'd19:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_19_port1__read[0];
      6'd20:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_20_port1__read[0];
      6'd21:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_21_port1__read[0];
      6'd22:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_22_port1__read[0];
      6'd23:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_23_port1__read[0];
      6'd24:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_24_port1__read[0];
      6'd25:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_25_port1__read[0];
      6'd26:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_26_port1__read[0];
      6'd27:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_27_port1__read[0];
      6'd28:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_28_port1__read[0];
      6'd29:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_29_port1__read[0];
      6'd30:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_30_port1__read[0];
      6'd31:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_31_port1__read[0];
      6'd32:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_32_port1__read[0];
      6'd33:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_33_port1__read[0];
      6'd34:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_34_port1__read[0];
      6'd35:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_35_port1__read[0];
      6'd36:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_36_port1__read[0];
      6'd37:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_37_port1__read[0];
      6'd38:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_38_port1__read[0];
      6'd39:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_39_port1__read[0];
      6'd40:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_40_port1__read[0];
      6'd41:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_41_port1__read[0];
      6'd42:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_42_port1__read[0];
      6'd43:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_43_port1__read[0];
      6'd44:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_44_port1__read[0];
      6'd45:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_45_port1__read[0];
      6'd46:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_46_port1__read[0];
      6'd47:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_47_port1__read[0];
      6'd48:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_48_port1__read[0];
      6'd49:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_49_port1__read[0];
      6'd50:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_50_port1__read[0];
      6'd51:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_51_port1__read[0];
      6'd52:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_52_port1__read[0];
      6'd53:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_53_port1__read[0];
      6'd54:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_54_port1__read[0];
      6'd55:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_55_port1__read[0];
      6'd56:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_56_port1__read[0];
      6'd57:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_57_port1__read[0];
      6'd58:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_58_port1__read[0];
      6'd59:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_59_port1__read[0];
      6'd60:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_60_port1__read[0];
      6'd61:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_61_port1__read[0];
      6'd62:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_62_port1__read[0];
      6'd63:
	  SEL_ARR_rg_rf_board_0_port1__read__8_BIT_0_02__ETC___d267 =
	      rg_rf_board_63_port1__read[0];
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        rg_renameid <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_rf_board_0 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_1 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_10 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_11 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_12 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_13 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_14 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_15 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_16 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_17 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_18 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_19 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_2 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_20 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_21 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_22 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_23 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_24 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_25 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_26 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_27 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_28 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_29 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_3 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_30 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_31 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_32 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_33 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_34 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_35 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_36 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_37 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_38 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_39 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_4 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_40 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_41 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_42 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_43 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_44 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_45 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_46 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_47 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_48 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_49 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_5 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_50 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_51 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_52 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_53 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_54 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_55 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_56 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_57 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_58 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_59 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_6 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_60 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_61 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_62 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_63 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_7 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_8 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_rf_board_9 <= `BSV_ASSIGNMENT_DELAY 5'd0;
      end
    else
      begin
        if (rg_renameid_EN)
	  rg_renameid <= `BSV_ASSIGNMENT_DELAY rg_renameid_D_IN;
	if (rg_rf_board_0_EN)
	  rg_rf_board_0 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_0_D_IN;
	if (rg_rf_board_1_EN)
	  rg_rf_board_1 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_1_D_IN;
	if (rg_rf_board_10_EN)
	  rg_rf_board_10 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_10_D_IN;
	if (rg_rf_board_11_EN)
	  rg_rf_board_11 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_11_D_IN;
	if (rg_rf_board_12_EN)
	  rg_rf_board_12 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_12_D_IN;
	if (rg_rf_board_13_EN)
	  rg_rf_board_13 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_13_D_IN;
	if (rg_rf_board_14_EN)
	  rg_rf_board_14 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_14_D_IN;
	if (rg_rf_board_15_EN)
	  rg_rf_board_15 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_15_D_IN;
	if (rg_rf_board_16_EN)
	  rg_rf_board_16 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_16_D_IN;
	if (rg_rf_board_17_EN)
	  rg_rf_board_17 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_17_D_IN;
	if (rg_rf_board_18_EN)
	  rg_rf_board_18 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_18_D_IN;
	if (rg_rf_board_19_EN)
	  rg_rf_board_19 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_19_D_IN;
	if (rg_rf_board_2_EN)
	  rg_rf_board_2 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_2_D_IN;
	if (rg_rf_board_20_EN)
	  rg_rf_board_20 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_20_D_IN;
	if (rg_rf_board_21_EN)
	  rg_rf_board_21 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_21_D_IN;
	if (rg_rf_board_22_EN)
	  rg_rf_board_22 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_22_D_IN;
	if (rg_rf_board_23_EN)
	  rg_rf_board_23 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_23_D_IN;
	if (rg_rf_board_24_EN)
	  rg_rf_board_24 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_24_D_IN;
	if (rg_rf_board_25_EN)
	  rg_rf_board_25 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_25_D_IN;
	if (rg_rf_board_26_EN)
	  rg_rf_board_26 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_26_D_IN;
	if (rg_rf_board_27_EN)
	  rg_rf_board_27 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_27_D_IN;
	if (rg_rf_board_28_EN)
	  rg_rf_board_28 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_28_D_IN;
	if (rg_rf_board_29_EN)
	  rg_rf_board_29 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_29_D_IN;
	if (rg_rf_board_3_EN)
	  rg_rf_board_3 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_3_D_IN;
	if (rg_rf_board_30_EN)
	  rg_rf_board_30 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_30_D_IN;
	if (rg_rf_board_31_EN)
	  rg_rf_board_31 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_31_D_IN;
	if (rg_rf_board_32_EN)
	  rg_rf_board_32 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_32_D_IN;
	if (rg_rf_board_33_EN)
	  rg_rf_board_33 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_33_D_IN;
	if (rg_rf_board_34_EN)
	  rg_rf_board_34 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_34_D_IN;
	if (rg_rf_board_35_EN)
	  rg_rf_board_35 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_35_D_IN;
	if (rg_rf_board_36_EN)
	  rg_rf_board_36 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_36_D_IN;
	if (rg_rf_board_37_EN)
	  rg_rf_board_37 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_37_D_IN;
	if (rg_rf_board_38_EN)
	  rg_rf_board_38 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_38_D_IN;
	if (rg_rf_board_39_EN)
	  rg_rf_board_39 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_39_D_IN;
	if (rg_rf_board_4_EN)
	  rg_rf_board_4 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_4_D_IN;
	if (rg_rf_board_40_EN)
	  rg_rf_board_40 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_40_D_IN;
	if (rg_rf_board_41_EN)
	  rg_rf_board_41 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_41_D_IN;
	if (rg_rf_board_42_EN)
	  rg_rf_board_42 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_42_D_IN;
	if (rg_rf_board_43_EN)
	  rg_rf_board_43 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_43_D_IN;
	if (rg_rf_board_44_EN)
	  rg_rf_board_44 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_44_D_IN;
	if (rg_rf_board_45_EN)
	  rg_rf_board_45 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_45_D_IN;
	if (rg_rf_board_46_EN)
	  rg_rf_board_46 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_46_D_IN;
	if (rg_rf_board_47_EN)
	  rg_rf_board_47 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_47_D_IN;
	if (rg_rf_board_48_EN)
	  rg_rf_board_48 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_48_D_IN;
	if (rg_rf_board_49_EN)
	  rg_rf_board_49 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_49_D_IN;
	if (rg_rf_board_5_EN)
	  rg_rf_board_5 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_5_D_IN;
	if (rg_rf_board_50_EN)
	  rg_rf_board_50 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_50_D_IN;
	if (rg_rf_board_51_EN)
	  rg_rf_board_51 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_51_D_IN;
	if (rg_rf_board_52_EN)
	  rg_rf_board_52 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_52_D_IN;
	if (rg_rf_board_53_EN)
	  rg_rf_board_53 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_53_D_IN;
	if (rg_rf_board_54_EN)
	  rg_rf_board_54 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_54_D_IN;
	if (rg_rf_board_55_EN)
	  rg_rf_board_55 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_55_D_IN;
	if (rg_rf_board_56_EN)
	  rg_rf_board_56 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_56_D_IN;
	if (rg_rf_board_57_EN)
	  rg_rf_board_57 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_57_D_IN;
	if (rg_rf_board_58_EN)
	  rg_rf_board_58 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_58_D_IN;
	if (rg_rf_board_59_EN)
	  rg_rf_board_59 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_59_D_IN;
	if (rg_rf_board_6_EN)
	  rg_rf_board_6 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_6_D_IN;
	if (rg_rf_board_60_EN)
	  rg_rf_board_60 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_60_D_IN;
	if (rg_rf_board_61_EN)
	  rg_rf_board_61 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_61_D_IN;
	if (rg_rf_board_62_EN)
	  rg_rf_board_62 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_62_D_IN;
	if (rg_rf_board_63_EN)
	  rg_rf_board_63 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_63_D_IN;
	if (rg_rf_board_7_EN)
	  rg_rf_board_7 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_7_D_IN;
	if (rg_rf_board_8_EN)
	  rg_rf_board_8 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_8_D_IN;
	if (rg_rf_board_9_EN)
	  rg_rf_board_9 <= `BSV_ASSIGNMENT_DELAY rg_rf_board_9_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    rg_renameid = 4'hA;
    rg_rf_board_0 = 5'h0A;
    rg_rf_board_1 = 5'h0A;
    rg_rf_board_10 = 5'h0A;
    rg_rf_board_11 = 5'h0A;
    rg_rf_board_12 = 5'h0A;
    rg_rf_board_13 = 5'h0A;
    rg_rf_board_14 = 5'h0A;
    rg_rf_board_15 = 5'h0A;
    rg_rf_board_16 = 5'h0A;
    rg_rf_board_17 = 5'h0A;
    rg_rf_board_18 = 5'h0A;
    rg_rf_board_19 = 5'h0A;
    rg_rf_board_2 = 5'h0A;
    rg_rf_board_20 = 5'h0A;
    rg_rf_board_21 = 5'h0A;
    rg_rf_board_22 = 5'h0A;
    rg_rf_board_23 = 5'h0A;
    rg_rf_board_24 = 5'h0A;
    rg_rf_board_25 = 5'h0A;
    rg_rf_board_26 = 5'h0A;
    rg_rf_board_27 = 5'h0A;
    rg_rf_board_28 = 5'h0A;
    rg_rf_board_29 = 5'h0A;
    rg_rf_board_3 = 5'h0A;
    rg_rf_board_30 = 5'h0A;
    rg_rf_board_31 = 5'h0A;
    rg_rf_board_32 = 5'h0A;
    rg_rf_board_33 = 5'h0A;
    rg_rf_board_34 = 5'h0A;
    rg_rf_board_35 = 5'h0A;
    rg_rf_board_36 = 5'h0A;
    rg_rf_board_37 = 5'h0A;
    rg_rf_board_38 = 5'h0A;
    rg_rf_board_39 = 5'h0A;
    rg_rf_board_4 = 5'h0A;
    rg_rf_board_40 = 5'h0A;
    rg_rf_board_41 = 5'h0A;
    rg_rf_board_42 = 5'h0A;
    rg_rf_board_43 = 5'h0A;
    rg_rf_board_44 = 5'h0A;
    rg_rf_board_45 = 5'h0A;
    rg_rf_board_46 = 5'h0A;
    rg_rf_board_47 = 5'h0A;
    rg_rf_board_48 = 5'h0A;
    rg_rf_board_49 = 5'h0A;
    rg_rf_board_5 = 5'h0A;
    rg_rf_board_50 = 5'h0A;
    rg_rf_board_51 = 5'h0A;
    rg_rf_board_52 = 5'h0A;
    rg_rf_board_53 = 5'h0A;
    rg_rf_board_54 = 5'h0A;
    rg_rf_board_55 = 5'h0A;
    rg_rf_board_56 = 5'h0A;
    rg_rf_board_57 = 5'h0A;
    rg_rf_board_58 = 5'h0A;
    rg_rf_board_59 = 5'h0A;
    rg_rf_board_6 = 5'h0A;
    rg_rf_board_60 = 5'h0A;
    rg_rf_board_61 = 5'h0A;
    rg_rf_board_62 = 5'h0A;
    rg_rf_board_63 = 5'h0A;
    rg_rf_board_7 = 5'h0A;
    rg_rf_board_8 = 5'h0A;
    rg_rf_board_9 = 5'h0A;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkscoreboard

