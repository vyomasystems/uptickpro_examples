//
// Generated by Bluespec Compiler, version 2023.07 (build 0eb551dc)
//
// On Tue Jul 29 14:28:07 +04 2025
//
//
// Ports:
// Name                         I/O  size props
// fn_decode_fn                   O     4
// fn_decode_fn_inst              I    32
// fn_decode_fn_csrs              I   242
//
// Combinational paths from inputs to outputs:
//   (fn_decode_fn_inst, fn_decode_fn_csrs) -> fn_decode_fn
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module module_fn_decode_fn(fn_decode_fn_inst,
			   fn_decode_fn_csrs,
			   fn_decode_fn);
  // value method fn_decode_fn
  input  [31 : 0] fn_decode_fn_inst;
  input  [241 : 0] fn_decode_fn_csrs;
  output [3 : 0] fn_decode_fn;

  // signals for module outputs
  wire [3 : 0] fn_decode_fn;

  // remaining internal signals
  reg [3 : 0] CASE_fn_decode_fn_inst_BITS_14_TO_12_0b0_IF_fn_ETC__q1,
	      CASE_fn_decode_fn_inst_BITS_14_TO_12_0b10_0b11_ETC__q2;
  wire [3 : 0] IF_NOT_fn_decode_fn_inst_BIT_31_5_6_AND_fn_dec_ETC___d54,
	       IF_fn_decode_fn_inst_BITS_6_TO_4_1_EQ_0b1_2_AN_ETC___d55,
	       IF_fn_decode_fn_inst_BIT_30_9_THEN_0b1011_ELSE_ETC___d30;
  wire fn_decode_fn_inst_BIT_27_OR_fn_decode_fn_inst__ETC___d8;

  // value method fn_decode_fn
  assign fn_decode_fn =
	     (fn_decode_fn_inst[14:13] == 2'b01 &&
	      fn_decode_fn_inst[6:0] == 7'b0101111) ?
	       { fn_decode_fn_inst_BIT_27_OR_fn_decode_fn_inst__ETC___d8 ?
		   fn_decode_fn_inst[29:27] :
		   fn_decode_fn_inst[31:29],
		 fn_decode_fn_inst_BIT_27_OR_fn_decode_fn_inst__ETC___d8 ||
		 fn_decode_fn_inst[27] } :
	       ((fn_decode_fn_inst[6:0] == 7'b1100011) ?
		  (fn_decode_fn_inst[14] ?
		     { 1'b1, fn_decode_fn_inst[14:12] } :
		     { 3'd1, fn_decode_fn_inst[12] }) :
		  IF_fn_decode_fn_inst_BITS_6_TO_4_1_EQ_0b1_2_AN_ETC___d55) ;

  // remaining internal signals
  assign IF_NOT_fn_decode_fn_inst_BIT_31_5_6_AND_fn_dec_ETC___d54 =
	     (!fn_decode_fn_inst[31] && fn_decode_fn_inst[29:25] == 5'b0 &&
	      fn_decode_fn_inst[6:4] == 3'b011 &&
	      fn_decode_fn_inst[2:0] == 3'b011) ?
	       CASE_fn_decode_fn_inst_BITS_14_TO_12_0b0_IF_fn_ETC__q1 :
	       ((fn_decode_fn_inst[6:5] == 2'b10) ?
		  ((fn_decode_fn_csrs[133] | fn_decode_fn_csrs[131]) ?
		     fn_decode_fn_inst[5:2] :
		     4'd0) :
		  4'd0) ;
  assign IF_fn_decode_fn_inst_BITS_6_TO_4_1_EQ_0b1_2_AN_ETC___d55 =
	     (fn_decode_fn_inst[6:4] == 3'b001 &&
	      fn_decode_fn_inst[2:0] == 3'b011) ?
	       CASE_fn_decode_fn_inst_BITS_14_TO_12_0b10_0b11_ETC__q2 :
	       IF_NOT_fn_decode_fn_inst_BIT_31_5_6_AND_fn_dec_ETC___d54 ;
  assign IF_fn_decode_fn_inst_BIT_30_9_THEN_0b1011_ELSE_ETC___d30 =
	     fn_decode_fn_inst[30] ? 4'b1011 : 4'b0101 ;
  assign fn_decode_fn_inst_BIT_27_OR_fn_decode_fn_inst__ETC___d8 =
	     fn_decode_fn_inst[27] | fn_decode_fn_inst[28] ;
  always@(fn_decode_fn_inst or
	  IF_fn_decode_fn_inst_BIT_30_9_THEN_0b1011_ELSE_ETC___d30)
  begin
    case (fn_decode_fn_inst[14:12])
      3'b0:
	  CASE_fn_decode_fn_inst_BITS_14_TO_12_0b0_IF_fn_ETC__q1 =
	      fn_decode_fn_inst[30] ? 4'b1010 : 4'b0;
      3'b010:
	  CASE_fn_decode_fn_inst_BITS_14_TO_12_0b0_IF_fn_ETC__q1 = 4'b1100;
      3'b011:
	  CASE_fn_decode_fn_inst_BITS_14_TO_12_0b0_IF_fn_ETC__q1 = 4'b1110;
      3'b101:
	  CASE_fn_decode_fn_inst_BITS_14_TO_12_0b0_IF_fn_ETC__q1 =
	      IF_fn_decode_fn_inst_BIT_30_9_THEN_0b1011_ELSE_ETC___d30;
      default: CASE_fn_decode_fn_inst_BITS_14_TO_12_0b0_IF_fn_ETC__q1 =
		   { 1'b0, fn_decode_fn_inst[14:12] };
    endcase
  end
  always@(fn_decode_fn_inst or
	  IF_fn_decode_fn_inst_BIT_30_9_THEN_0b1011_ELSE_ETC___d30)
  begin
    case (fn_decode_fn_inst[14:12])
      3'b010:
	  CASE_fn_decode_fn_inst_BITS_14_TO_12_0b10_0b11_ETC__q2 = 4'b1100;
      3'b011:
	  CASE_fn_decode_fn_inst_BITS_14_TO_12_0b10_0b11_ETC__q2 = 4'b1110;
      3'b101:
	  CASE_fn_decode_fn_inst_BITS_14_TO_12_0b10_0b11_ETC__q2 =
	      IF_fn_decode_fn_inst_BIT_30_9_THEN_0b1011_ELSE_ETC___d30;
      default: CASE_fn_decode_fn_inst_BITS_14_TO_12_0b10_0b11_ETC__q2 =
		   { 1'b0, fn_decode_fn_inst[14:12] };
    endcase
  end
endmodule  // module_fn_decode_fn

