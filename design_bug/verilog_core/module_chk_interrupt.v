//
// Generated by Bluespec Compiler, version 2023.07 (build 0eb551dc)
//
// On Tue Jul 29 14:28:06 +04 2025
//
//
// Ports:
// Name                         I/O  size props
// chk_interrupt                  O     8
// chk_interrupt_prv              I     2
// chk_interrupt_mstatus          I    64
// chk_interrupt_sstatus          I    64
// chk_interrupt_mip              I    17
// chk_interrupt_mie              I    17
// chk_interrupt_mideleg          I    17
// chk_interrupt_debug            I     5
// chk_interrupt_step_done        I     1
//
// Combinational paths from inputs to outputs:
//   (chk_interrupt_prv,
//    chk_interrupt_mstatus,
//    chk_interrupt_sstatus,
//    chk_interrupt_mip,
//    chk_interrupt_mie,
//    chk_interrupt_mideleg,
//    chk_interrupt_debug,
//    chk_interrupt_step_done) -> chk_interrupt
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module module_chk_interrupt(chk_interrupt_prv,
			    chk_interrupt_mstatus,
			    chk_interrupt_sstatus,
			    chk_interrupt_mip,
			    chk_interrupt_mie,
			    chk_interrupt_mideleg,
			    chk_interrupt_debug,
			    chk_interrupt_step_done,
			    chk_interrupt);
  // value method chk_interrupt
  input  [1 : 0] chk_interrupt_prv;
  input  [63 : 0] chk_interrupt_mstatus;
  input  [63 : 0] chk_interrupt_sstatus;
  input  [16 : 0] chk_interrupt_mip;
  input  [16 : 0] chk_interrupt_mie;
  input  [16 : 0] chk_interrupt_mideleg;
  input  [4 : 0] chk_interrupt_debug;
  input  chk_interrupt_step_done;
  output [7 : 0] chk_interrupt;

  // signals for module outputs
  wire [7 : 0] chk_interrupt;

  // remaining internal signals
  wire [16 : 0] d_interrupts__h47,
		m_interrupts__h48,
		pending_interrupts__h50,
		s_interrupts__h49,
		x__h124,
		x__h137,
		x__h139,
		x__h190,
		x__h192,
		x__h255,
		x__h257,
		x__h259,
		y__h138,
		y__h140,
		y__h191,
		y__h193,
		y__h195,
		y__h258;
  wire [6 : 0] x__h30;
  wire [5 : 0] _theResult___fst__h75;
  wire _theResult___snd__h76, x__h168, x__h177, x__h201, x__h268;

  // value method chk_interrupt
  assign chk_interrupt =
	     { x__h30,
	       pending_interrupts__h50 != 17'd0 ||
	       chk_interrupt_step_done && !chk_interrupt_debug[3] } ;

  // remaining internal signals
  assign _theResult___fst__h75 =
	     (chk_interrupt_step_done && !chk_interrupt_debug[3]) ?
	       6'd28 :
	       (pending_interrupts__h50[16] ?
		  6'd16 :
		  (pending_interrupts__h50[11] ?
		     6'd11 :
		     (pending_interrupts__h50[3] ?
			6'd3 :
			(pending_interrupts__h50[7] ?
			   6'd7 :
			   (pending_interrupts__h50[9] ?
			      6'd9 :
			      (pending_interrupts__h50[1] ?
				 6'd1 :
				 (pending_interrupts__h50[5] ?
				    6'd5 :
				    (pending_interrupts__h50[8] ?
				       6'd8 :
				       (pending_interrupts__h50[0] ?
					  6'd0 :
					  (pending_interrupts__h50[4] ?
					     6'd4 :
					     6'd63)))))))))) ;
  assign _theResult___snd__h76 =
	     !chk_interrupt_step_done || chk_interrupt_debug[3] ;
  assign d_interrupts__h47 = x__h137 & y__h138 ;
  assign m_interrupts__h48 = x__h190 & y__h191 ;
  assign pending_interrupts__h50 = x__h124 | s_interrupts__h49 ;
  assign s_interrupts__h49 = x__h255 & y__h191 ;
  assign x__h124 = d_interrupts__h47 | m_interrupts__h48 ;
  assign x__h137 = x__h139 & y__h140 ;
  assign x__h139 = { chk_interrupt_mip[16], 16'd0 } ;
  assign x__h168 = chk_interrupt_debug[4] && chk_interrupt_debug[0] ;
  assign x__h177 = ~chk_interrupt_debug[3] ;
  assign x__h190 = x__h192 & y__h193 ;
  assign x__h192 = x__h259 & y__h195 ;
  assign x__h201 = chk_interrupt_prv != 2'd3 || chk_interrupt_mstatus[3] ;
  assign x__h255 = x__h257 & y__h258 ;
  assign x__h257 = x__h259 & chk_interrupt_mideleg ;
  assign x__h259 = chk_interrupt_mie & chk_interrupt_mip ;
  assign x__h268 =
	     chk_interrupt_prv == 2'd0 ||
	     chk_interrupt_sstatus[1] && chk_interrupt_prv == 2'd1 ;
  assign x__h30 = { _theResult___snd__h76, _theResult___fst__h75 } ;
  assign y__h138 = {17{x__h177}} ;
  assign y__h140 = {17{x__h168}} ;
  assign y__h191 = {17{!chk_interrupt_debug[3]}} ;
  assign y__h193 = ~chk_interrupt_mideleg ;
  assign y__h195 = {17{x__h201}} ;
  assign y__h258 = {17{x__h268}} ;
endmodule  // module_chk_interrupt

